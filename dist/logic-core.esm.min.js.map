{"version":3,"file":"logic-core.esm.min.js","sources":["../src/message.js","../src/extend-error.js","../src/type.js","../src/util.js","../src/event-emitter.js","../src/i-object.js","../src/i-marshal.js","../src/i-collection.js","../src/i-collection-property.js","../src/i-element.js","../src/i-list.js","../src/i-control-list.js","../src/i-serialize.js","../src/i-collection-array.js","../src/namespace-manager.js","../src/meta-registry.js","../src/meta-object.js","../src/meta-element.js","../src/base-collection.js","../src/collection-array.js","../src/collection-property.js"],"sourcesContent":["/**** message.js | Message ****/\n//==============================================================\nimport  defaultCode  from './locales/default.json'\n// import {osLocale} from 'os-locale';\n\nconst localesPath = './locales';    // 상대 경로\n\n// inner function\nfunction _isObject(obj) {\n    return obj && typeof obj === 'object' && !Array.isArray(obj);\n}\nfunction _isString(obj) {    // 공백아닌 문자 여부\n    if (typeof obj === 'string' && obj.length > 0) return true;\n    return false;\n}\nfunction _deepMerge(target, source) {\n    for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n            var targetValue = target[key];\n            var sourceValue = source[key];\n            if (_isObject(sourceValue)) {\n                if (!_isObject(targetValue)) {\n                    target[key] = {};\n                }\n                target[key] = _deepMerge(target[key], sourceValue);\n            } else {\n                target[key] = sourceValue;\n            }\n        }\n    }\n    return target;\n}\n\nasync function _loadJSON(filePath) {\n    const isNode = typeof process !== 'undefined' && process.versions != null && process.versions.node != null && globalThis.isDOM !== true;\n    const isESM = isNode && (typeof require === 'undefined' || globalThis.isESM === true);   // REVIEW: test hack\n    \n    try {\n        if (isESM) {\n            return (await import(filePath, { with: { type: 'json' } })).default;\n        } else if (isNode) {\n            return require(filePath);\n        } else {\n            const response = await fetch(filePath);\n            return await response.json();\n        }\n    } catch (error) {\n        // console.log(`Error loading JSON file: ${filePath}`, error);\n        return;\n    }\n}\n\nfunction _getLocale() {\n    let locale = '';\n\n    if (typeof window !== 'undefined' && typeof navigator !== 'undefined') {\n        // 브라우저 환경\n        const lang = navigator.languages?.[0] || navigator.language || Intl.DateTimeFormat().resolvedOptions().locale;\n        locale = lang.split(/[_-]/)[0]; // \"ko-KR\" -> \"ko\"\n    } else if (typeof process !== 'undefined') {\n        // Node.js 환경\n        const rawLocale = process.env.LANG || process.env.LC_ALL || process.env.LANGUAGE;\n        if (rawLocale) {\n            locale = rawLocale.split(/[:_.]/)[0].replace('_', '-'); // \"ko_KR.UTF-8\" -> \"ko\"\n        }\n    }\n    return locale || 'en';\n}\n\nfunction _replacePlaceholders (p_template, p_values) {\n    let namedValues = {}, indexedValues = [];\n    \n    if (Array.isArray(p_values)) indexedValues = p_values;\n    else if (typeof p_values === 'object') namedValues = p_values;\n\n    // `${변수명}` 치환\n    p_template = p_template.replace(/\\$\\{(\\w+)\\}/g, function(match, key) {\n        return namedValues.hasOwnProperty(key) ? namedValues[key] : match;\n    });\n    // `$1, $2` 치환\n    p_template = p_template.replace(/\\$(\\d+)/g, function(match, index) {\n        var i = parseInt(index, 10) - 1;\n        return indexedValues[i] !== undefined ? indexedValues[i] : match;\n    });\n\n    return p_template;\n};\n\n/**\n * 'Message' is a class that manages messages and codes.  \n */\nclass Message {\n\n    /**\n     * Namespace path. ('Common')\n     */\n    static _NS = 'Common';\n    \n    /**\n     * Internal repository that stores message code.  \n     */\n    static $storage = {\n        lang: { default: {} },\n        path: []\n    };\n    \n    /**\n     * Sets whether automatic language detection is enabled. Default is true.  \n     */\n    // static autoDetect = true;\n    \n    /**\n     * Set the default language. Default is 'default'.  \n     */\n    static defaultLang = 'default';\n    \n    /**\n     * Sets the current language. Default is 'default'.  \n     */\n    static currentLang = this.defaultLang;\n\n    \n    /**\n     * Returns a message that corresponds to the message code.  \n     * \n     * @param {string} p_code Message code\n     * @returns {string} Message String\n     */\n    static getMessageByCode (p_code) {\n        var value = this.$storage.lang[this.currentLang]?.[p_code] || this.$storage.lang[this.defaultLang]?.[p_code];\n        return typeof value === 'number' ? String(value) : value;\n    };\n\n    /**\n     * Add the message code to the storage.  \n     * \n     * @param {object} p_msg Message Object\n     * @param {string} p_path Message file path\n     */\n    static importMessage (p_msg, p_path) {\n        // let locale;\n\n        if (_isObject(p_msg)) {\n            _deepMerge(this.$storage.lang.default, p_msg);\n            if (_isString(p_path)) this.$storage.path.push(p_path);\n        }\n\n        // locale = _getLocale();\n        // if (locale === 'en') locale = 'default';\n        // else await Message.changeLanguage(locale);\n    };\n\n    /**\n     * Change the language.  \n     * \n     * @param {string} p_lang language code\n     */\n    static async changeLanguage (p_lang) {\n        this.currentLang = p_lang;\n        if (p_lang === 'default') return;\n        for (var i = 0; i < this.$storage.path.length; i++) {\n            var localPath = this.$storage.path[i];\n            var msg = await _loadJSON(`${localPath}/${p_lang}.json`);\n\n            this.$storage.lang[p_lang] = this.$storage.lang[p_lang] || {};\n            // if (typeof $storage.lang[p_lang] === 'undefined') $storage.lang[p_lang] = {};\n\n            if (typeof msg === 'object') _deepMerge(this.$storage.lang[p_lang], msg);\n            else console.warn(`Path '${localPath}/${p_lang}' does not have a file.`);\n        }\n    }\n\n    /**\n     * Returns a string corresponding to the given message code.  \n     * \n     * @param {string} p_code Message code\n     * @param {object | string[]} p_values Value to replace in message\n     * @returns {string} 메시지\n     */\n    static get (p_code, p_values) {\n        var msg = Message.getMessageByCode(p_code);\n        var result;\n\n        if (typeof msg === 'undefined') {\n            return `There is no message for code. '${p_code}'`\n        }\n        result = _replacePlaceholders(msg, p_values);\n        return $intro(p_code) + result;\n\n        // inner funciton\n        function $intro(code) {\n            var intro = '';\n            var firstChar = code.substring(0, 1);\n            \n            if (firstChar === 'E') intro = 'Error';\n            else if (firstChar === 'W') intro = 'Warn';\n            return intro + ' ['+ code +'] ';\n        }\n    };\n\n    /**\n     * Initialize the language.  \n     */\n    static resetLang () {\n        // let locale;\n        this.currentLang = this.defaultLang;\n        // if (this.autoDetect) {\n        //     locale = _getLocale();\n        //     if (locale === 'en') locale = 'default';\n        //     await Message.changeLanguage(locale);\n        // }\n    }\n\n    /**\n     * Set the current language by automatically detecting the language.  \n     */\n    static async autoDetect () {\n        let locale = _getLocale();  // internal function\n        // let locale = await osLocale(); // external function\n        // locale = locale.split(/[_-]/)[0];\n\n        if (locale === 'en') locale = 'default';\n        await Message.changeLanguage(locale);\n    }\n}\n// console.log('Before import');\n// (async () => {\n//     await Message.importMessage(defaultCode, localesPath);\n// })();\n\n// async function main() {\n//     await (async () => {\n//     await Message.importMessage(defaultCode, localesPath);\n//     // await Messagde.importMessage(...);\n//     })(); // ← IIFE가 반환하는 promise를 여기서 await\n    \n//     console.log('importMessage가 끝난 후 실행됨');\n// }\n//  main();\n\n\n// await Message.importMessage(defaultCode, localesPath);\n// console.log('After import');\nMessage.importMessage(defaultCode, localesPath);\n\nexport default Message;\nexport { Message };","/**** extend-error.js | ExtendError ****/\n//==============================================================\nimport Message from './message.js';\n\n// inner function \nfunction _buildMessageProp(obj) {\n    var msg = '';\n    for (var prop in obj) {\n        if (typeof obj[prop] === 'string') msg += prop + ' : '+ obj[prop] + '\\n';\n        else continue;\n    }\n    return msg;\n}\nfunction _buildMsgQueue(queue) {\n    var msg = '';\n    var queue_cnt = queue.length;\n    for (var i = queue_cnt; i > 0; i--) {\n        var mark = '';\n        for (var j = i; j <= queue_cnt; j++) { mark += '#'; }\n        msg += '' + mark + ' '+ queue[i - 1] + '\\n';\n    }\n    return msg;\n}\n\nclass ExtendError extends Error {\n\n    static _NS = 'Common';      // namespace\n\n    /**\n     * Save previously generated messages.  \n     * \n     * @member {string[]} ExtendError#queue\n     */\n    queue = [];\n\n    /**\n     * Error message related to property type.  \n     * \n     * @member {object} ExtendError#prop\n     */\n    prop = {};\n\n    /**\n     * Use user messages to create an ExtendError instance.  \n     *\n     * @param {string} msg Error message string\n     * @param {ExtendError | object | null} causeOrProp Error message by existing ExtendError, Error object or property\n     *\n     * @example\n     * throw new ExtendError(\"Custom error message\");\n     * throw new ExtendError(\"Custom error message\", error);\n     * throw new ExtendError(\"Custom error message\", { style: \"required\" });\n     */\n\n    /**\n     * Create an instance of 'ExtendError' using the message code and substitution value.  \n     *\n     * @param {RegExp} msgPattern Code value of regular expression type\n     * @param {ExtendError | object | null} causeOrProp Error message by existing ExtendError, Error object or property\n     * @param {string[]} placeholders Array of strings containing substitution values such as '$1' and '$2' in the\n     *\n     * @example\n     * // For messages that do not have a substitution value\n     * throw new ExtendError(/EL01504/);\n     * throw new ExtendError(/EL01504/, error);\n     * throw new ExtendError(/EL01504/, { style: \"required\" });\n     * // For messages with substitution values\n     * throw new ExtendError(/EL01504/, undefined, ['value1', 'value2']);\n     * throw new ExtendError(/EL01504/, error, ['value1', 'value2']););\n     * throw new ExtendError(/EL01504/, { style: \"required\" }, ['value1', 'value2']);\n     */\n    constructor(p_msg, p_prop, p_codeVal) {\n        super()\n        \n        var _build = '';\n        var _prop;\n        var _queue = [];    \n        var _msg;\n\n        if (p_prop instanceof ExtendError) {\n            _queue = p_prop.queue;\n            _prop = p_prop.prop;\n        } else if (p_prop instanceof Error) {\n            _queue.push(p_prop.message);\n        } else if (typeof p_prop  === 'object' && p_prop !== null) {\n            _prop = p_prop;\n        }\n        \n        if (typeof p_msg === 'string') {\n            _msg = p_msg;\n        } else if (p_msg instanceof RegExp) {\n            _msg = Message.get(p_msg.source, p_codeVal);\n        } else _msg = '';\n        \n        _build = _msg + '\\n';\n        \n        if (_prop) _build += _buildMessageProp(_prop);\n        if (_queue.length > 0) _build += _buildMsgQueue(_queue);\n\n        this.message = _build;\n        this.queue = _queue;\n        this.queue.push(_msg);\n    }\n\n    /**\n     * Converts error messages into strings.  \n     * \n     * @return error message string\n     */\n    toString() {\n        return 'ExtendError : ' + this.message;\n    }\n}\n\nexport default ExtendError;\nexport { ExtendError };","/**** util-type.js Type ****/\n//==============================================================\nimport Message from './message.js';\nimport ExtendError from './extend-error.js';\n \nvar _global = globalThis;\nvar OLD_ENV = _global.OLD_ENV ? _global.OLD_ENV : false;    // 커버리지 테스트 역활\n\n/**\n * This is a type module.\n */\nvar Type = {};\n\n/**\n * object 와 new 생성한 사용자 함수를 제외한 객쳐 여부  \n * \n * @param {*} obj \n * @returns {boolean}\n */\nfunction _isPrimitiveObj(obj) { // REVIEW: 정리 필요, 의미적으로 명료하게..\n    if(typeof obj === 'object' && obj !== null \n        && (obj instanceof RegExp || obj instanceof Date )) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * 최상위 object 이거나 사용자 함수에서 생성한 객체 여부  \n * \n * @param {*} obj \n * @returns {boolean}\n */\nfunction _isObject(obj)  {  // REVIEW: 정리 필요, 의미적으로 명료하게\n    if(typeof obj === 'object' && obj !== null && !_isPrimitiveObj(obj)) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * 공백객체 인지 확인  \n * \n * @param {*} obj 검사대상\n * @returns {boolean}\n */\nfunction _isEmptyObj(obj)  {\n    if(_isObject(obj) && Object.keys(obj).length === 0 && getAllProperties(obj).length === 0) return true;\n    return false;\n}\n\n/**\n * 공백이 아닌 객체 (prototype 및 속성 있는것)  \n * \n * @param {*} obj 대상 \n * @returns {boolean}\n */\nfunction _isFillObj(obj)  {\n    if(_isObject(obj) && getAllProperties(obj).length > 0) return true;\n    return false;\n}\n\n/**\n * 내장함수 유무  \n * \n * @param {*} obj \n * @returns {boolean}\n */\nfunction _isBuiltFunction(obj) {\n    if (typeof obj === 'function' && (false \n        || obj === Number || obj === String || obj === Boolean\n        || obj === Object || obj === Array || obj === Function\n        || obj === RegExp || obj === Date \n        || obj === Symbol || obj === BigInt\n    )) return true;\n    return false;\n}\n\n/**\n * 첫문자 대문자 여부  \n * \n * @param {string} strValue \n * @returns {boolean}\n */\nfunction _isUpper(strValue) {\n    var firstStr = strValue.charAt(0);\n    if (firstStr === '') return false;\n    if(firstStr === firstStr.toUpperCase()) return true;\n    else false;\n}\n\n/**\n * 리터럴 여부  \n * number, string, boolean, bigint, RexExp instance  \n * \n * @param {*} obj \n * @returns {boolean}\n */\nfunction _isLiteral(obj) {\n    if (typeof obj  === 'number') return true;\n    if (typeof obj  === 'string') return true;\n    if (typeof obj  === 'boolean') return true;\n    if (typeof obj  === 'bigint') return true;\n    if (obj instanceof RegExp) return true;\n}\n\n/**\n * 리터럴값 비교  \n * number, string, boolean, bigint, RexExp instance  \n * \n * @param {*} obj1 \n * @param {*} obj2 \n * @returns {boolean}\n */\nfunction _equalLiternal(obj1, obj2) {\n    if (obj1 === obj2) return true;\n    if (obj1 instanceof RegExp && obj2 instanceof RegExp && obj1.source === obj2.source) return true;\n    return false;\n}\n\n/**\n * function 생성하는 생성자\n * @param {*} type \n * @returns {object}\n */\nvar _creator = function(type) {\n    return new type;\n}\n\n/**\n * 타임명 얻기  \n * \n * @param {*} obj \n * @returns {string}\n */\nfunction _typeName(obj) {\n    return obj['name'];\n}\n\n/**\n * kind 코드, 대문자로 얻기 '_any_'...  \n * \n * @param {*} val \n * @returns {string}\n */\nfunction _getKeyCode(val) {\n    var reg = /^_[a-zA-Z]+_/;\n    var result;\n\n    if (typeof val !== 'string') return;\n    result = reg.exec(val);\n    if (result !== null) return result[0].toUpperCase();\n}\n\n// 배열 구조 분해 할당을 해제 \nfunction restoreArrowFunction(transformedCode) {\n    // 1. 화살표 함수의 매개변수와 본문 전체를 추출\n    const regex = /\\((.*?)\\)\\s*=>\\s*\\{([\\s\\S]*)\\}/;\n    const match = transformedCode.match(regex);\n  \n    // 특별히 `_ref => { ... }` 형태도 대응할 수 있도록 추가 처리\n    //  -> _ref => { let [String] = _ref; return Number; }\n    //  -> 실제로는 ( _ref ) => { ... } 형태로 통일\n    if (!match) {\n      // 혹시 _ref => { ... } 형태라면, 강제로 괄호를 넣어 재시도\n      const altRegex = /^(.*?)\\s*=>\\s*\\{([\\s\\S]*)\\}/;\n      const altMatch = transformedCode.match(altRegex);\n      if (!altMatch) {\n        throw new Error('Invalid arrow function format.');\n      }\n      // altMatch[1] = \"_ref\"\n      // altMatch[2] = \"let [String] = _ref; return Number;\"\n      let altParams = altMatch[1].trim();\n      let altBody = altMatch[2].trim();\n  \n      // 화살표 함수 형태 통일:  ( _ref ) => { ... }\n      return restoreArrowFunction(`(${altParams}) => {${altBody}}`);\n    }\n  \n    // 2. 매개변수와 함수 본문 부분 분리\n    let params = match[1].trim();  // 함수의 매개변수 부분\n    let body = match[2].trim();    // 함수 본문\n  \n    // 3. 구조 분해 할당 패턴 (객체/배열 모두 대응) - 여러 줄(줄바꿈)도 허용\n    //    예: let { aa: String } = _ref5;  또는 let [[{ bb: Number }]] = _ref6;\n    const paramAssignments = body.match(/let\\s+(\\{[\\s\\S]*?\\}|\\[[\\s\\S]*?\\])\\s*=\\s*(\\w+);/g) || [];\n  \n    // 4. 찾아낸 구조 분해 할당들을 순회하며 매개변수( _ref5, _ref6 등 )를 원래 형태로 치환\n    paramAssignments.forEach(assign => {\n      // - parts[1]: { aa: String } 또는 [String] 등 (줄바꿈 포함 가능)\n      // - parts[2]: _ref5, _ref6 등\n      const parts = assign.match(/let\\s+(\\{[\\s\\S]*?\\}|\\[[\\s\\S]*?\\])\\s*=\\s*(\\w+);/);\n      if (parts) {\n        const extractedParam = parts[1].trim(); // 원래 구조\n        const originalParam = parts[2].trim();  // 변환된 변수명 (_ref5 등)\n  \n        // 매개변수 목록에 있던 _ref5 등을 { aa: String } 등으로 치환\n        const re = new RegExp(`\\\\b${originalParam}\\\\b`, 'g');\n        params = params.replace(re, extractedParam);\n      }\n    });\n  \n    // 5. return 문이 있다면 반환값을 추출\n    //    예: return Number; -> \"Number\"\n    const returnStatementMatch = body.match(/return\\s+(.*?);/);\n    let returnType = returnStatementMatch ? returnStatementMatch[1].trim() : '';\n  \n    // 6. 최종 복원 – return 문이 있다면 { return ... } 형태로, 없으면 { } 로\n    if (returnType) {\n      // 불필요한 공백 없애기 위해 파라메터 부분도 스페이스 정리\n      params = params.replace(/\\s+/g, '');\n      return `(${params})=>{return ${returnType}}`;\n    } else {\n      params = params.replace(/\\s+/g, '');\n      return `(${params})=>{}`;\n    }\n}\n\n/**\n * 함수 규칙   \n * - (params 내부에는 '()' 입력 금지)  \n * - 참조형 타입 금지 : new Function() 시점에 자동 해석됨  \n * \n * @param {*} funBody \n * @returns {object}\n */\nfunction _parseFunc(funBody) {\n    var syntax1 = /\\([,_\\[\\]{:}\\w\\s]*\\)\\s*(?:=>)?\\s*{\\s*.*\\s*.*\\s*}/;    // 제한 규칙\n    var syntax2 = /(\\(.*\\)|\\w+)\\s*(?:=>).*/;\n    var regFunc1 = /(?:function\\s)?\\(([\\[\\]{:}\\s\\w,]*)\\)\\s*(?:=>)?\\s*{(?:\\s*return\\s+|\\s*)?([\\[\\]{:}\\s\\w,]*);?\\s*}/;\n    var regFunc2 = /\\(?([\\[\\]{:}\\s\\w,]*)\\)?\\s*(?:=>)\\s*{?(?:\\s*return\\s+|\\s*)?([\\[\\]\\s\\w,]*);?\\s*}?/;\n    \n    var arrFunc;\n    var result = { params: [], return: undefined };\n    var arrParam = [];\n    var arrRetrun;\n    \n    // 배열 구조 분해 할당을 해제 \n    if (/\\blet\\b/.test(funBody)) funBody = restoreArrowFunction(funBody);\n    \n    funBody = $skipComment(funBody);\n\n    try {\n        if (syntax1.test(funBody)) arrFunc = regFunc1.exec(funBody);\n        else if (syntax2.test(funBody)) arrFunc = regFunc2.exec(funBody);\n        else throw new ExtendError(/EL01301/, null, [funBody]);\n        \n        if (arrFunc === null) throw new ExtendError(/EL01302/, null, [funBody]);\n\n        arrParam = (new Function('return ['+ arrFunc[1] +']'))();\n        result['params'] = arrParam;\n        \n        if (arrFunc[2] !== '') arrRetrun = (new Function('return '+ arrFunc[2]))()\n        result['return'] = arrRetrun;\n\n    } catch (error) {\n        throw new ExtendError(/EL01303/, error, ['']);\n    }\n\n    return result;\n\n    // inner function\n    function $skipComment(body) {    // 주석 제거 comment\n        var rBody = body;\n        var bloackComment = /\\/\\*[^](.*?)\\*\\//g\n        var lineComment = /\\/\\/[^](.*?)(\\n|$)/g\n\n        rBody = rBody.replace(bloackComment, '');\n        rBody = rBody.replace(lineComment, '');\n        return rBody;\n    }\n}\n\n/**\n * 타입 여부  \n * \n * @param {string} name \n * @returns {boolean}\n */\nfunction _hasType(name) {\n    var arr = [];\n    \n    if (typeof name !== 'string') return false;\n\n    arr = arr.concat(['null', 'undefined', 'number', 'string', 'boolean']);\n    arr = arr.concat(['array', 'function', 'object']);\n    arr = arr.concat(['choice', 'union', 'class']);\n    arr = arr.concat(['symbol', 'bigint', 'regexp']);\n    arr = arr.concat(['etc']);  // 예외 오류 코드 검출 \n\n    return arr.indexOf(name) > -1;\n}\n\n/**\n * 타입 여부  \n * \n * @param {string} name \n * @returns {boolean}\n */\nfunction _isLeafType(name) {\n    var arr = [];\n    \n    arr = arr.concat(['null', 'undefined', 'number', 'string', 'boolean']);\n    arr = arr.concat(['symbol', 'bigint', 'regexp', 'object']);\n\n    return arr.indexOf(name) > -1;\n}\n\n/**\n * choice type kind 여부  \n * \n * @param {string} name \n * @returns {boolean}\n */\nfunction _hasKindChoice(name) {\n    var arr = [];\n    \n    if (typeof name !== 'string') return false;\n    \n    arr = arr.concat(['_ALL_', '_ANY_', '_NON_', '_ERR_']);\n    arr = arr.concat(['_REQ_', '_OPT_', '_DEF_', '_EUM_']);\n    arr = arr.concat(['_ETC_']);  // 예외 오류 코드 검출 \n\n    return arr.indexOf(name) > -1;\n}\n\n/**\n * choice type kind 여부  \n * \n * @param {string} name \n * @returns {boolean}\n */\nfunction _hasKindArray(name) {\n    var arr = [];\n    \n    if (typeof name !== 'string') return false;\n\n    arr = arr.concat(['_ALL_', '_ANY_']);\n    arr = arr.concat(['_REQ_', '_OPT_', '_SEQ_']);\n    arr = arr.concat(['_ETC_']);  // 예외 오류 코드 검출 \n\n    return arr.indexOf(name) > -1;\n}\n\n/**\n * Query all properties of the object.\n * \n * @param {object} obj  Object to look up properties (except Object)\n * @param {boolean?} hasObj Whether to include properties of 'Object'\n * @returns {array<string>} Property Name Arrangement\n */\nfunction getAllProperties(obj, hasObj) {\n    var allProps = [], cur = obj;\n    var is = hasObj || false;\n    do {\n        var props = Object.getOwnPropertyNames(cur);\n        for (var i = 0; i < props.length; i++) {\n            var prop = props[i];\n            if (allProps.indexOf(prop) === -1 && (is || !Object.prototype.hasOwnProperty(prop))) allProps.push(prop);\n        }\n    } while (cur = Object.getPrototypeOf(cur))\n    return allProps;\n}\nType.getAllProperties = getAllProperties;\n\n/**\n * Compare the two objects to see if they are the same (except Prototype)  \n * \n * @param {any} obj1 Source object\n * @param {any} obj2 Object to compare\n * @returns {boolean} Whether the two objects are the same ('true' or 'false')\n */\nfunction deepEqual(obj1, obj2) {\n    // 두 객체가 동일한 참조를 가지면 true를 반환\n    if (obj1 === obj2) return true;\n\n    // 두 객체 중 하나가 null이거나 타입이 다르면 false를 반환\n    if (obj1 === null || obj2 === null || typeof obj1 !== typeof obj2) return false;\n\n    // 함수 비교\n    if (typeof obj1 === 'function' && typeof obj2 === 'function') {\n        return obj1.toString() === obj2.toString();\n    }\n\n    // 원시 값 비교\n    if (typeof obj1 !== 'object' || typeof obj2 !== 'object') return false;\n\n    // 배열 비교\n    if (Array.isArray(obj1) && Array.isArray(obj2)) {\n        if (obj1.length !== obj2.length) return false;\n        for (var i = 0; i < obj1.length; i++) {\n            if (!deepEqual(obj1[i], obj2[i])) return false;\n        }\n        return true;\n    }\n\n    // 객체 비교\n    // var keys1 = Object.keys(obj1);\n    // var keys2 = Object.keys(obj2);\n    var keys1 = Object.getOwnPropertyNames(obj1);\n    var keys2 = Object.getOwnPropertyNames(obj2);\n\n    if (keys1.length !== keys2.length) return false;\n\n    for (var j = 0; j < keys1.length; j++) {\n        var key = keys1[j];\n        if (keys2.indexOf(key) === -1 || !deepEqual(obj1[key], obj2[key])) return false;\n    }\n\n    return true;\n}\nType.deepEqual = deepEqual;\n\n// function deepEqual(obj1, obj2) {\n//     if (obj1 === obj2) return true;\n//     if (typeof obj1 !== typeof obj2) return false;\n//     if ($_isPrimitiveType(obj1) && !(obj1 === obj2)) return false;\n//     if (typeof obj1 === 'function' && !$equalFunction(obj1, obj2)) return false;\n\n//     if (Array.isArray(obj1)) {\n//         if (obj1.length !== obj2.length) return false;\n//         for (var i = 0; i < obj1.length; i++) {\n//             var val1 = obj1[i];\n//             var val2 = obj2[i];\n//             if (!deepEqual(val1, val2)) return false;\n//         }\n//     } else {\n//         if (Object.keys(obj1).length !== Object.keys(obj2).length) return false;\n//         for (var key in obj1) {\n//             if (Object.prototype.hasOwnProperty.call(obj1, key)) {\n//                 var val1 = obj1[key];\n//                 var val2 = obj2[key];\n//                 if (!deepEqual(val1, val2)) return false;\n//             }\n//         }\n//     }\n//     return true;\n//     // inner function\n//     function $equalFunction(fun1, fun2) {\n//         // if (typeof fun1 !== 'function') return false;\n//         // if (typeof fun2 !== 'function') return false;\n//         if (fun1 === fun2 || fun1.toString() === fun2.toString()) return true;\n//         return false;\n//     }\n//     function $_isPrimitiveType(obj) {\n//         if (typeof obj === 'string' || typeof obj === 'number' \n//             || typeof obj === 'boolean' || typeof obj === 'undefined' || typeof obj === 'bigint') return true;\n//         return false;\n//     }\n// }\n\n\n/**\n * Gets the type of the given function (generator). (Can include '_UNION')  \n * The returned arrays are included in order from the specified function.  \n * \n * @param {function} ctor Generator function or class\n * @param {boolean} [hasUnion= true] whether '_UNION' is included (default: 'true')\n * @returns {array<function>} Array function type\n */\nfunction getTypes(ctor, hasUnion) {\n    var arr = [];\n    var tempArr = [];\n    var union;\n    var proto;\n\n    hasUnion = hasUnion === false ? false : true;\n    \n    if (typeof ctor !== 'function') throw new ExtendError(/EL0130C/, null, [typeof ctor]);\n\n    arr.push(ctor);\n    proto = $getPrototype(ctor);        \n    \n    if (proto !== Function.prototype) {\n        arr = arr.concat(getTypes(proto, hasUnion));\n    }\n    if (hasUnion) {\n        union = ctor['_UNION'] || [];\n        for (var i = 0; i < union.length; i++) {\n            arr = arr.concat(getTypes(union[i], hasUnion));\n        }\n    }\n\n    for (var j = 0; j < arr.length; j++) {\n        var idx = tempArr.indexOf(arr[j]);\n        if (idx < 0) tempArr.push(arr[j]);\n    }\n    return tempArr;\n\n    // innner function\n    function $getPrototype(ctor) {\n        // if (ctor.hasOwnProperty('super')) return ctor.super;\n        if (Object.prototype.hasOwnProperty.call(ctor, 'super')) return ctor.super;\n        return !OLD_ENV && typeof Object.getPrototypeOf === 'function' ? Object.getPrototypeOf(ctor) : ctor.__proto__;\n    }\n}\nType.getTypes = getTypes;\n\n/**\n * Verify that the prototype (inheritance) chain of the function type contains the specified target.  \n * \n * @param {function} ctor Generator function or class\n * @param {function | string} target To be examined (generator function or class name)\n * @returns {boolean} whether to be included in the prototype chain ('true' or 'false')\n */\nfunction isProtoChain(ctor, target) {\n    var arr;\n    if (typeof ctor !== 'function') return false;\n    if (!(typeof target === 'function' || typeof target === 'string')) return false;\n\n    arr = getTypes(ctor, false);\n    for (var i = 0; i < arr.length; i++) {\n        if (typeof target === 'string') {\n            if (target === arr[i].name) return true;\n        } else {\n            if (target === arr[i]) return true;\n        }\n    }\n    return false;\n}\nType.isProtoChain = isProtoChain;\n\n/**\n * Verify that the given function type is included in the prototype (inheritance) chain or is of type '_UNION'.  \n * \n * @param {function} ctor Generator function or class\n * @param {function | string} target To be examined (generator function or class name)\n * @returns {boolean} Prototype chain or type '_UNION' ('true' or 'false')\n */\nfunction hasType(ctor, target) {\n    var arr;\n    if (typeof ctor !== 'function') return false;\n    if (!(typeof target === 'function' || typeof target === 'string')) return false;\n\n    arr = getTypes(ctor);\n    for (var i = 0; i < arr.length; i++) {\n        if (typeof target === 'string') {\n            if (target === arr[i].name) return true;\n        } else {\n            if (target === arr[i]) return true;\n        }\n    }\n    return false;\n}\nType.hasType = hasType;\n\n/**\n * Returns extension information of the target type in JSON format.  \n * Analyze the internal properties of the object to transform all properties into the format 'typeObject()'.  \n * \n * @param {*} target Target type\n * @returns {object} converted extension type object\n * @example\n * var obj = {\n *      $ype: '',\n *      default: null,                  // string, number, boolean, regexp\n *      kind: '',                       // array, choice\n *      creator: null, _instance: {},   // class\n *      _prop: {},                      // union\n *      params: [], return: null,       // function\n *      name: name, func: null,\n * }\n */\nfunction typeObject(target) {\n    var obj = {};\n    var typeObj = _isObject(target) && target['$type'] ? target : extendType(target);\n    var leafType = ['null', 'undefined', 'number', 'string', 'boolean', 'symbol', 'bigi¡nt', 'object', 'regexp'];\n\n    obj['$type'] = typeObj['$type'];\n    \n    if (typeObj['default'] !== null && typeof typeObj['default'] !== 'undefined') obj['default'] = typeObj['default'];\n    if (typeObj['kind'] !== null && typeof typeObj['kind'] !== 'undefined') obj['kind'] = typeObj['kind'];\n    if (typeObj['params']) obj['params'] = typeObj['params'];\n    if (typeObj['return']) obj['return'] = typeObj['return'];\n    if (typeObj['creator']) obj['creator'] = typeObj['creator'];\n    if (typeObj['_instance']) obj['_instance'] = typeObj['_instance'];\n\n    if (leafType.indexOf(obj['$type']) > -1) {\n        if (typeObj['default']) obj['default'] = typeObj['default'];\n        return obj;\n    }\n    if (obj['$type'] === 'array' ||  obj['$type'] === 'choice') {\n        obj['list'] = [];\n        for(var i = 0; i < typeObj['list'].length; i++) {\n            obj['list'][i] = typeObject(typeObj['list'][i]);\n        }\n    }\n    if (obj['$type'] === 'function') {\n        for(var j = 0; j < obj['params'].length; j++) {\n            obj['params'][j] = typeObject(typeObj['params'][j]);\n        }\n        if (typeObj['return']) obj['return'] = typeObject(typeObj['return']);\n    }\n    if (obj['$type'] === 'class') {\n        if (typeof typeObj['ref'] === 'function') {\n            obj['creator'] = typeObj['ref'].name; \n            var temp = _creator(typeObj['ref']);\n            obj['_instance'] = typeObject(temp);\n        }\n    }\n    if (obj['$type'] === 'union') {\n        obj['_prop'] = {};\n        var temp2 = typeObj['ref'] || typeObj['_prop'];\n        var list = getAllProperties(temp2);\n        for (var k = 0; k < list.length; k++) {\n            var key = list[k];\n            if ('_interface' === key || 'isImplementOf' === key ) continue;             // 예약어\n            obj['_prop'][key] = typeObject(temp2[key]);\n        }\n    }\n    return obj;\n}\nType.typeObject = typeObject;\n\n/**\n * Returns the extension type name of the target object.  \n * \n * @param {*} target Target object\n * @returns {string} extended type name\n */\nfunction typeOf(target) {\n    return extendType(target)['$type'];\n}\nType.typeOf = typeOf;\n\n/**\n * Returns the extension type of the target object.  \n * \n * @param {any} target Target object\n * @returns {object} extended type object\n * @example\n * var singleType = ['undefined', 'null', 'number', 'string', 'boolean', 'regexp', 'object', 'symbol'];\n * var unionType = ['array', 'choice', 'function', 'class', 'union'];\n */\nfunction extendType(target) {\n    var obj =  { $type: '', ref: undefined };\n\n    obj.toString = function(){\n        var temp = '';\n        var arr = [];\n        if (this['$type'] === 'array' || this['$type'] === 'choice') {\n            for (var i = 0; i < this['list'].length; i++) {\n                var _type = extendType(this['list'][i]);\n                if (_type['default'] && _type['default'] !== null) {\n                    var def;\n                    if (_type['$type'] === 'string') def = '\\''+ _type['default'] +'\\'';\n                    else def = _type['default'];\n                    arr.push(_type['$type'] + '('+ def +')');\n                } else arr.push(_type['$type']);\n            }\n            if (this['kind'] === '_OPT_' || this['kind'] === '_REQ_' || this['kind'] === '_SEQ_' || this['kind'] === '_EUM_' || this['kind'] === '_DEF_') {\n                temp = this['$type'] +'('+ this['kind'] +')['+ arr.join(', ')+ ']';\n            } else temp = this['$type'] +'('+ this['kind'] +')';\n            \n        } else {\n            temp = this['$type'];\n            if (this['default'] && this['default'] !== null) {\n                if (this['$type'] === 'string') temp += '(\\''+ this['default'] +'\\')';\n                else temp += '('+this['default']+')';\n            }\n        }\n        return temp;\n    }\n    // special type\n    if (typeof target === 'object'  && target !== null && target['$type']) {\n        obj['$type'] = target['$type'];\n        if (target['default']) obj['default'] = target['default'];\n        if (target['kind']) obj['kind'] = target['kind'];\n        if (target['ref']) obj['ref'] = target['ref'];\n        if (target['list']) obj['list'] = target['list'];\n        if (target['name']) obj['name'] = target['name'];\n        if (target['func']) obj['func'] = target['func'];\n        if (target['params']) obj['params'] = target['params'];\n        if (target['return']) obj['return'] = target['return'];\n        if (!_hasType(obj['$type'])) throw new ExtendError(/EL01304/, null, [obj['$type']]);\n        if (obj['$type'] === 'array') {\n            obj['kind'] = obj['kind'] || '_ALL_';\n            if (!_hasKindArray(obj['kind'])) throw new ExtendError(/EL01305/, null, [obj['kind']]);\n        }\n        if (obj['$type'] === 'choice') {\n            if (!_hasKindChoice(obj['kind'])) throw new ExtendError(/EL01306/, null, [obj['kind']]);\n        }\n        return obj;\n    } else {\n        obj['ref'] = target;\n    }\n\n    // step : operation\n    if (target === null) {\n        obj['$type'] = 'null';\n    } else if (target === Number) {\n        obj['$type'] = 'number';\n        obj['default'] = null;            \n    } else if (target === String) {\n        obj['$type'] = 'string';\n        obj['default'] = null;\n    } else if (target === Boolean) {\n        obj['$type'] = 'boolean';\n        obj['default'] = null;\n    } else if (target === Array) {\n        obj['$type'] = 'array';\n        obj['kind'] = '_ALL_';\n        obj['list'] = [];\n    } else if (target === Function) {\n        obj['$type'] = 'function';\n        obj['params'] = [];\n    } else if (target === Object) {\n        obj['$type'] = 'object';\n    } else if (target === RegExp) {\n        obj['$type'] = 'regexp';\n        obj['default'] = null;\n    } else if (target === Symbol) {      // ES6+\n        obj['$type'] = 'symbol';\n    } else if (target === BigInt) {      // ES6+\n        obj['$type'] = 'bigint';\n        obj['default'] = null;\n    } else if (target instanceof RegExp) {\n        obj['$type'] = 'regexp';\n        obj['default'] = target;\n    // step : typeof\n    } else if (typeof target === 'undefined') {\n        obj['$type'] = 'undefined';\n    } else if (typeof target === 'number') {\n        obj['$type'] = 'number';\n        obj['default'] = target;\n    } else if (typeof target === 'string') {\n        obj['$type'] = 'string';\n        obj['default'] = target;\n    } else if (typeof target === 'boolean') {\n        obj['$type'] = 'boolean';\n        obj['default'] = target;\n    } else if (typeof target === 'bigint') { // ES6+\n        obj['$type'] = 'bigint';\n        obj['default'] = target;\n    } else if (typeof target === 'symbol') { // ES6+\n        obj['$type'] = 'symbol';\n    // step : function\n    } else if (typeof target === 'function') {\n        var kind = target['_KIND'];\n        if (kind) {\n            kind = kind.toLowerCase();\n            if (kind === 'function') obj['$type'] = 'function';\n            else obj['$type'] = 'class';    // class, interface, abstract\n        } else obj['$type'] = _isUpper(target.name) ? 'class' : 'function';\n            \n        if (obj['$type'] === 'function') {\n            try {\n                var funcType  = target['_TYPE'] ? target['_TYPE'] : _parseFunc(target.toString());\n                obj['params'] = funcType['params'];\n                obj['return'] = funcType['return'];\n            } catch (_err) {\n                obj['params'] = [];\n            }\n        }\n    // step : array\n    } else if (Array.isArray(target)) {\n        if (target.length ===  1 && Array.isArray(target[0])) {\n            obj['$type'] = 'choice';\n            if (target[0].length === 0) obj['kind'] = '_ANY_';\n            else obj['kind'] = _getKeyCode(target[0][0]);\n            obj['list'] = obj['kind'] ? target[0].slice(1) : target[0];\n        } else {\n            obj['$type'] = 'array';\n            if (target.length === 0) obj['kind'] = '_ANY_';\n            else obj['kind'] = _getKeyCode(target[0]);\n            obj['list'] = obj['kind'] ? target.slice(1) : target;\n        }\n        if (!obj['kind']) obj['kind'] = '_OPT_';\n        // kind 검사\n        if (obj['$type'] === 'array' && !_hasKindArray(obj['kind'])) throw new ExtendError(/EL01307/, null, [obj['kind']]);\n        if (obj['$type'] === 'choice' && !_hasKindChoice(obj['kind'])) throw new ExtendError(/EL01308/, null, [obj['kind']]);\n\n    // step : object\n    } else if (_isFillObj(target) || _isEmptyObj(target)) {\n        obj['$type'] = 'union';\n    \n    // REVIEW:  기타 모든 함수는 object 로 처리한다. 더 좋은 방법이 있으면 대체 한다.\n    } else {\n    // } else if(_isPrimitiveObj(type)) {\n        obj['$type'] = 'object';\n    }\n    // } else throw new ExtendError(/EL01309/, null, []);    // REVIEW: 커버리지 확인시 주석 처리\n    return obj;\n}\nType.extendType = extendType;\n\n/**\n * 원본타입에 대상타입이 덮어쓰기가 허용 가능한지 검사합니다.  \n * 원본타입에 대상타입으로 캐스팅이 가능하지 확인합니다.\n * @param {any} extType 원본 타입\n * @param {any} tarType 대상 타입\n * @param {number} opt 허용옵션 : 0 = 기본, 1 = 타입생성 비교 \n * @param {string?} pathName '' 공백시 성공\n * @returns {throw?}\n */\nfunction _execAllow(extType, tarType, opt, pathName) {\n    var eType = extendType(extType);\n    var tType = extendType(tarType);\n    var prop = {};\n    var sExt = eType.toString(), sTar = tType.toString();\n    \n    pathName = pathName ? pathName : 'extType';\n    if (pathName !== 'extType' || !pathName) prop['error path'] = pathName;\n    opt = opt || 0;\n\n    // if (_isObject(eType['ref']) && _isObject(tType['ref']) && deepEqual(eType, tType)) return; // REVIEW: 필요없어  보이지만 잠시 남겨둠\n    // origin seq, opt 필수 검사\n    if (eType['kind']) {\n        if ((eType['kind'] === '_SEQ_' || eType['kind'] === '_OPT_' || eType['kind'] === '_REQ_' || eType['kind'] === '_EUM_'|| eType['kind'] === '_DEF_') \n        && eType['list'].length === 0) {\n            throw new ExtendError(/EL01201/, prop, ['extType', sExt]);\n        }\n    }\n    // tarType seq, opt 필수 검사\n    if (tType['kind']) {\n        if ((tType['kind'] === '_SEQ_' || tType['kind'] === '_OPT_' || tType['kind'] === '_REQ_'  || tType['kind'] === '_EUM_'|| tType['kind'] === '_DEF_') \n        && tType['list'].length === 0) {\n            throw new ExtendError(/EL01201/, prop, ['tarType', sTar]);\n        }\n    }\n    //  원본은 초이스가 아니고, tarType choice 의 인 경우\n    if (eType['$type'] !== 'choice' && tType['$type'] === 'choice' ) {\n        var choType = { $type: 'choice', kind: '_REQ_', list: [extType] };\n        _execAllow(choType, tarType, opt, pathName);\n        return;\n    }\n    // check allow type\n    if (_isLeafType(eType['$type'])) {\n        if(typeof eType['default'] !== 'undefined' && eType['default'] !== null && !_equalLiternal(eType['default'], tType['default'])) {\n            throw new ExtendError(/EL01202/, prop, [eType['$type'], eType, tType]);\n        }\n        if (eType['$type'] !== tType['$type']) throw new ExtendError(/EL01203/, prop, [eType['$type'], tType['$type']]);\n    \n    } else if (eType['$type'] === 'array')  $arrayAllow();\n    else if (eType['$type'] === 'choice') $choiceAllow();\n    else if (eType['$type'] === 'class') $classAllow();\n    else if (eType['$type'] === 'union') $unionAllow();\n    else if (eType['$type'] === 'function') $functionAllow();\n    else throw new ExtendError(/EL01204/, prop, []);\n\n    // inner function\n    function $arrayAllow() {\n        if (tType['$type'] !== 'array' || !Array.isArray(tType['list'])) throw new ExtendError(/EL01211/, prop, [tType['$type']]);\n        \n        // _ALL_ (all)\n        if (eType['kind'] === '_ALL_') {\n            return;\n\n        // _ANY_ (any)\n        } else if (eType['kind'] === '_ANY_') {\n            if (tType['kind'] === '_ANY_') return;\n            if (tType['kind'] === '_ALL_' || tType['kind'] === '_OPT_') {\n                throw new ExtendError(/EL01212/, prop, [sTar]);\n            }\n            return;\n\n        // _SEQ_ (sequence)\n        } else if (eType['kind'] === '_SEQ_') {\n            if (eType['kind'] !== tType['kind'])  throw new ExtendError(/EL01213/, prop, [tType]);\n            if (eType['list'].length > tType['list'].length) {\n                throw new ExtendError(/EL01214/, prop, [eType.list.length, tType.list.length]);\n            }\n\n            // element check\n            for (var i = 0; i < eType['list'].length; i++) {\n                try {\n                    _execAllow(eType['list'][i], tType['list'][i], opt, pathName);\n                } catch (error) {\n                    throw new ExtendError(/EL01215/, error, [i]);\n                }\n            }\n            return;\n        \n        // _REQ_ (require)\n        } else if (eType['kind'] == '_REQ_') {\n            if (tType['kind'] === '_ALL_' || tType['kind'] === '_ANY_' || tType['kind'] === '_OPT_') {\n                throw new ExtendError(/EL01216/, prop, [eType['$type'], sTar]);\n            }\n\n        // _OPT_ (option)\n        } else if (eType['kind'] === '_OPT_') {\n            if (tType['kind'] === '_ALL_' || tType['kind'] === '_ANY_' ) {\n                throw new ExtendError(/EL01217/, prop, [eType['$type'], sTar]);\n            }\n        \n        // _ETC_\n        } else {\n            throw new ExtendError(/EL01218/, prop, [eType['kind']]);\n        }\n\n        // element check\n        for (var k = 0; k < tType['list'].length; k++) {\n            var success = false;\n            for (var j = 0; j < eType['list'].length; j++) {\n                try {\n                    if (success) break;\n                    if (extendType(tType['list'][k])['$type'] === 'choice' && extendType(eType['list'][j])['$type'] !== 'choice' ) {\n                        var oriChoice = { $type: 'choice', kind: '_OPT_', list: eType['list'] };\n                        _execAllow(oriChoice, tType['list'][k], opt, pathName);\n                    } else {\n                        _execAllow(eType['list'][j], tType['list'][k], opt, pathName);\n                    }\n                    success = true;\n                } catch (error) {\n                    continue;\n                }\n            }\n            if (!success) throw new ExtendError(/EL01219/, prop, [eType, tType]);\n        }\n    }\n\n    function $choiceAllow() {\n        // _ALL_ (all)\n        if (eType['kind'] === '_ALL_') {\n            if (tType['$type'] === tType['$type'] && tType['kind'] === '_ERR_') {\n                throw new ExtendError(/EL01221/, prop, [eType['$type'], sTar]);\n            }\n            return;\n\n        // _ANY_ (any)\n        } else if (eType['kind'] === '_ANY_') {\n            if (tType['$type'] === 'undefined') throw new ExtendError(/EL01222/, prop, ['_ANY_', 'undefined']);\n            if (eType['$type'] === tType['$type'] && (tType['kind'] === '_ALL_' || tType['kind'] === '_OPT_' || tType['kind'] === '_ERR_' || tType['kind'] === '_NON_')) {\n                throw new ExtendError(/EL01223/, prop, [sTar]);\n            }\n            return;\n        \n        // _NON_ \n        } else if  (eType['kind'] === '_NON_') {\n            if (eType['$type'] !== tType['$type'] || eType['kind'] !== tType['kind']) {\n                // 4\n                throw new ExtendError(/EL01224/, prop, [sTar]);\n            }\n            return;\n\n        // _ERR_ (error)\n        } else if (eType['kind'] === '_ERR_') {\n            if (eType['$type'] !== tType['$type'] || eType['kind'] !== tType['kind']) {\n                // 5\n                throw new ExtendError(/EL01225/, prop, [sTar]);\n            }\n            return;\n\n        // _REQ_ (require)\n        } else if (eType['kind'] === '_REQ_') {\n            if (eType['$type'] === tType['$type'] && (tType['kind'] === '_ALL_' || tType['kind'] === '_ANY_' \n            || tType['kind'] === '_OPT_' || tType['kind'] === '_NON_' || tType['kind'] === '_ERR_')) {\n                // 6\n                throw new ExtendError(/EL01226/, prop, [sTar]);\n            }\n\n        // _OPT_ (option)\n        } else if (eType['kind'] === '_OPT_') {\n            if (tType['$type'] === 'undefined') return;\n            if (eType['$type'] === tType['$type'] && (tType['kind'] === '_ALL_' || tType['kind'] === '_ANY_' \n            || tType['kind'] === '_NON_' || tType['kind'] === '_ERR_')) {\n                // 7\n                throw new ExtendError(/EL01227/, prop, [sTar]);\n            }\n        \n            // _EUN_ (enumeration)\n        } else if (eType['kind'] === '_EUM_') {\n            if (eType['$type'] !== tType['$type'] || eType['kind'] !== tType['kind']) {\n                throw new ExtendError(/EL01228/, prop, []);\n            }\n            for (var i = 0; i < eType['list'].length; i++) {\n                if (!_isLiteral(eType['list'][i])) throw new ExtendError(/EL01229/, prop, [i, extendType(eType['list'][i])]);\n            }\n            for (var j = 0; j < tType['list'].length; j++) {\n                if (!_isLiteral(tType['list'][j])) throw new ExtendError(/EL0122A/, prop, [j, extendType(tType['list'][j])]);\n            }\n\n        // _DEF_ (default)\n        } else if (eType['kind'] === '_DEF_') {\n            if (eType['$type'] !== tType['$type'] || eType['kind'] !== tType['kind']) {\n                throw new ExtendError(/EL0122B/, prop, []);\n            }\n            if (!_isLiteral(eType['list'][0])) throw new ExtendError(/EL0122C/, prop, [extendType(eType['list'][0])]);\n            if (!_isLiteral(tType['list'][0])) throw new ExtendError(/EL0122D/, prop,  [extendType(tType['list'][0])]);\n\n        // _ETC_\n        } else {\n            throw new ExtendError(/EL0122E/, prop, [eType['kind']]);\n        }\n\n        // element check\n        var arrTarget = (tType['kind']) ? tType['list'] : [tarType];\n        for (var m = 0; m < arrTarget.length; m++) {\n            var success = false;\n            for (var n = 0; n < eType['list'].length; n++) {\n                try {\n                    if (success) continue;\n                    _execAllow(eType['list'][n], arrTarget[m], opt, pathName);\n                    success = true;\n                } catch (error) {\n                    continue;\n                }\n            }\n            if (!success) throw new ExtendError(/EL0122F/, prop, [m, eType, extendType(arrTarget[m])['$type']]);\n        }\n    }\n    \n    function $classAllow() {\n        var oriObj;\n        var tarObj;\n        if (tType['$type'] === 'class') {         // # class to class\n            if (isProtoChain(tType['ref'], eType['ref'])) return;   // 1.proto check\n            if (opt === 1) {\n                try {\n                    // 생성비교\n                    oriObj = new eType['ref']();\n                    tarObj = new tType['ref']();\n                    return _execAllow(oriObj, tarObj, opt, pathName);\n                } catch (error) {\n                    throw new ExtendError(/EL01231/, error, []);\n                }                    \n            }\n            throw new ExtendError(/EL01232/, prop, [opt]);\n\n        } else if (tType['$type'] === 'union') {  // # class to union\n            if (opt === 1) {\n                try {\n                    // 생성비교\n                    oriObj = new eType['ref']();\n                    return _execAllow(oriObj, tType['ref'], opt, pathName);\n                } catch (error) {\n                    throw new ExtendError(/EL01233/, error, []);\n                }                    \n            }\n            throw new ExtendError(/EL01234/, prop, [opt]);\n\n        }\n        throw new ExtendError(/EL01235/, prop, [tType]);\n    }\n\n    function $unionAllow() {\n        var list;\n\n        if (tType['$type'] !== 'union') throw new ExtendError(/EL01241/, prop, [tType]);\n        list = getAllProperties(eType['ref']);\n\n        for (var i = 0; i < list.length; i++) {\n            var key = list[i];\n            if (!(key in tType['ref'])) throw new ExtendError(/EL01242/, prop, [key, typeOf(extType[key])]);      \n            try {\n                _execAllow(eType['ref'][key], tType['ref'][key], opt, pathName);\n            } catch (error) {\n                throw new ExtendError(/EL01243/, error, [key]);\n            }\n        }\n    }\n\n    function $functionAllow() {\n        if (tType['$type'] !== 'function')  throw new ExtendError(/EL01251/, prop, [tType]);\n        if (eType['ref'] === Function) return;\n        // special type check\n        if (eType['name']) {\n            if (eType['name'] === tarType.name  \n            || eType['name'] === tType['name'] \n            || (tType['func'] && eType['name'] === tType['func'].name)) return;\n            throw new ExtendError(/EL01252/, prop, [eType['name'], tType.name]);\n        }\n        if (eType['func']) {\n            if (typeof tType['func'] !== 'function') throw new ExtendError(/EL01253/, prop, []);\n            if (isProtoChain(tType['func'], eType['func'])) return;\n            throw new ExtendError(/EL01254/, prop, []);\n        }\n\n        if (!eType['return'] && (!eType['params'] || eType['params'].length === 0)) return;\n        if (typeof tType['params'] === 'undefined' && typeof tType['return'] === 'undefined') { \n            throw new ExtendError(/EL01255/, prop, [extendType(eType.params), typeOf(eType.return)]);\n        }\n        if (Array.isArray(eType['params']) && eType['params'].length > 0) {  \n            try {   // params check\n                _execAllow(['_SEQ_'].concat(eType['params']), ['_SEQ_'].concat(tType['params']), opt, pathName);\n            } catch (error) {\n                throw new ExtendError(/EL01256/, error, []);\n            }\n        }\n        if (eType['return']) {            \n            try {   // return check\n                _execAllow(eType['return'], tType['return'], opt, pathName);\n            } catch (error) {\n                throw new ExtendError(/EL01257/, error, []);\n            }\n        }\n    }\n}\n\n/**\n * 타입을 검사하여 메세지를 리턴\n * @param {any} extType 검사할 타입 , extType \n * @param {any} target 검사대상\n * @param {number} [opt] 허용옵션 : 0 = 기본, 1 = 타입생성 비교 \n * @param {string} [pathName] '' 공백시 성공\n * @throws {ExtendError}\n */\nfunction _execMatch(extType, target, opt, pathName) {\n    var eType = extendType(extType);\n    var tType = extendType(target);\n    var prop = {};\n    var sExt = eType.toString(), sTar = tType.toString();\n    \n    pathName = pathName ? pathName : 'extType';\n    if (pathName !== 'extType') prop['error path'] = pathName;    // TODO: 'target' 명칭의 중복 수정필요\n    opt = opt || 0;\n\n    // seq, opt 필수 검사\n    if (eType['kind']) {\n        if ((eType['kind'] === '_SEQ_' || eType['kind'] === '_OPT_' || eType['kind'] === '_REQ_' || eType['kind'] === '_EUM_'|| eType['kind'] === '_DEF_') \n        && (typeof eType['ref'] === 'undefined' || eType['list'].length === 0)) {\n            throw new ExtendError(/EL01101/, prop, ['extType', sExt]);\n        }\n    }\n\n    // check match type\n    if (eType['$type'] === 'null') {\n        if (target !== null) throw new ExtendError(/EL01102/, prop, ['null', sTar]);\n    \n    } else if (eType['$type'] === 'undefined') {\n        if (typeof target !== 'undefined') throw new ExtendError(/EL01102/, prop, ['undefined', sTar]);\n    \n    } else if (eType['$type'] === 'string') {\n        if (typeof eType['default'] === 'string' && typeof target === 'undefined') target = eType['default'];\n        if (typeof target !== 'string') throw new ExtendError(/EL01102/, prop, ['string', sTar]);\n    \n    } else if (eType['$type'] === 'number') {\n        if (typeof eType['default'] === 'number' && typeof target === 'undefined') target = eType['default']; \n        if (typeof target !== 'number') throw new ExtendError(/EL01102/, prop, ['number', sTar]);\n    \n    } else if (eType['$type'] === 'boolean') {\n        if (typeof eType['default'] === 'boolean' && typeof target === 'undefined') target = eType['default'];\n        if (typeof target !== 'boolean') throw new ExtendError(/EL01102/, prop, ['boolean', sTar]);\n    \n    } else if (eType['$type'] === 'bigint') {    // ES6+\n        if (typeof eType['default'] === 'bigint' && typeof target === 'undefined') target = eType['default'];\n        if (typeof target !== 'bigint') throw new ExtendError(/EL01102/, prop, ['bigint', sTar]);\n    \n    } else if(eType['$type'] === 'symbol') {    // ES6+\n        if (typeof target !== 'symbol') throw new ExtendError(/EL01102/, prop, ['symbol', sTar]);\n    \n    } else if (eType['$type'] === 'regexp') {\n        if (eType['default'] && eType['default'] !== null && typeof target === 'undefined') target = eType['default'];\n        if (!(target instanceof RegExp)) throw new ExtendError(/EL01102/, prop, ['regexp', sTar]);\n    \n    } else if (eType['$type'] === 'object') {\n        if (tType['$type'] !== 'object') throw new ExtendError(/EL01102/, prop, ['object', sTar]);\n\n    } else if (eType['$type'] === 'array') $arrayMatch();\n    else if (eType['$type'] === 'choice') $choiceMatch();\n    else if (eType['$type'] === 'class') $classMatch();\n    else if (eType['$type'] === 'union') $unionMatch();\n    else if (eType['$type'] === 'function') $functionMatch();        \n    else throw new ExtendError(/EL01103/, prop, []);\n\n    // inner function\n    function $arrayMatch() {\n        if (!Array.isArray(target)) throw new ExtendError(/EL01111/, prop, [sTar]);\n        \n        // _ALL_ (all)\n        if (eType['kind'] === '_ALL_') {      \n            return;\n\n        // _ANY_ (any)\n        } else if (eType['kind'] === '_ANY_') {\n            if (target.length === 0) throw new ExtendError(/EL01112/, prop, [target.length]);\n            return;\n\n        // _SEQ_ (sequence)\n        } else if (eType['kind'] === '_SEQ_') {\n            if (eType['list'].length > target.length) throw new ExtendError(/EL01113/, prop, [eType['list'].length, tType['list'].length]);    // REVIEW: 세부정보 표현\n            for(var i = 0; i < eType['list'].length; i++) {\n                var _elem   = eType['list'][i];\n                var _tar    = tType['list'][i];\n                if (_isLiteral(_elem)) {\n                    if (!_equalLiternal(_elem, _tar)) throw new ExtendError(/EL01114/, prop, [i, _elem, _tar]);\n                } else {\n                    try {\n                        _execMatch(_elem, _tar, opt, pathName)\n                    } catch (error) {\n                        throw new ExtendError(/EL01115/, error, [i, typeOf(_elem)]);\n                    }\n                }\n            }\n            return;\n\n        // _REQ_ (require)\n        } else if (eType['kind'] === '_REQ_') {\n            if (target.length === 0) throw new ExtendError(/EL01116/,  prop, [target.length]);\n\n        // _OPT_ (option)\n        } else if (eType['kind'] === '_OPT_') {\n            if (Array.isArray(target) && target.length === 0) return;\n\n        // _ETC_\n        } else {\n            throw new ExtendError(/EL01117/,  prop, [eType['kind']]);\n        }\n        \n\n        // element check\n        for (var k = 0; k < target.length; k++) {\n            var tar = target[k];\n            var success = false;\n            for (var j = 0; j < eType['list'].length; j++) {\n                try {\n                    var elem = eType['list'][j];\n                    if (_isLiteral(elem)) {\n                        if (_equalLiternal(elem, tar)) {\n                            success = true;\n                            break;\n                        }\n                    } else {\n                        _execMatch(elem, tar, opt, pathName);    // REVIEW: pathName + '['+i+']'  이렇게 들어가야 함\n                        success = true;\n                        break;\n                    }\n                } catch (error) {\n                    continue;\n                }\n            }\n            if (!success) {\n                throw new ExtendError(/EL01118/, prop, [eType.toString(), tType.toString()]);\n            }\n        }\n    }\n\n    function $choiceMatch() {\n        // _ALL_ (all)\n        if (eType['kind'] === '_ALL_') {\n            return;\n\n        // _ANY_ (any)\n        } else if (eType['kind'] === '_ANY_') {\n            if (typeof target !== 'undefined') return;\n            throw new ExtendError(/EL01121/, prop, []);\n\n        // _NON_ (none)\n        } else if (eType['kind'] === '_NON_') {\n            if (typeof target === 'undefined') return;\n            throw new ExtendError(/EL01122/, []);\n            \n        // _ERR_ (error)\n        } else if (eType['kind'] === '_ERR_') {\n            if (target instanceof Error) return;\n            throw new ExtendError(/EL01123/, []);\n\n        // _REQ_ (require)\n        } else if (eType['kind'] === '_REQ_') {\n\n        // _OPT_ (option)\n        } else if (eType['kind'] === '_OPT_') {\n            if (typeof target === 'undefined') return;\n\n        // _EUN_ (enumeration)\n        } else if (eType['kind'] === '_EUM_') {\n            for (var i = 0; i < eType['list'].length; i++) {\n                if (!_isLiteral(eType['list'][i])) throw new ExtendError(/EL01124/, prop, [i, typeOf(eType['list'][i])]);\n            }\n\n        // _DEF_ (default)\n        } else if (eType['kind'] === '_DEF_') {\n            if (!_isLiteral(eType['list'][0])) throw new ExtendError(/EL01125/, prop, [typeOf(eType['list'][0])]);\n            if (typeof target === 'undefined') {\n                target = eType['list'][0];\n                return;\n            }\n        \n        // _IDX_ (index)\n        // } else if (eType['kind'] === '_IDX_') {\n            /**\n             * POINT:\n             * - 검사\n             *  + target object 검사\n             *  -\\+ 파라메터 2개 검사\n             * \n             * - 인덱스 타입 목록 추출\n             * \n             * - 초이스로 변환\n             *  + 허용타입들 + \n             * \n             * this.command = [['_AND_',  { aa: 1 }, ClassA ]]\n             * [['_IDX_', String]]\n             * [['_KEY_', Number, String, '리터럴']]\n             * \n             * this.command = [['_AND_', [['_IDX_', String]], [['_KEY_', Number, String, '리터럴']] ]]\n             * \n             * 마지막에 리턴 및 실패 처리\n             */\n\n            /**\n             * - 검사\n             *  + 타겟의 object 여부 검사\n             *  + 파라메터 1개 이상 검사\n             * - 조건문 처리\n             *  + 둘다 성공해야 성공\n             */\n            // POINT: 개발 해야함\n            // if (eType['list'].length === 0) throw new ExtendError('TODO: IDX 는 검사 타입이 없습니다. 하나이상 있어야 합니다.', prop, []);\n            // if (tType['$type'] !== 'union') throw new ExtendError('TODO: IDX 는 검사 대상이 object(union) 타입만 가능합니다.', prop, ['object', sTar]);\n\n            // for(var i = 0; i < eType['list'].length; i++) {\n            //     var _elem   = eType['list'][i];\n                \n            //     // var _tar    = tType['list'][i];\n            //     try {\n            //         _execMatch(_elem, target);\n            //     } catch (error) {\n            //         throw new ExtendError('TODO: ', error, []);\n            //     }\n                \n            // }\n        \n        // _ETC_\n        } else {\n            throw new ExtendError(/EL01126/,  prop, [eType['kind']]);\n        }\n\n        // element check\n        for (var j = 0; j < eType['list'].length; j++) {\n            try {\n                var elem = eType['list'][j];\n                if (_isLiteral(elem)) {\n                    if (_equalLiternal(elem, target)) return;\n                } else {\n                    return _execMatch(elem, target, opt, pathName);\n                }\n            } catch (error) {\n                continue;\n            }\n        }\n        throw new ExtendError(/EL01127/, prop,[eType, tType]);\n    }\n\n    function $classMatch() {\n        if (tType['$type'] === 'class') {         // # class to class\n            if (typeof eType['ref'] === 'undefined') return;  // 전역 클래스 타입\n            if (isProtoChain(tType['ref'], eType['ref'])) return;\n        } else if (typeof target === 'object') {    // # class to typeof 'object'\n            if (target instanceof extType) return;     \n            if (!_isBuiltFunction(extType) && target !== null && opt === 1) {\n                try {\n                    var subPath = pathName === 'extType' ? '<instance>' : pathName + '<instance>';\n                    return _execMatch(_creator(extType), target, opt, subPath);\n                } catch (error) {\n                    throw new ExtendError(/EL01131/, error);\n                }\n            }\n            throw new ExtendError(/EL01132/, prop, [_typeName(extType)]);\n        }\n        throw new ExtendError(/EL01133/, prop, [tType]);                \n    }\n\n    function $unionMatch() {\n        var list;\n        \n        if (tType['$type'] !== 'union') throw new ExtendError(/EL01141/, prop, [tType]);\n        list = getAllProperties(eType.ref);\n\n        for (var i = 0; i < list.length; i++) {\n            var key = list[i];\n            var listDefType = extendType(extType[key]);\n            // REVIEW: for 위쪽으로 이동 검토!\n            if ('_interface' === key || 'isImplementOf' === key ) continue;             // 예약어\n            // REVIEW: 재귀로 구현 체크\n            if (typeof listDefType['default'] !== 'undefined' && listDefType['default'] !== null && typeof target[key] === 'undefined')      // default 설정\n            target[key] = listDefType['default'];\n            // POINT:\n            // if (target !== null && !(key in target)) throw new ExtendError(/EL01142/, prop, [key, typeOf(extType[key])]);    \n            try {\n                var subPath = pathName +'[\\''+ key+'\\']';\n                _execMatch(extType[key], target[key], opt, subPath);\n            } catch (error) {\n                throw new ExtendError(/EL01143/, error, [key]);\n            }\n        }\n    }\n\n    function $functionMatch() {\n        if (tType['$type'] !== 'function') throw new ExtendError(/EL01151/, prop, [tType]);\n        if (eType['ref'] === Function) return;\n        // special type check\n        if (eType['name']) {\n            if (eType['name'] === target.name \n            || eType['name'] === tType['name'] \n            || (tType['func'] && eType['name'] === tType['func'].name)) return;\n            throw new ExtendError(/EL01152/, prop, [eType['name'], target.name]);\n        }\n        if (eType['func']) {\n            if (typeof tType['func'] !== 'function') throw new ExtendError(/EL01153/, prop, []);\n            if (isProtoChain(tType['func'], eType['func'])) return;\n            throw new ExtendError(/EL01154/, prop, []);\n        }\n\n        if (!eType['return'] && (!eType['params'] || eType['params'].length === 0)) return;\n        if (typeof tType['params'] === 'undefined' && typeof tType['return'] === 'undefined') { \n            throw new ExtendError(/EL01155/, prop, [extendType(eType.params), typeOf(eType.return)]);\n        }\n        // params check\n        if (Array.isArray(eType['params']) && eType['params'].length > 0) {  \n            try {\n                _execAllow(['_SEQ_'].concat(eType['params']), ['_SEQ_'].concat(tType['params']), opt, pathName);\n            } catch (error) {\n                throw new ExtendError(/EL01156/, error, []);\n            }\n        }\n        // return check\n        if (eType['return']) {            \n            try {\n                _execAllow(eType['return'], tType['return'], opt, pathName);\n            } catch (error) {\n                throw new ExtendError(/EL01157/, prop, []);\n            }\n        }\n    }\n}\n\n/**\n * Verify that the extension type allows the target type.  \n * \n * @param {any} extType Extension Type\n * @param {any} tarType What type to check\n * @param {number} [opt=0] Allow option (0 = Keep existing, 1 = Create class type)\n * @returns {throw?} Exception occurs if extension type does not allow target type\n */\nfunction allowType(extType, tarType, opt) {\n    try {\n        _execAllow(extType, tarType, opt);\n    } catch (error) {\n        throw new ExtendError(/EL0130A/, error);\n    }\n}\nType.allowType = allowType;\n\n/**\n * Verify that the extension type matches the target.  \n * \n * @param {any} extType Extension Type\n * @param {any} target For inspection\n * @param {number} [opt=0] Allow option (0 = Keep existing, 1 = Create class type)\n * @returns {throw?} Exception occurs when failing\n */\nfunction matchType(extType, target, opt) {\n    try {\n        _execMatch(extType, target, opt);\n    } catch (error) {\n        throw new ExtendError(/EL0130B/, error);\n    }\n}\nType.matchType = matchType;\n\n/**\n * Determine whether the extension type allows the target type.  \n * \n * @param {any} extType Extension Type\n * @param {any} target Type to be examined\n * @param {number} opt Allow option (0 = Keep existing, 1 = Create class type)\n * @returns {boolean} whether to allow ('true' or 'false')\n */\nfunction isAllowType(extType, target, opt) {\n    try {\n        _execAllow(extType, target, opt);\n    } catch (error) {\n        return false;\n    }\n    return true;\n}\nType.isAllowType = isAllowType;\n\n/**\n * Verify that the extension type matches the target.  \n * \n * @param {any} extType Extension Type\n * @param {any} target Type to be examined\n * @param {number} [opt] Allow option (0 = Keep existing, 1 = Create class type)\n * @returns {boolean} Match or not ('true' or 'false')\n */\nfunction isMatchType(extType, target, opt) {\n    try {\n        _execMatch(extType, target, opt);\n        return true;\n    } catch (error) {\n        return false;\n    }\n}\nType.isMatchType = isMatchType;\n\nexport default Type;\nexport { Type };","/**** util.js | Util ****/\n//==============================================================\nimport Message from './message.js';\nimport ExtendError from './extend-error.js';\nimport Type from './type.js';\n   \nvar _global = globalThis;\n\nvar OLD_ENV = _global.OLD_ENV ? _global.OLD_ENV : false;    // 커버리지 테스트 역활\n\n/**\n * This is a utility module.\n */\nvar Util = {};\n\n\n// local function\nfunction _isObject(obj) {\n    return obj != null && typeof obj === 'object';\n}\n\n// polyfill\nif (!Array.isArray || OLD_ENV) {\n    Array.isArray = function(p_obj) {\n        return Object.prototype.toString.call(p_obj) === '[object Array]';\n    };\n}\n// REVIEW: 제거해둠, 대부분은 keys 는 기본으로 정의되어 있음\n// if (!Object.keys) {\n//     Object.keys = (function () {\n//         var hasOwnProperty = Object.prototype.hasOwnProperty;\n//         var hasDontEnumBug = !({toString: null}).propertyIsEnumerable('toString');\n//         var dontEnums = ['toString', 'toLocaleString', 'valueOf', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'constructor'];\n//         var dontEnumsLength = dontEnums.length;\n//         return function (obj) {\n//             if (typeof obj !== 'object' && typeof obj !== 'function' || obj === null) throw new Error('Object.keys called on non-object');\n//             var result = [];\n//             for (var prop in obj) if (hasOwnProperty.call(obj, prop)) result.push(prop);\n//             if (hasDontEnumBug) {\n//               for (var i=0; i < dontEnumsLength; i++) {\n//                 if (hasOwnProperty.call(obj, dontEnums[i])) result.push(dontEnums[i]);\n//               }\n//             }\n//             return result;\n//         }\n//     })()\n// };\n\n/**\n * Returns the nested depth of the array.  \n * REVIEW: 필요성 검토 필요!\n * \n * @param {array} p_elem Array elements\n * @param {number} p_depts Current depth (default: 0)\n * @returns {number} Maximum nested depth of array\n */\nUtil.getArrayDepth = function getArrayDepth(p_elem, p_depts) {\n    var MAX     = 10;\n    var level   = 0;\n    \n    p_depts = p_depts || 0;\n    if (p_elem instanceof Array && MAX > p_depts) {\n        level++;\n        p_depts++;\n        level = level + getArrayDepth(p_elem[0], p_depts);\n    }\n    return level;\n};\n\n/**\n * Creates a 36-digit GUID.  \n * \n * @returns {string} GUID string generated\n */\nUtil.createGuid = function createGuid() {\n    function _p8(s) {  \n        var p = (Math.random().toString(16)+'000000000').substring(2,10);  \n        return s ? '-' + p.substring(0, 4) + '-' + p.substring(4, 8) : p ;  \n    }\n    return _p8() + _p8(true) + _p8(true) + _p8();\n};\n\n/**\n * Deep copy of the object (except prototype)  \n * \n * @param {object} p_target Destination object to copy\n * @returns {object} copied object\n */\nUtil.deepCopy = function deepCopy(p_target) {\n    var nobj;\n\n    if (!_isObject(p_target)) {\n        return p_target;\n    }\n    if (p_target instanceof RegExp) return p_target;\n\n    // 객체인지 배열인지 판단\n    nobj = Array.isArray(p_target) ? [] : {};\n    \n    if (Array.isArray(p_target)) {\n        for (var i = 0; i < p_target.length; i++) {\n            nobj[i] = deepCopy(p_target[i]);\n        }\n    } else {\n        for (var key in p_target) {\n            if (Object.prototype.hasOwnProperty.call(p_target, key)) {\n                nobj[key] = deepCopy(p_target[key]);\n            }\n        }\n    }\n    return nobj;\n}    \n\n/**\n * Sets the specified creator to inherit the parent creator.   \n * \n * @function\n * @param {function | object} ctor generator function or object\n * @param {function | object} superCtor Parent generator function or object\n */\nUtil.inherits = (function () {\n    if (typeof Object.create === 'function' && !OLD_ENV) {\n        // implementation from standard node.js 'Util' module\n        return function(ctor, superCtor) {\n            if (superCtor) {\n                ctor.super = superCtor;\n                ctor.prototype = Object.create(superCtor.prototype, {\n                    constructor: {\n                        value: ctor,\n                        writable: true,\n                        configurable: true,\n                        enumerable: false,\n                    }\n                });\n            }\n        };\n    } else {\n        // old school shim for old browsers\n        return function (ctor, superCtor) {\n            if (superCtor) {\n                ctor.super = superCtor;\n                var TempCtor = function () {};\n                TempCtor.prototype = superCtor.prototype;\n                ctor.prototype = new TempCtor();\n                ctor.prototype.constructor = ctor;\n            }\n        }\n    }\n}());\n\n/**\n * Verify that the object implements the specified interface.  \n * Verify that the 'obj' object created with 'ctor' implements the interface provided by 'interfaces'.  \n * If 'ctor._KIND' is 'Interface', use 'allowType()' to confirm.  \n * Otherwise, use 'matchType()' to confirm.  \n * \n * @name implements\n * @function\n * @param {function} p_ctor Generator to be examined\n * @param {object} p_obj object to be examined\n * @param {function?} args List of interfaces to check\n */\nUtil.implements = function(p_ctor, p_obj) {\n    var _interface = [];\n    var addCnt = 0;\n\n    if (typeof p_ctor !== 'function') throw new ExtendError(/EL01401/, null, [typeof p_ctor]);\n    if (!_isObject(p_obj)) throw new ExtendError(/EL01402/, null, [typeof p_obj]);\n\n    if (typeof p_obj._interface === 'undefined') {\n        Object.defineProperty(p_obj, '_interface', {\n            get: function() { \n                return _interface;\n            },\n            configurable: false,\n            enumerable: false,\n        });\n    }    \n\n    if (!p_ctor['_UNION']) p_ctor['_UNION'] = [];\n    \n    for(var i = 2; i < arguments.length; i++) {\n        if (typeof arguments[i] === 'function') {\n            if (p_obj._interface.indexOf(arguments[i]) < 0) { // 중복 검사 \n                p_obj._interface.push(arguments[i]);\n                addCnt++;\n            }\n        } else throw new ExtendError(/EL01403/, null, [i - 2, typeof arguments[i]]);\n    } \n\n    for (var j = 0; j < p_ctor['_UNION'].length; j++) {\n        if (p_obj._interface.indexOf(p_ctor['_UNION'][j]) < 0) {    // 인터페이스 중복 검사 후 등록\n            p_obj._interface.push(p_ctor['_UNION'][j]);\n            addCnt++;\n        }\n    }\n\n    try {\n        var beginIdx = p_obj._interface.length - addCnt;\n        for (var k = beginIdx; k < p_obj._interface.length; k++) {\n            if (p_ctor['_KIND'] === 'interface') {  // 인터페이스 타입과 분리\n                Type.allowType(p_obj._interface[k], p_obj, 1);\n            } else Type.matchType(p_obj._interface[k], p_obj, 1);\n        }\n    } catch (error) { \n        throw new ExtendError(/EL01404/, error, [$typeName(p_obj), $typeName(p_obj._interface[i]), p_ctor['_KIND'] || 'class']);\n    }\n\n    if (typeof p_obj.isImplementOf === 'undefined') {   // 내부 메소드 설정\n        Object.defineProperty(p_obj, 'isImplementOf',\n        {\n            value: $isImplementOf,\n            configurable: false,\n            enumerable: false\n        });\n    }\n\n    // inner function\n    function $isImplementOf(target) {\n        if (typeof target === 'function') {\n            for (var i = 0; i < this._interface.length; i++) {\n                if (this._interface[i] === target) return true;  \n            }\n        } else if (typeof target === 'string') {\n            for (var j = 0; j < this._interface.length; j++) {\n                if (this._interface[j].name === target) return true;  \n            }\n        } else throw new ExtendError(/EL01405/, null, [typeof target]);\n        return false;\n    }\n    function $typeName(obj) {\n        var proto;\n        var constructor;\n        if (typeof obj === 'function') {\n            return obj.name;\n        } else if (typeof obj === 'object') {\n            proto = !OLD_ENV && Object.getPrototypeOf ? Object.getPrototypeOf(obj) : obj.__proto__ ;\n            constructor = proto.constructor;\n            return  constructor.name;\n        } else return 'unknown name';\n    }\n};\n\nexport default Util;\nexport { Util };","/**** trans-queue.js | EventEmitter ****/\n//==============================================================\nimport ExtendError from './extend-error.js';\nimport Util from './util.js';\nimport Message from './message.js';\n  \nvar EventEmitter = (function () {\n    /**\n     * Creates an instance of the class 'EventEmitter'.\n     * @constructs EventEmitter\n     */\n    function EventEmitter() {\n        \n        var $storage = {};\n        var isLog = false;\n\n        /**\n         * Internal object that stores registered events.  \n         * \n         * @private\n         * @member {object}  EventEmitter#$subscribers  \n         */\n        Object.defineProperty(this, '$storage',\n        {\n            get: function() { return $storage; },\n            set: function(nVal) { \n                if (!_isObject(nVal)) throw new ExtendError(/EL01501/, null, [this.constructor.name, nVal]);\n                $storage = nVal;\n            },\n            configurable: false,\n            enumerable: false\n        });\n\n        /**\n         * Array that stores registered event names.  \n         * \n         * @protected\n         * @member {object}  EventEmitter#_list  \n         */\n        Object.defineProperty(this, '_list',\n            {\n                get: function() { \n                    return Object.keys(this.$storage);\n                },\n                configurable: false,\n                enumerable: false\n            });\n\n        /**\n         * Array that stores registered event names.\n         * \n         * @member {boolean}  EventEmitter#isLog  \n         */\n        Object.defineProperty(this, 'isLog', \n        {\n            get: function() { return isLog; },\n            set: function(nVal) {\n                if (typeof nVal !== 'boolean') throw new ExtendError(/EL01502/, null, [this.constructor.name, nVal]);\n                isLog = nVal;\n            }\n        });\n    }\n    EventEmitter._NS = 'Common';    // namespace\n\n    // local function\n    function _isString(obj) {    // 공백 아닌 문자 여부\n        if (typeof obj === 'string' && obj.length > 0) return true;\n        return false;\n    }\n    function _isObject(obj) {    // 객체 여부\n        if (typeof obj === 'object' && obj !== null) return true;\n        return false;\n    }\n\n    /**\n     * Adds a listener (function) for the event.  \n     * \n     * @param {string} p_event Event Name\n     * @param {function} p_listener Listener function\n     */\n    EventEmitter.prototype.on = function(p_event, p_listener) {\n        if (!_isString(p_event)) throw new ExtendError(/EL01503/, null, [typeof p_event]);\n        if (typeof p_listener !== 'function') throw new ExtendError(/EL01504/, null, [typeof p_listener]);\n        \n        if (typeof this.$storage[p_event] !== 'object') {\n            this.$storage[p_event] = [];\n        }\n        if (this.$storage[p_event].indexOf(p_listener) === -1) {\n            this.$storage[p_event].push(p_listener);\n        }\n        // this.$storage[p_event].push(p_listener);\n\n    };\n    /** Alias for method 'on(). */\n    EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n    \n    /**\n     * Adds a one-time function for the event.  \n     * \n     * @param {string} p_event Event Name\n     * @param {function} p_listener Listener function\n     */\n    EventEmitter.prototype.once = function(p_event, p_listener) {\n        var self = this;\n\n        if (!_isString(p_event)) throw new ExtendError(/EL01505/, null, [typeof p_event]);\n        if (typeof p_listener !== 'function') throw new ExtendError(/EL01506/, null, [typeof p_listener]);\n\n        function onceListener() {\n            self.off(p_event, onceListener);\n            p_listener.apply(self, arguments);\n        }\n        this.on(p_event, onceListener);\n    };\n\n    /**\n     * Removes the listener (function) of the specified event.  \n     * \n     * @param {string} p_event Event Name\n     * @param {function} p_listener Listener function\n     */\n    EventEmitter.prototype.off = function(p_event, p_listener) {\n        if (!_isString(p_event)) throw new ExtendError(/EL01507/, null, [typeof p_event]);\n        if (typeof p_listener !== 'function') throw new ExtendError(/EL01508/, null, [typeof p_listener]);\n        \n        if (typeof this.$storage[p_event] === 'object') {\n            var idx = this.$storage[p_event].indexOf(p_listener);\n            if (idx > -1) {\n                this.$storage[p_event].splice(idx, 1);\n            }\n        }\n    };\n    /** Alias of method 'off()'. */\n    EventEmitter.prototype.removeListener = EventEmitter.prototype.off; // 별칭\n\n    /**\n     * Remove all events or all listeners registered for a particular event.  \n     * @param {string} [p_event] Name of the event to be removed (Remove all events if omitted)\n     */\n    EventEmitter.prototype.removeAllListeners = function(p_event) {\n        if (!p_event) {\n            this.$storage = {};  // 초기화\n        }\n        if (typeof this.$storage[p_event] === 'object') {\n            delete this.$storage[p_event];\n        }\n    };\n\n    /**\n     * Runs the listener (function) of the registered event.  \n     * \n     * @param {string} p_event Event Name\n     * @returns {boolean | undefined}  'true' listener execution successful, 'false' execution failed, 'undefined' listener no\n     */\n    EventEmitter.prototype.emit = function(p_event) {\n        var args = [].slice.call(arguments, 1);\n        var listeners = [];\n        // var isListener = false;\n        var isReturn;\n\n        if (!_isString(p_event)) throw new ExtendError(/EL01509/, null, [typeof p_event]);\n\n        if (typeof this.$storage[p_event] === 'object') {\n            listeners = this.$storage[p_event].slice();\n            for (var i = 0; i < listeners.length; i++) {\n                isReturn = listeners[i].apply(this, args);\n                if (isReturn === false) return false;\n            }\n        }\n        if (this.isLog) console.log('['+p_event+'] 이벤트가 밸생하였습니다.');\n\n        return listeners.length > 0 ? true : undefined;\n    };\n\n    return EventEmitter;\n    \n}());\n\nexport default EventEmitter;\nexport { EventEmitter };","/**** i-object.js | IObject ****/\n//==============================================================    \nimport Message from './message.js';    \nimport ExtendError from './extend-error.js';    \n   \nvar IObject  = (function () {\n    /**\n     * Object interface.  \n     * \n     * @constructs IObject \n     * @interface\n     */\n    function IObject() {\n    }\n    \n    IObject._NS = 'Interface';    // namespace\n    IObject._KIND = 'interface';\n\n    /**\n     * Returns a list of types of objects.  \n     * \n     * @returns {Function[]} Arrangement of types of objects\n     * @abstract\n     */\n    IObject.prototype.getTypes  = function() {\n        throw new ExtendError(/EL02111/, null, ['IObject']);\n    };\n    \n    /**\n     * Verify that the object is an instance of a particular class or interface.  \n     * \n     * @returns {boolean} Instance or 'true' if it's an instance or 'false' if it's not\n     * @abstract\n     */\n    IObject.prototype.instanceOf  = function() {\n        throw new ExtendError(/EL02112/, null, ['IObject']);\n    };\n\n    /**\n     * Compare that the object is the same as the given object.  \n     * \n     * @returns {boolean} If two objects are the same, 'true', or 'false'\n     * @abstract\n     */\n    IObject.prototype.equal  = function() {\n        throw new ExtendError(/EL02113/, null, ['IObject']);\n    };\n    \n    return IObject;\n    \n}());\n\nexport default IObject;\nexport { IObject };","/**** i-marshal.js | IMarshal ****/\n//==============================================================\nimport Message from './message.js';    \nimport ExtendError from './extend-error.js';    \n   \nvar IMarshal  = (function () {\n    /**\n     * Object control interface.  \n     * \n     * @interface\n     */\n    function IMarshal() {\n\n        /**\n         * Internal property that stores the unique identifier of the object.  \n         * \n         * @member {string} IMarshal#_guid\n         */\n        this._guid = String;\n\n        /**\n         * Internal property that stores the creator type of the object.  \n         * \n         * @member {string} IMarshal#_type REVIEW:\n         */\n        this._type = [['_req_', Function, {$type: 'class'} ]];\n    }\n\n    IMarshal._NS = 'Interface';    // namespace\n    IMarshal._KIND = 'interface';\n    \n    /**\n     * Returns the object literal.  \n     * \n     * @abstract\n     */\n    IMarshal.prototype.getObject = function() {\n        throw new ExtendError(/EL02121/, null, ['IMarshal']);\n    };\n\n    /**\n     * Set the object literal by converting it to an instance.  \n     * \n     * @abstract\n     */\n    IMarshal.prototype.setObject  = function() {\n        throw new ExtendError(/EL02122/, null, ['IMarshal']);\n    };\n\n    return IMarshal;\n    \n}());\n\nexport default IMarshal;\nexport { IMarshal };","/**** i-collection.js | ICollection ****/\n//==============================================================\nimport Message from './message.js';\nimport ExtendError from './extend-error.js';\n\nvar ICollection  = (function () {\n    /**\n     * This is the collection interface.\n     * @constructs ICollection\n     * @interface\n     */\n    function ICollection() {\n    }\n\n    ICollection._KIND = 'interface';\n    ICollection._NS = 'Interface';    // namespace\n\n    /**\n     * Add an element to the collection.  \n     * \n     * @abstract\n     */\n    ICollection.prototype.add  = function() {\n        throw new ExtendError(/EL02161/, null, ['ICollection']);\n    };\n\n    /**\n     * Remove an element from the collection.  \n     * \n     * @abstract\n     */\n    ICollection.prototype.remove  = function() {\n        throw new ExtendError(/EL02162/, null, ['ICollection']);\n    };\n\n    /**\n     * Verify that an element exists in the collection.  \n     * \n     * @returns {boolean} If the element exists, it is 'true', otherwise it is 'false'\n     * @abstract\n     */\n    ICollection.prototype.contains  = function() {\n        throw new ExtendError(/EL02163/, null, ['ICollection']);\n    };\n\n    /**\n     * Returns the index of an element in the collection.  \n     * \n     * @returns {number}  index of element, '-1' without element\n     * @abstract\n     */\n    ICollection.prototype.indexOf  = function() {\n        throw new ExtendError(/EL02164/, null, ['ICollection']);\n    };\n\n    return ICollection;\n    \n}());\n\nexport default ICollection;\nexport { ICollection };","/**** i-collection-property.js | IPropertyCollection ****/\n//==============================================================\nimport Message from './message.js';    \nimport ExtendError from './extend-error.js';    \nimport Util from './util.js';\nimport ICollection from './i-collection.js';\n   \nvar IPropertyCollection  = (function (_super) {\n    /**\n     * This is the property collection interface.  \n     * \n     * @constructs IPropertyCollection\n     * @interface\n     * @extends  ICollection\n     */\n    function IPropertyCollection() {\n        _super.call(this);\n    }\n    Util.inherits(IPropertyCollection, _super);\n\n    IPropertyCollection._KIND = 'interface';\n    IPropertyCollection._NS = 'Interface';    // namespace\n\n    /**\n     * Returns the property key for the specified index.  \n     * \n     * @returns {boolean} Property key for that index\n     * @abstract\n     */\n    IPropertyCollection.prototype.indexToKey  = function() {\n        throw new ExtendError(/EL02181/, null, ['IPropertyCollection']);\n    };\n\n    return IPropertyCollection;\n    \n}(ICollection));\n\nexport default IPropertyCollection;\nexport { IPropertyCollection };","/**** i-element.js | IElement ****/\n//==============================================================\nimport Message from './message.js';    \nimport ExtendError from './extend-error.js';  \n   \nvar IElement  = (function () {\n    /**\n     * Element (independent) interface.  \n     * @constructs IElement\n     * @interface\n     */\n    function IElement() {\n        /**\n         * Internal property that stores the name of the element.  \n         * \n         * @member {string} IElement#_name\n         */\n        this._name = String;\n    }\n\n    IElement._NS = 'Interface';    // namespace\n    IElement._KIND = 'interface';\n\n    /**\n     * Creates a copy of the current element.  \n     * \n     * @returns {object} Replicated Elements\n     * @abstract\n     */\n    IElement.prototype.clone  = function() {\n        throw new ExtendError(/EL02131/, null, ['IElement']);\n    };\n\n    return IElement;\n    \n}());\n\nexport default IElement;\nexport { IElement };","/**** i-list.js | IList ****/\n//==============================================================\nimport Message from './message.js';    \nimport ExtendError from './extend-error.js';  \n   \nvar IList  = (function () {\n    /**\n     * List interface.  \n     * \n     * @constructs IList\n     * @interface\n     */\n    function IList() {\n\n        /**\n         * An internal array that stores the data in the list.  \n         * \n         * @member {array} IList#_list\n         */\n        this._list = Array;\n        \n        /**\n         * Returns the number of lists.  \n         * \n         * @member {number} IList#count\n         */\n        this.count = Number;\n    }\n\n    IList._NS = 'Interface';    // namespace\n    IList._KIND = 'interface';\n\n    return IList;\n    \n}());\n\nexport default IList;\nexport { IList };","/**** i-control-list.js | IListControl ****/\n//==============================================================\nimport Message from './message.js';    \nimport ExtendError from './extend-error.js';  \n   \nvar IListControl  = (function () {\n    /**\n     * List control interface.  \n     * \n     * @constructs IListControl\n     * @interface\n     */\n    function IListControl() {\n    }\n\n    IListControl._NS = 'Interface';    // namespace\n    IListControl._KIND = 'interface';\n    \n    /**\n     * Add an element to the list.  \n     * \n     * @abstract\n     */\n    IListControl.prototype.add = function() {\n        throw new ExtendError(/EL02151/, null, ['IListControl']);\n    };\n\n    /**\n     * Remove an element from the list.  \n     * \n     * @abstract\n     */\n    IListControl.prototype.del  = function() {\n        throw new ExtendError(/EL02152/, null, ['IListControl']);\n    };\n\n    /**\n     * Verify that an element exists in the list.  \n     * \n     * @returns {boolean} If the element exists, it is 'true', otherwise it is 'false'\n     * @abstract\n     */\n    IListControl.prototype.has  = function() {\n        throw new ExtendError(/EL02153/, null, ['IListControl']);\n    };\n\n    /**\n     * Search for elements in the list.  \n     * \n     * @abstract\n     */\n    IListControl.prototype.find  = function() {\n        throw new ExtendError(/EL02154/, null, ['IListControl']);\n    };\n\n    return IListControl;\n    \n}());\n\nexport default IListControl;\nexport { IListControl };","/**** i-serialize.js | ISerialize ****/\n//==============================================================\nimport Message from './message.js';    \nimport ExtendError from './extend-error.js';  \n   \nvar ISerialize  = (function () {\n    /**\n     * Interface for serialization and deserialization.  \n     * @constructs ISerialize\n     * @interface\n     */\n    function ISerialize() {\n    }\n\n    ISerialize._NS = 'Interface';    // namespace\n    ISerialize._KIND = 'interface';\n\n    /**\n     * Serialize objects, convert them into strings (such as JSON), and export them.  \n     * \n     * @returns {string} Serialized String\n     * @abstract\n     */\n    ISerialize.prototype.output  = function() {\n        throw new ExtendError(/EL02191/, null, ['ISerialize']);\n    };\n\n    /**\n     * Restore objects by loading serialized data.  \n     * \n     * @abstract\n     */\n    ISerialize.prototype.load  = function() {\n        throw new ExtendError(/EL02192/, null, ['ISerialize']);\n    };\n\n    return ISerialize;\n    \n}());\n\nexport default ISerialize;\nexport { ISerialize };","/**** i-collection-array.js | IArrayCollection ****/\n//==============================================================\nimport Message from './message.js';    \nimport ExtendError from './extend-error.js';   \nimport Util from './util.js'; \nimport ICollection from './i-collection.js';\n   \nvar IArrayCollection  = (function (_super) {\n    /**\n     * Array collection interface.  \n     * \n     * @extends ICollection\n     */\n    function IArrayCollection() {\n        _super.call(this);\n    }\n    Util.inherits(IArrayCollection, _super);\n    \n    IArrayCollection._KIND = 'interface';\n    IArrayCollection._NS = 'Interface';    // namespace\n\n    /**\n     * Adds an element to the specified location.  \n     * \n     * @abstract\n     */\n    IArrayCollection.prototype.insertAt  = function() {\n        throw new ExtendError(/EL02171/, null, ['IArrayCollection']);\n    };\n\n    return IArrayCollection;\n    \n}(ICollection));\n\nexport default IArrayCollection;\nexport { IArrayCollection };","/**** namespace-manager.js | NamespaceManager ****/\n//==============================================================\nimport Message from './message.js';    \nimport ExtendError from './extend-error.js';    \nimport Type from './type.js';\nimport Util from './util.js';\nimport IList from './i-list.js';\nimport IListControl from './i-control-list.js';\nimport ISerialize from './i-serialize.js';\n   \nvar NamespaceManager = (function () {\n    /**\n     * Create a Namespace Manager.  \n     * \n     * @constructs NamespaceManager\n     */\n    function NamespaceManager() {\n\n        var $storage = this.$createNsRefer();\n        var _elemTypes  = []; \n        var allowOverlap = false;\n        \n        \n        /**\n         * Namespace repository  \n         * \n         * @member {string} NamespaceManager#$storage\n         * @readonly\n         * @private\n         */\n        Object.defineProperty(this, '$storage',\n        {\n            get: function() { return $storage; },\n            set: function(nVal) { $storage = nVal; },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /** \n         * Namespace element type list.  \n         * Allow all types if empty.  \n         * \n         * @member {array<any>}  NamespaceManager#_elemTypes  \n         * @protected\n         */\n        Object.defineProperty(this, '_elemTypes', \n        {\n            get: function() {\n                return _elemTypes;\n            },\n            set: function(val) {\n                var arrType = Array.isArray(val) ? val : Array.prototype.slice.call(arguments, 0);\n                _elemTypes = arrType;\n            },\n            configurable: false,\n            enumerable: true,\n        });\n\n        /**\n         * Namespace element list.  \n         * \n         * @member {array<string>}  NamespaceManager#_list\n         * @readonly\n         */\n        Object.defineProperty(this, '_list', \n        {\n            get: function() {\n                var storage = this.$storage;\n                var arr = [];\n                var stack = [];\n                findElement(storage);\n                return arr;\n\n                // inner function\n                function findElement(target) { \n                    for (var prop in target) {\n                        if (prop === '_type') continue;\n                        var ns = target[prop];\n                        stack.push(prop);\n                        if (!ns['_type']) {\n                            arr.push(stack.join('.'));\n                        } else findElement(ns);\n                        stack.pop();\n                    }\n                }\n            },\n            configurable: false,\n            enumerable: true,\n        });\n\n        /**\n         * Total number of Namespace elements.  \n         * \n         * @member {number} NamespaceManager#count \n         * @readonly\n         */\n        Object.defineProperty(this, 'count', \n        {\n            get: function() {\n                return this._list.length;\n            },\n            configurable: false,\n            enumerable: true,\n        });\n\n        /**\n         * Set whether to allow duplicate element registration.  \n         * Default is 'false' and does not allow duplication.  \n         * \n         * @member {boolean} NamespaceManager#allowOverlap\n         */\n        Object.defineProperty(this, 'allowOverlap',\n        {\n            get: function() { return allowOverlap; },\n            set: function(val) { \n                if (typeof val !== 'boolean') throw new ExtendError(/EL03311/, null, [typeof val]);\n                allowOverlap = val;\n            },\n            configurable: false,\n            enumerable: true\n        });\n\n        // inner variable access\n        // this.__SET$storage = function(val, call) {\n        //     if (call instanceof NamespaceManager) $storage = val;\n        // }\n\n        this._$KEYWORD = ['namespace', 'ns', 'NS', '_type'];    // 금지단어\n\n        Util.implements(NamespaceManager, this);        // strip:\n    }\n    NamespaceManager._UNION = [IList, IListControl];\n    NamespaceManager._NS = 'Meta';\n    \n    // local function\n    function _isString(obj) {    // 공백아닌 문자 여부\n        if (typeof obj === 'string' && obj.length > 0) return true;\n        return false;\n    }\n\n    function _validNamespace(nsName) {  // 네임스페이스 이름 검사\n        var regex = /^[_a-zA-Z]([.]?[_0-9a-zA-Z])*$/;\n        return regex.test(nsName)\n    }\n\n    function _validName(sName) {   // 이름 검사\n        var regex = /^[_a-zA-Z]([_0-9a-zA-Z])*$/;\n        return regex.test(sName)\n    }\n\n    function _getArray(ns) {  // 네임스페이스 문자열 배열로 얻기\n        var sections = [];\n        if (ns === '') return sections;\n        if (typeof ns === 'string') {\n            if (!_validNamespace(ns)) throw new ExtendError(/EL03312/, null, [ns]);\n            sections = ns.split('.');\n        } else if (Array.isArray(ns)) {\n            sections = ns;\n        } else throw new ExtendError(/EL03313/, null, [typeof ns]);\n\n        for (var i = 0; i < sections.length; i++) {\n            var sName =sections[i];\n            if (!_isString(sName)) throw new ExtendError(/EL03314/, null, [i, typeof sName]);\n            if (!_validName(sName)) throw new ExtendError(/EL03315/, null, [i, sName]);\n        }\n        return sections;\n    }\n    \n    /**\n     * Creates a storage initialization object.  \n     * \n     * @returns {object} initialized namespace type object { _type: 'ns'}\n     * @private\n     */\n    NamespaceManager.prototype.$createNsRefer = function() {\n        return { _type: 'ns' };\n    };\n\n    /**\n     * Returns the Namespace path object.  \n     * \n     * @param {string | object} p_elem Factors to obtain the path\n     * @returns {object} Namespace path object {ns: '...', key: '...'}\n     * @protected\n     */\n    NamespaceManager.prototype._getPathObject = function(p_elem) {\n        var fullName;\n        var arr;\n        var key;\n        var nsPath;\n        var obj = {};\n\n        if (_isString(p_elem)) fullName = p_elem;\n        else fullName = this.getPath(p_elem);\n        \n        if (typeof fullName !== 'string') return;\n\n        arr = fullName.split('.');\n        key = arr.pop();\n        nsPath = arr.join('.');\n        obj['ns'] = nsPath;\n        obj['key'] = key;\n        return obj;\n    };\n    \n    /**\n     * Initialize the namespace.  \n     */\n    NamespaceManager.prototype.init = function() {\n        this.$storage = this.$createNsRefer();\n    };\n\n    /**\n     * Add a path to the Namespace.  \n     * \n     * @param {string | array<string>} p_ns Namespace name, path in the form of a string or array separated by a dot ('.')\n     */\n    NamespaceManager.prototype.addNamespace = function(p_ns) {\n        var parent = this.$storage;\n        var sections;\n    \n        try {\n            sections = _getArray(p_ns);\n\n            if (this._$KEYWORD.indexOf(sections[0]) > -1) sections = sections.slice(1); // 최상위 에약어 제거\n        \n            for (var i = 0; i < sections.length; i+=1) {\n                // var sName = sections[i];\n                if (typeof parent[sections[i]] === 'undefined') {\n                    parent[sections[i]] = this.$createNsRefer();\n                }\n                parent = parent[sections[i]];\n            }\n\n        } catch (error) {\n            throw new ExtendError(/EL03321/, error, []);\n        }\n    };\n\n    /**\n     * Delete the path in the Namespace.  \n     * \n     * @param {string | array<string>} p_ns Namespace name, path in the form of a string or array separated by a dot ('.')\n     */\n    NamespaceManager.prototype.delNamespace = function(p_ns) {\n        var parent = this.$storage;\n        var sections;\n    \n        try {\n            sections = _getArray(p_ns);\n\n            for (var i = 0; i < sections.length; i+=1) {\n                var sName = sections[i];\n                if (parent[sName] && parent[sName]['_type'] === 'ns') {\n                    if (i === sections.length - 1) delete parent[sName];\n                    else parent = parent[sName];\n                } else return;\n            }\n        } catch (error) {\n            throw new ExtendError(/EL03322/, error, []);\n        }\n    };\n\n    /**\n     * Returns the path object of the namespace.  \n     * \n     * @param {string | sting[]} p_ns Namespace name, path in the form of a string or array separated by a dot ('.')\n     * @returns {object} path object\n     */\n    NamespaceManager.prototype.path = function(p_ns) {\n        var parent = this.$storage;\n        var sections;\n\n        if (!p_ns) return parent;\n        \n        try {\n            sections = _getArray(p_ns);\n\n            for (var i = 0; i < sections.length; i+=1) {\n                var sName = sections[i];\n                if (parent[sName] && parent[sName]['_type'] === 'ns') {\n                    if (i === sections.length - 1) return parent[sName];    \n                    parent = parent[sName];\n                } else return;\n            }\n            \n        } catch (error) {\n            throw new ExtendError(/EL03323/, error, []);\n        }\n    };\n\n    /**\n     * Adds an element to the specified namespace path.  \n     * \n     * @param {string} p_fullName Full path to the Namespace\n     * @param {any} p_elem Functions, classes, or objects to be added\n     */\n    NamespaceManager.prototype.add = function(p_fullName, p_elem) {\n        var parent = this.$storage;\n        var sections;\n        var oPath;\n        var key;\n        var ns;\n\n        try {\n            oPath = this._getPathObject(p_fullName);\n            key = oPath['key'];\n            ns = oPath['ns'];\n            sections = _getArray(ns);\n\n            if (this._elemTypes.length > 0) Type.matchType([this._elemTypes], p_elem);  // []로 감싸서 choice 타입으로 변환됨\n            if (!_validName(key)) throw new ExtendError(/EL03331/, null, [key]);\n            if (!this.allowOverlap && this.getPath(p_elem)) {\n                throw new ExtendError(/EL03332/, null, []);\n            }\n            \n            if (sections.length === 0) {    // 최상위 등록\n                parent[key] = p_elem;\n                return;\n            } else this.addNamespace(ns);\n\n            for (var i = 0; i < sections.length; i+=1) {\n                var sName = sections[i];\n                if (i === sections.length - 1) { \n                    parent[sName][key] = p_elem;\n                } else parent = parent[sName];\n            }\n            \n        } catch (error) {\n            throw new ExtendError(/EL03333/, error, []);\n        }\n    };\n\n    /**\n     * Deletes an element from the specified namespace path.  \n     * \n     * @param {string} p_fullname Full path to the Namespace\n     * @returns {boolean} Successful deletion ('true' or 'false')\n     */\n    NamespaceManager.prototype.del = function(p_fullName) {\n        var parent = this.$storage;\n        var sections;\n\n        try {\n            sections = _getArray(p_fullName);\n\n            for (var i = 0; i < sections.length; i+=1) {\n                var sName = sections[i];\n                if (parent[sName]) {\n                    if (i === sections.length - 1) {\n                        delete parent[sName];\n                        return true;\n                    } else parent = parent[sName];\n                } else return false;\n            }\n            \n        } catch (error) {\n            throw new ExtendError(/EL03334/, error, []);\n        }\n\n    };\n\n    /**\n     * Verify that the specified element exists in the Namespace.  \n     * \n     * @param {string | any} p_elem Function, class, or object to check\n     * @returns {boolean} Existence ('true' or 'false')\n     */\n    NamespaceManager.prototype.has = function(p_elem) {\n        if (_isString(p_elem) && this.find(p_elem)) return true;\n        else if (typeof this.getPath(p_elem) === 'string') return true;\n        return false;\n    };\n\n    /**\n     * Retrieves elements from the specified namespace path.  \n     * \n     * @param {string | array<string>} p_fullName Full path to the Namespace\n     * @returns {(object | function)?} Found elements\n     */\n    NamespaceManager.prototype.find = function(p_fullName) {\n        var parent = this.$storage;\n        var sections;\n\n        try {\n            sections = _getArray(p_fullName);   // try undefined\n            for (var i = 0; i < sections.length; i+=1) {\n                var sName = sections[i];\n                if (parent[sName]) {\n                    if (i === sections.length - 1) return parent[sName];\n                    else parent = parent[sName];\n                } else return;\n            }\n            \n        } catch (error) {\n            return;              \n        }\n    };\n    \n    /**\n     * Returns the path of the specified element in the Namespace.  \n     * (Route of the first element in case of redundancy)  \n     * @param {any} p_elem Elements to find (function or object)\n     * @returns {string?} The path of the element, 'undefined' if not found\n     */\n    NamespaceManager.prototype.getPath = function(p_elem) {\n        var namespace = this.$storage;\n        var stack = [];\n\n        if (!p_elem) throw new ExtendError(/EL03341/, null, [typeof p_elem]);\n\n        if ($findElement(namespace)) {\n            return stack.join('.');\n        } else return;\n\n        // inner function\n        function $findElement(target) { \n            for(var prop in target) {\n                var obj = target[prop];\n                if (obj === 'ns') continue;\n                if (obj && obj['_type'] === 'ns') {\n                    stack.push(prop);\n                    if($findElement(obj)) return true;\n                } else {\n                    if (obj === p_elem) {\n                        stack.push(prop);\n                        return true;\n                    }\n                }\n            }\n            stack.pop();\n            return false;\n        }\n    };\n\n    /**\n     * Serialize the namespace repository and convert it into a string.  \n     * To convert the function to JSON, you must specify a separate 'stringify' function.  \n     * \n     * @param {function?} p_stringify JSON Stringify function (optional)\n     * @param {string?} p_space Setting the blank to apply at the output\n     * @returns {string} serialized string\n     */\n    NamespaceManager.prototype.output = function(p_stringify, p_space) {\n        var arr = [];\n        var obj;\n        var str;\n        var temp = {list: arr};\n\n        try {\n            for (var i = 0; i < this._list.length; i++) {\n                var fullName    = this._list[i];\n                var fun         = this.find(fullName);\n                var nObj        = this._getPathObject(fullName);\n                obj = { \n                    ns: nObj.ns, \n                    key: nObj.key, \n                    full: fullName, \n                    elem: fun\n                };\n                arr.push(obj);\n            }\n\n            if (typeof p_stringify === 'function') str = p_stringify(temp, {space: p_space} );\n            else str = JSON.stringify(temp, null, p_space);\n            return str;\n            \n        } catch (error) {\n            throw new ExtendError(/EL03342/, error, [error]);\n        }\n        \n    };\n\n    /**\n     * Parsing serialized strings and fetching them to the Namespace repository.  \n     * @param {string} p_str serialized string\n     * @param {function?} p_parse  JSON parser function\n     */\n    NamespaceManager.prototype.load = function(p_str, p_parse) {\n        var arr = [];\n        \n        if (!_isString(p_str)) throw new ExtendError(/EL03343/, null, [typeof p_str]);\n        \n        try {\n            if (typeof p_parse === 'function') arr = p_parse(p_str);\n            else arr = JSON.parse(p_str, null);\n            \n            this.init();\n            for (var i = 0; i < arr['list'].length; i++) {\n                var o = arr['list'][i];\n                var fun = o['elem'];\n                this.add(o['full'], fun);\n            }\n\n        } catch (error) {\n            throw new ExtendError(/EL03344/, error, [error.message]);\n        }\n    };\n\n    return NamespaceManager;\n}());\n\nexport default NamespaceManager;\nexport { NamespaceManager };","/**** meta-registry.js | MetaRegistry ****/\n//==============================================================\nimport Message from './message.js';    \nimport ExtendError from './extend-error.js';    \nimport Util from './util.js';\nimport NamespaceManager from './namespace-manager.js';\n       \nvar MetaRegistry = (function () {\n    /**\n     * 'MetaRegistry' is a class responsible for registering and managing meta objects.  \n     * \n     * @constructs MetaRegistry\n     * @static\n     */\n    function MetaRegistry() { \n    }\n\n    MetaRegistry._NS = 'Meta';    // namespace\n\n    // var define\n    var _list = [];\n    var namespace = new NamespaceManager();\n\n    /**\n     * List of meta objects.  \n     * \n     * @member {any[]} MetaRegistry#_list\n     * @readonly\n     */\n    Object.defineProperty(MetaRegistry, '_list', \n    {\n        get: function() { \n            var arr = [];\n            for (var i = 0; i < _list.length; i++) arr.push(_list[i]);\n            return arr;\n        },\n        configurable: false,\n        enumerable: true,\n    });\n\n    /**\n     * Total number of currently registered meta objects.  \n     * \n     * @member {number} MetaRegistry#count\n     * @readonly\n     */\n    Object.defineProperty(MetaRegistry, 'count', \n    {\n        get: function() { return _list.length; },\n        configurable: false,\n        enumerable: true,\n    });        \n\n    /**\n     * Namespace manager for meta objects.  \n     * \n     * @member {NamespaceManager} MetaRegistry#namespace\n     * @readonly\n     */\n    Object.defineProperty(MetaRegistry, 'namespace', \n    {\n        get: function() { return namespace; },\n        configurable: false,\n        enumerable: true,\n    });\n\n    // local function\n    function _isBuiltFunction(obj) {    // 내장함수 여부\n        if (typeof obj === 'function' && (false \n            || obj === Number || obj === String \n            || obj === Boolean || obj === Function\n            || obj === Object || obj === Array\n            || obj === RegExp || obj === Date \n            || obj === Symbol || obj === BigInt\n        )) return true;\n        return false;\n    }\n\n    function _isObject(obj) {    // 객체 여부\n        if (typeof obj === 'object' && obj !== null) return true;\n        return false;\n    }\n\n    function _isString(obj) {    // 공백아닌 문자 여부\n        if (typeof obj === 'string' && obj.length > 0) return true;\n        return false;\n    }\n    \n    function _getGuidList(oGuid, arr) {  //객체 배열 리턴\n        arr = arr || [];\n        if (MetaRegistry.isGuidObject(oGuid)) arr.push(oGuid);\n        if (Array.isArray(oGuid)){\n            for(var i = 0; i < oGuid.length; i++) {\n                if (_isObject(oGuid[i])) _getGuidList(oGuid[i], arr);\n            }\n        } else if (_isObject(oGuid)) {\n            for(var prop in oGuid) {\n                if (_isObject(oGuid[prop])) _getGuidList(oGuid[prop], arr);\n            }\n        }\n        return arr;\n    };\n\n    /**\n     * Initializes registered meta objects and namespaces.  \n     */\n    MetaRegistry.init = function() {\n        _list.length = 0;\n        this.namespace.init();\n    };\n\n    /**\n     * Register the meta object and register the creator in the namespace.  \n     * An exception occurs if an object is already registered.   \n     * Register if there is no creator in the Namespace.  \n     * \n     * @param {MetaObject} p_meta Meta object to register\n     */\n    MetaRegistry.register = function(p_meta) {\n        var _ns;\n        var key;\n        var type;\n        // var fullName;\n\n        if (!this.isMetaObject(p_meta)) throw new ExtendError(/EL03211/, null, [p_meta._type, p_meta._guid]);\n        if (this.has(p_meta)) throw new ExtendError(/EL03212/, null, [p_meta._guid]);\n\n        _ns         = p_meta['_ns'] || '';\n        type        = p_meta['_type'];\n        key         = type.name;\n        // fullName    = p_meta['_ns'] && p_meta['_ns'].length > 0 ?  _ns +'.'+key : key;\n\n        _list.push(p_meta);  // 객체 등록\n        this.registerClass(type, _ns, key); // 클래스 등록\n    };\n\n    /**\n     * Undoes the meta object in the registry.  \n     * \n     * @param {MetaObject | string} p_meta Meta object or GUID string\n     * @returns {boolean} successful removal ('true' or 'false')\n     */\n    MetaRegistry.release = function(p_meta) {\n        var guid;\n\n        if (typeof p_meta !== 'object' && typeof p_meta !== 'string') {\n            throw new ExtendError(/EL03213/, null, [typeof p_meta]);\n        }\n\n        guid = typeof p_meta === 'string' ? p_meta : p_meta['_guid'];\n        if (!_isString(guid)) return false;\n\n        for(var i = 0; i < _list.length; i++) {\n            if (_list[i]['_guid'] === guid) {\n                _list.splice(i, 1);\n                return true;\n            }\n        }\n        return false;\n    };\n\n    /**\n     * Check if the registry has a meta object.  \n     * \n     * @param {object | string} p_oGuid  Object of type GUID or GUID string\n     * @returns {boolean} Existence ('true' or 'false')\n     */\n    MetaRegistry.has = function(p_oGuid) {\n        var guid = _isObject(p_oGuid) ? p_oGuid['_guid'] : p_oGuid;\n\n        if (!_isString(guid)) return false;\n\n        for(var i = 0; i < _list.length; i++) {\n            if (_list[i]['_guid'] === guid) return true;\n        }\n        return false;\n    };\n    \n    /**\n     * Locate the meta object in the registry.  \n     * \n     * @param {object | string} p_oGuid Object of type GUID or GUID string\n     * @returns {MetaObject?} meta object found, 'undefined' if not found\n     */\n    MetaRegistry.find = function(p_oGuid) {\n        var guid = _isObject(p_oGuid) ? p_oGuid['_guid'] : p_oGuid;\n        \n        if (!_isString(guid)) return;\n        \n        for(var i = 0; i < _list.length; i++) {\n            if (_list[i]['_guid'] === guid) return _list[i];\n        }\n    };\n\n    /**\n     * Checks for meta objects.  \n     * \n     * @param {object} p_target Target object\n     * @returns {boolean} Whether it is a meta object ('true' or 'false')\n     */\n    MetaRegistry.isMetaObject = function(p_target) {\n        if (!_isObject(p_target)) return false;\n        if (_isString(p_target['_guid']) && typeof p_target['_type'] === 'function') return true;\n        return false;\n    };\n    \n    /**\n     * Creates a meta object of a GUID object.  \n     * \n     * @param {object} p_oGuid GUID type object\n     * @param {object} [p_origin=p_oGuid] Initial GUID literal object\n     * @returns {MetaObject} created meta object\n     */\n    MetaRegistry.createMetaObject = function(p_oGuid, p_origin) {\n        var origin = p_origin ? p_origin : p_oGuid;\n        var args = [null];\n        var type;\n        var ns;\n        var fullName;\n        var coClass;\n        var params;\n        \n        if (!_isObject(p_oGuid)) throw new ExtendError(/EL03221/, null, [typeof p_oGuid]);\n        if (!_isString(p_oGuid['_type'])) throw new ExtendError(/EL03222/, null, [typeof p_oGuid['_type']]);\n        if (!_isObject(origin)) throw new ExtendError(/EL03223/, null, [typeof origin]);\n        \n        type        = p_oGuid['_type'];\n        ns          = p_oGuid['_ns'] || '';\n        fullName    =  ns !== '' ? [ns, type].join('.') : type;\n        coClass     = this.getClass(fullName);\n        \n        if (typeof coClass !== 'function') throw new ExtendError(/EL03224/, null, [fullName, typeof coClass]);\n        \n        // params = coClass.hasOwnProperty('_PARAMS') ? coClass['_PARAMS'] : []; // arr\n        params = Object.prototype.hasOwnProperty.call(coClass, '_PARAMS') ? coClass['_PARAMS'] : []; // arr\n        for (var i = 0; i < params.length; i++) {\n            var argName = params[i];\n            var prop = p_oGuid[argName];\n            var obj;\n            obj = _isObject(prop) && prop['$ref'] ? this.findSetObject(prop['$ref'], origin) : prop;\n            if (p_oGuid[argName]) args.push(obj);\n        }\n        return new (Function.prototype.bind.apply(coClass, args));\n    };\n    \n    /**\n     * Creates a reference object for a GUID object.  \n     * \n     * @param {MetaObject} p_meta Meta object\n     * @returns {object} created reference object ('{$ref: 'guid value'}')\n     * @example\n     * var meta = new MetaElement('m1');\n     * obj.onwer = MetaRegistry.createReferObject(meta);\n     * console.log(obj.onwer);          // { $ref : '5337877c-49d6-9add-f35a-7bd31d510d4f' }\n     */\n    MetaRegistry.createReferObject = function(p_meta) {\n        if (!_isObject(p_meta)) throw new ExtendError(/EL03225/, null, [typeof p_meta]);\n        if (!_isString(p_meta['_guid'])) throw new ExtendError(/EL03226/, null, [typeof p_meta['_guid']]);\n        return { $ref: p_meta['_guid'] };\n    };\n\n    /**\n     * Register the function in the Namespace and create a reference object.  \n     * \n     * @param {function} p_target Function or constructor\n     * @returns {object} created namespace reference object ('{$ns: 'Meta.MetaElement'}')\n     * @example\n     * var meta = new MetaElement('m1');\n     * obj.onwer = MetaRegistry.createReferObject(meta);\n     * console.log(obj);                // {onwer: {$ns: 'Meta.MetaElement'}}\n     */\n    MetaRegistry.createNsReferObject = function(p_target) {\n        var fullName;\n        var ns, key;\n\n        if (typeof p_target !== 'function') throw new ExtendError(/EL03227/, null, [typeof p_target]);\n        \n        if (!this.findClass(p_target)) {\n            ns  = p_target['_NS'] || '';\n            key = p_target.name;\n            this.registerClass(p_target, ns, key);\n        }\n        fullName = this.findClass(p_target);\n        return { $ns: fullName };\n    };\n\n    /**\n     * Set the GUID of the meta object in the GUID object.  \n     * - oGuid.$set = meta._guid  \n     * \n     * @param {object} p_oGuid GUID type object\n     * @param {MetaObject} p_meta Meta object\n     * @returns {object} set object\n     * @example\n     * var meta = new MetaElement('m1');    // meta.guid = '5337877c-49d6-9add-f35a-7bd31d510d4f'\n     * var obj = { name: 'm2' };\n     * MetaRegistry.setMetaObject(obj, meta);\n     * console.log(obj);                    // {name: 'm2, $set: '5337877c-49d6-9add-f35a-7bd31d510d4f'}\n     */\n    MetaRegistry.setMetaObject = function(p_oGuid, p_meta) {\n        if (!_isObject(p_oGuid)) throw new ExtendError(/EL03241/, null, [typeof p_oGuid]);\n        if (!_isObject(p_meta)) throw new ExtendError(/EL03242/, null, [typeof p_meta]);\n        if (!_isString(p_meta['_guid'])) throw new ExtendError(/EL03243/, null,[typeof p_meta['_guid']]);\n        \n        p_oGuid['$set'] = p_meta['_guid'];\n        return p_oGuid;\n    };\n        \n    /**\n     * Validates the GUID object.  \n     * 1. Check if the object has duplicate GUID values  \n     * 2. Determine if an object has a '$ref' value  \n     * 3. Determine if an object has a '$ns' value  \n     * 4. Check the number of '_key' and '_elem' of objects   \n     * \n     * @param {object} p_oGuid GUID object to be inspected\n     * @returns {boolean} Inspection result ('true' or 'false')\n     */\n    MetaRegistry.validObject = function(p_oGuid) {\n        var _this = this;\n        var arrObj;\n\n        if (!_isObject(p_oGuid)) throw new ExtendError(/EL03251/, null, [typeof p_oGuid]);\n        \n        arrObj = _getGuidList(p_oGuid);\n        if (!$validUniqueGuid() || !$validReference(p_oGuid) || !$validCollection(p_oGuid)) return false;\n        return true;\n\n        // inner function\n        function $findGuid(guid, arr) { // guid 조회\n            for(var i = 0; i < arr.length; i++) {\n                if (arr[i]['_guid'] === guid) return arr[i];\n            }\n        }\n        function $validReference(oGuid) { // 참조 검사\n            if (oGuid['$ref'] && !$findGuid(oGuid['$ref'], arrObj)) return false;\n            if (oGuid['$set'] && !$findGuid(oGuid['$set'], arrObj)) return false;\n            if (oGuid['$ns'] && !_this.getClass(oGuid['$ns'])) return false;\n    \n            if (Array.isArray(oGuid)){\n                for(var i = 0; i < oGuid.length; i++) {\n                    if (_isObject(oGuid[i]) && !$validReference(oGuid[i])) return false\n                }\n            } else {\n                for(var prop in oGuid) {\n                    if (_isObject(oGuid[prop]) && !$validReference(oGuid[prop])) return false;\n                }\n            }\n            return true;\n        }\n        function $validCollection(oGuid) { // 컬렉션 검사\n            if (Array.isArray(oGuid['_elem']) && Array.isArray(oGuid['_key'])) {\n                if (oGuid['_elem'].length !== oGuid['_key'].length) return false;\n            }\n            if (Array.isArray(oGuid)){\n                for(var i = 0; i < oGuid.length; i++) {\n                    if (_isObject(oGuid[i]) && !$validCollection(oGuid[i])) return false;\n                }\n            } else {\n                for(var prop in p_oGuid) {\n                    if (_isObject(oGuid[prop]) && !$validCollection(oGuid[prop])) return false;\n                }\n            }\n            return true;\n        }\n        function $validUniqueGuid() {    // guid 유일한 값인지 검사\n            for (var i = 0; i < arrObj.length; i++) {\n                for (var j = 0; j < arrObj.length; j++) {\n                    if (arrObj[i]['_guid'] === arrObj[j]['_guid'] && i !== j) return false; // 중복\n                }\n            }\n            return true;\n        }\n    };\n\n    /**\n     * Verify that the target object is a GUID object.  \n     * @param {object} p_target Object to be checked\n     * @returns {boolean} Guid object(`true` or `false`)\n     */\n    MetaRegistry.isGuidObject = function(p_target) {\n        if (!_isObject(p_target)) return false;\n        if (_isString(p_target['_guid']) && _isString(p_target['_type'])) return true;\n        return false;\n    };\n\n    /**\n     * Verify that the source object contains a GUID object.  \n     * \n     * @param {string| object} p_oGuid GUID object or GUID string to check\n     * @param {object | array<object>} p_origin  GUID literal object of query\n     * @returns {boolean} whether to include ('true' or 'false')\n     */\n    MetaRegistry.hasGuidObject = function(p_oGuid, p_origin) {\n        var guid = _isObject(p_oGuid) ? p_oGuid['_guid'] : p_oGuid;\n        var arrOrigin = [];\n\n        if (!_isString(guid)) throw new ExtendError(/EL03252/, null, [typeof guid]);\n\n        if (Array.isArray(p_origin)) arrOrigin = p_origin;\n        else arrOrigin.push(p_origin);\n\n        for (var i = 0; i < arrOrigin.length; i++) {\n            var origin = arrOrigin[i];\n            var arrObj = _getGuidList(origin);\n            if (!_isObject(origin)) throw new ExtendError(/EL03253/, null, [i, typeof guid]);\n            for (var j = 0; j < arrObj.length; j++) {\n                if (arrObj[j]._guid === guid) return true;\n            }\n        }\n        return false;\n    };\n\n    /**\n     * Verify that the GUID object contains a reference type element.  \n     * Reference types are '$ref' and '$ns'.  \n     * \n     * @param {object} p_oGuid GUID object to check\n     * @returns {boolean} whether to include ('true' or 'false')\n     */\n    MetaRegistry.hasRefer = function(p_oGuid) {\n        if (!_isObject(p_oGuid)) throw new ExtendError(/EL03254/, null, [typeof p_oGuid]);\n        if (!this.isGuidObject(p_oGuid)) throw new ExtendError(/EL03255/, null, [p_oGuid['_type'], p_oGuid['_guid']]);\n\n        return $hasRefer(p_oGuid);\n\n        // inner function\n        function $hasRefer(oGuid) {  // 참조 포함 여부\n            if (Array.isArray(oGuid)){\n                for(var i = 0; i < oGuid.length; i++) {\n                    if (typeof oGuid[i] === 'object' && $hasRefer(oGuid[i])) return true;\n                }\n            } else {\n                if (oGuid['$ref'] && _isString(oGuid['$ref'])) return true;\n                if (oGuid['$ns'] && _isString(oGuid['$ns'])) return true;\n                for(var prop in oGuid) {\n                    if (_isObject(oGuid[prop]) && $hasRefer(oGuid[prop])) return true\n                }\n            }\n            return false;\n        }\n    };     \n\n    /**\n     * Retrieves the set GUID object from the repository.  \n     * \n     * @param {string | object} p_oGuid GUID object or GUID string to look up\n     * @param {object} p_origin GUID literal object with query target\n     * @returns {MetaObject} meta-objects viewed\n     */\n    MetaRegistry.findSetObject = function(p_oGuid, p_origin) {\n        var guid = _isObject(p_oGuid) ? p_oGuid['_guid'] : p_oGuid;\n        var origin = p_origin;\n\n        if (!_isString(guid)) throw new ExtendError(/EL03256/, null, [guid]);\n        if (!_isObject(origin)) throw new ExtendError(/EL03257/, null, [typeof origin]);\n\n        return $findObject(origin);\n        \n        // inner finction\n        function $findObject(oGuid) { // 객체 조회\n            var result;\n            if (Array.isArray(oGuid)){\n                for(var i = 0; i < oGuid.length; i++) {\n                    if (typeof oGuid[i] === 'object') {\n                        result = $findObject(oGuid[i]);\n                        if(result) return result;\n                    }\n                }\n            } else {\n                if (oGuid['_guid'] && oGuid['_guid'] === guid) {\n                    result = oGuid['$set'] ? MetaRegistry.find(oGuid['$set']) : undefined;\n                    return result;\n                }\n                for(var prop in oGuid) {\n                    if (typeof oGuid[prop] === 'object') {\n                        result = $findObject(oGuid[prop]);\n                        if(result) return result;\n                    } \n                }\n            }\n            return result;\n        }\n    };\n\n        \n\n    /**\n     * Converts the reference element value of a GUID object to a real object reference.  \n     * To be converted: '$ns' is converted to '[Object Object]'.  \n     * @param {object} p_oGuid GUID object to convert\n     * @returns {object} converted meta object\n     */\n    MetaRegistry.transformRefer = function(p_oGuid) {\n        var _this = this;\n        var arrObj;\n        var clone;\n\n        if (!_isObject(p_oGuid)) throw new ExtendError(/EL03244/, null, [typeof p_oGuid]);\n        \n        arrObj = _getGuidList(p_oGuid);\n        clone = Util.deepCopy(p_oGuid);\n        $linkReference(clone, arrObj);\n        return clone;\n\n        // inner function\n        function $linkReference(oGuid, arr, parentName) {    // 참조 연결\n            parentName = parentName || '';\n            if (Array.isArray(oGuid)){\n                for(var i = 0; i < oGuid.length; i++) {\n                    if (typeof oGuid[i] === 'object') $linkReference(oGuid[i], arr);\n                }\n            } else {\n                for(var prop in oGuid) {\n                    if (_isObject(oGuid[prop])) {\n                        if (oGuid[prop]['$ns']) {\n                            var ns = _this.getClass(oGuid[prop]['$ns']);\n                            if (typeof ns !== 'function') throw new ExtendError(/EL03245/, null, [parentName, prop]);\n                            oGuid[prop] = ns; // function 타입 연결\n                        } else $linkReference(oGuid[prop], arr, parentName ? parentName +'.'+ prop : prop);\n                    }\n                }\n            }\n        }\n    };\n    \n    /**\n     * Register the creator or object in the specified namespace.  \n     * It registers after performing duplicate checks, and does not store built-in functions (Array, String, Number, etc.).  \n     * \n     * @param {function | object} p_target To be registered (class creator or object)\n     * @param {string} p_ns Namespace name (separated by a dot '.')\n     * @param {string} p_key Destination name (class name or function name), otherwise the last name of the namespace applies.\n     */\n    MetaRegistry.registerClass = function(p_target, p_ns, p_key) {\n        var fullName;\n        \n        if (!(_isObject(p_target) || typeof p_target === 'function')) throw new ExtendError(/EL03231/, null, [typeof p_target]);\n        if (p_ns && typeof p_ns !== 'string') throw new ExtendError(/EL03232/, null, [typeof p_ns]);\n        if (p_key && !_isString(p_key)) throw new ExtendError(/EL03233/, null, [typeof p_key]);\n\n        if (p_key) fullName = p_ns.length > 0 ? p_ns +'.'+ p_key : p_key;\n        else fullName = p_ns;\n        \n        if (_isBuiltFunction(p_target)) return;    // 내장함수 제외\n        if (typeof globalThis[fullName] === 'function') return;\n        \n        if (!this.namespace.find(fullName)) this.namespace.add(fullName, p_target);  // 중복 검사 후 등록\n    };\n    \n    /**\n     * Undoes the registered item in the Namespace.  \n     * \n     * @param {string} p_fullName full path to the namespace ('string')\n     * @returns {boolean} Successful deletion ('true' or 'false')\n     */\n    MetaRegistry.releaseClass = function(p_fullName) {\n        if (!_isString(p_fullName)) throw new ExtendError(/EL03234/, null, [typeof p_fullName]);\n        \n        if (typeof globalThis[p_fullName] === 'function') return true; // 내장함수 & 전역 함수\n        return this.namespace.del(p_fullName);\n    };\n    \n    /**\n     * Finds the specified constructor or object in the Namespace and returns the entire path.  \n     * \n     * @param {function} p_target Creator or object\n     * @returns {string?} Namespace Full path, 'undefined' if not found\n     */\n    MetaRegistry.findClass = function(p_target) {\n        var fullName;\n\n        if (typeof p_target !== 'function') throw new ExtendError(/EL03235/, null, [typeof p_target]);\n        \n        fullName = p_target.name;\n        if (typeof globalThis[fullName] === 'function') return fullName;   // 내장함수 & 전역 함수\n        return this.namespace.getPath(p_target);\n    };\n    \n    /**\n     * Returns a generator or object corresponding to the entire path specified in the Namespace.  \n     * \n     * @param {string} p_fullName Full path to the Namespace\n     * @returns {(object | function)?} corresponding object or creator, 'undefined' if not found\n     */\n    MetaRegistry.getClass = function(p_fullName) {\n        if (!_isString(p_fullName)) throw new ExtendError(/EL03236/, null, [typeof p_fullName]);\n        \n        if (typeof globalThis[p_fullName] === 'function') return globalThis[p_fullName];  // 내장함수 & 전역 함수\n        return this.namespace.find(p_fullName);\n    };\n\n    /**\n     * Pars the serialized JSON string to convert it to 'MetaObject'.  \n     * REVIEW: 필요성 재검토 필요  \n     * @param {string} p_str serialized JSON string\n     * @param {function?} p_parse JSON parser function (default is 'JSON.parse')\n     * @returns {MetaObject} converted meta object\n     */\n    MetaRegistry.loadMetaObject = function(p_str, p_parse) {\n        var obj = p_str;\n        var oGuid;\n        var meta;\n\n        if (typeof p_str !== 'string') throw new ExtendError(/EL03246/, null, [typeof str]);\n\n        obj = (typeof p_parse === 'function') ? p_parse(obj) : JSON.parse(obj, null);\n        if (this.has(obj)) return this.find(obj['_guid']);  // 객체가 존재할 경우\n        if (!this.isGuidObject(obj)) throw new ExtendError(/EL03247/, null, [obj['_type'], obj['_guid']]);\n\n        oGuid = this.transformRefer(obj);\n        meta = this.createMetaObject(oGuid);\n        meta.setObject(oGuid);\n        return meta;\n    };\n    return MetaRegistry;\n}());\n\nexport default MetaRegistry;\nexport { MetaRegistry };","/**** meta-object.js | MetaObject ****/\n//==============================================================\nimport Message from './message.js';    \nimport ExtendError from './extend-error.js';    \nimport Type from './type.js';\nimport Util from './util.js';\nimport IObject from './i-object.js';\nimport IMarshal from './i-marshal.js';\nimport MetaRegistry from './meta-registry.js';\n   \nvar MetaObject  = (function () {\n    /**\n     * Creates an instance of the MetaObject class.  \n     * \n     * @constructs MetaObject\n     * @implements {IObject}\n     * @implements {IMarshal}\n     */\n    function MetaObject() {\n\n        var _guid;\n        var _ns;\n        \n        /**\n         * Internal property that stores the unique identifier of the object.  \n         * \n         * @readonly\n         * @member {string} MetaObject#_guid \n         * @example\n         * var obj = MetaObject();\n         * console.log(obj._guid);      // '5337877c-49d6-9add-f35a-7bd31d510d4f' unique key code\n         */\n        Object.defineProperty(this, '_guid', \n        {\n            get: function() { \n                if (!_guid) _guid = Util.createGuid();\n                return _guid;\n            },\n            set: function(nVal) { _guid = nVal; },\n            configurable: false,\n            enumerable: false\n        });\n\n        /**\n         * Internal property that refers to the generator function of the object.  \n         * \n         * @readonly\n         * @member {function} MetaObject#_type \n         * @example\n         * var obj = new MetaObject();\n         * obj._type === MetaObject;        // true\n         * console.log(typeof obj._type);   // 'function'\n         */\n        Object.defineProperty(this, '_type', \n        {\n            get: function() { \n                var proto = this.__proto__ || Object.getPrototypeOf(this);\n                return proto.constructor;\n            },\n            configurable: false,\n            enumerable: false\n        });\n\n        /**\n         * Indicates the object name space.  \n         * If '_type.NS' is not statically defined, use the parent's namespace as the default.  \n         */\n        Object.defineProperty(this, '_ns', \n        {\n            get: function() { \n                return _ns;\n            },\n            set: function(nVal) { \n                _ns = nVal;\n            },\n            configurable: false,\n            enumerable: false\n        });\n        \n        // 추상클래스 검사\n        if (Object.prototype.hasOwnProperty.call(this._type, '_KIND')) {\n        // if (this._type.hasOwnProperty('_KIND')) {\n            var kind = this._type['_KIND'].toLowerCase();\n            if (['abstract', 'interface', 'enum', 'function'].indexOf(kind) > -1) {\n                throw new ExtendError(/EL03111/, null, [this._type.name, kind]);\n            }\n        }\n\n        // _NS 선언이 없으면 부모의 것을 기본으로 사용!\n        if (this._type && this._type._NS) this._ns = this._type._NS;\n        MetaRegistry.register(this);\n\n        Util.implements(MetaObject, this);          // strip:\n    }\n    MetaObject._UNION = [IObject, IMarshal];\n    MetaObject._NS = 'Meta';\n    MetaObject._PARAMS = [];\n\n    // local function\n    function _isObject(obj) {    // 객체 여부\n        if (typeof obj === 'object' && obj !== null) return true;\n        return false;\n    }\n\n    function _compare(p_obj1, p_obj2) { // 객체 비교\n        if (p_obj1 === p_obj2) return true;\n        else if (p_obj1 instanceof MetaObject && p_obj2 instanceof MetaObject) {\n            var obj1 = p_obj1.getObject(2);    // _guid, $ref 제외 객체\n            var obj2 = p_obj2.getObject(2);\n            return Type.deepEqual(obj1, obj2);\n        } else if (_isObject(p_obj1) && _isObject(p_obj2)) {\n            return Type.deepEqual(p_obj1, p_obj2);\n        } else return false;\n    }\n\n    /**\n     * Compare the current object with the specified object.  \n     * However, the '_guid' property is excluded from the comparison.  \n     * \n     * @param {object} p_target To compare\n     * @returns {boolean} If two objects are the same, 'true', or 'false'\n     * @example\n     * var meta1 = new MetaObject();\n     * var meta2 = new MetaObject();\n     * meta1.equal(meta2);      // true\n     * meta2.equal(meat1);      // true\n     * meta1 === meta2;         // false\n     * \n     * var obj1 = {a: 1};\n     * var obj2 = {a: 1};\n     * this.equal(obj1, obj2);  // true\n     */\n    MetaObject.prototype.equal = function(p_target) {\n        return _compare(this, p_target);\n    };\n    Object.defineProperty(MetaObject.prototype, 'equal', {\n        enumerable: false\n    });\n\n    /**\n     * Returns the creators of the current object and all the creators of the prototype chain to the array.  \n     * \n     * @returns {array<function>} Array of generator functions (includes first defined constructors sequentially)\n     * @example\n     * var obj = new MetaObject();\n     * var arr = obj.getTypes();\n     * arr[0] === MetaObject;   // true\n     * arr[1] === Object;       // true\n     * console.log(arr.length); // 2\n     * \n     * var elem = new MetaElement('e1');   // Inherited MetaObject \n     * var arr = elem.getTypes();\n     * arr[0] === MetaElement;  // true\n     * arr[1] === MetaObject;   // true\n     * arr[2] === Object;       // true\n     * console.log(arr.length); // 3\n     */\n    MetaObject.prototype.getTypes = function() {\n        return parentFunction(this);\n\n        // inner function\n        function parentFunction(obj) {\n            var list = [];\n            var proto = obj.__proto__ || Object.getPrototypeOf(obj);\n            if (proto) {\n                list.push(proto.constructor);\n                list = list.concat(parentFunction(proto));\n            }\n            return list;\n        }\n    };\n    Object.defineProperty(MetaObject.prototype, 'getTypes', {\n        enumerable: false\n    });\n\n    /**\n     * Verify that the object is an instance of a particular class.  \n     * You can also examine the defined interface type (including '_UNION').  \n     * \n     * @param {Function | string} p_target Class constructor function or class name (string)\n     * @returns {boolean} Whether there is an instance of the specified class ('true' or 'false')\n     * @example\n     * var obj = new MetaObject();\n     * obj.instanceOf('MetaObject');    // true\n     * obj.instanceOf('Object');        // true\n     * obj.instanceOf(MetaObject);      // true\n     * obj.instanceOf(Object);          // true\n     * obj.instanceOf(String);          // false\n     * \n     * var elem = new MetaElement('e1');// Inherited MetaObject \n     * obj.instanceOf('MetaElement');   // true\n     * obj.instanceOf('MetaObject');    // true\n     * obj.instanceOf('Object');        // true\n     * obj.instanceOf(MetaElement);     // true\n     * obj.instanceOf(MetaObject);      // true\n     * obj.instanceOf(Object);          // true\n     * obj.instanceOf(String);          // false\n     */\n    MetaObject.prototype.instanceOf = function(p_target) {\n        var _this = this;\n        var unionTypes = this._interface || this._type._UNION;\n        // var unionTypes = this._type['_UNION'] || [];\n        // var unionTypes = this._interface || [];\n        // var thisTypes = this.getTypes();\n\n        if (typeof p_target === 'string') return $$findFunctionName(p_target);\n        if (typeof p_target === 'function') return $findFunction(p_target);\n        return false;\n\n        // inner function\n        function $findFunction(fun) {\n            var types = _this.getTypes();\n            for (var i = 0; i < types.length; i++) {\n                if (fun === types[i]) return true;\n            }\n            \n            for (var k = 0; k < unionTypes.length; k++) {\n                if (fun ===  unionTypes[k]) return true;\n            }\n            return false;\n        }\n        function $$findFunctionName(funName) {\n            var types = _this.getTypes();\n            for (var i = 0; i < types.length; i++) {\n                if (funName === types[i].name) return true;\n            }\n            for (var k = 0; k < unionTypes.length; k++) {\n                if (funName === unionTypes[k].name) return true;\n            }\n            return false;\n        }\n    };\n    Object.defineProperty(MetaObject.prototype, 'instanceOf', {\n        enumerable: false\n    });\n\n    /**\n     * Returns the object as an object literal of type GUID.  \n     * \n     * @param {number} [p_vOpt=0] Import mode  \n     * mode=0 : reference structure (_guid:Yes, $ref:Yes)  \n     * mode=1: Redundant structure (_guid:Yes, $ref:Yes)  \n     * mode=2 : non-coordinated structure (_guid: No, $ref: No)  \n     * @param {object | array<object>} [p_owned={}] Parent object that contains (owns) the current object\n     * @returns {object} Guid type object literal\n     * @example\n     * a.getObject(2) == b.getObject(2)   \n     */\n    MetaObject.prototype.getObject = function(p_vOpt) {\n        var vOpt = p_vOpt || 0;\n        var obj = {};\n        // var owned = p_owned ? [].concat(p_owned, obj) : [].concat(obj);\n\n        if (vOpt < 2 && vOpt > -1) obj['_guid'] = this._guid;\n        obj['_type'] = this._type._NS ? this._type._NS +'.'+ this._type.name : this._type.name;\n        return obj;                        \n    };\n    Object.defineProperty(MetaObject.prototype, 'getObject', {\n        enumerable: false\n    });\n\n    /**\n     * Set up a GUID type object literal by converting it to an instance object.  \n     * \n     * @param {object} p_oGuid object literal of type of GUID to set\n     * @param {object} [p_origin=p_oGuid] Initial GUID literal object referenced during conversion\n     */\n    MetaObject.prototype.setObject  = function(p_oGuid, p_origin) {\n        var origin = p_origin ? p_origin : p_oGuid;\n        var fullName = this._type._NS ? this._type._NS +'.'+ this._type.name : this._type.name;\n\n        if (!_isObject(p_oGuid)) throw new ExtendError(/EL03112/, null, [typeof p_oGuid]);\n        if (p_oGuid['_type'] !== fullName) throw new ExtendError(/EL03113/, null, [p_oGuid['_type'], fullName]);\n        \n        if (MetaRegistry.isGuidObject(origin)) {\n            if (!origin['__TRANSFORM_REFER']) {\n                origin = MetaRegistry.transformRefer(origin);\n                origin['__TRANSFORM_REFER'] = true;\n            }\n        } else throw new ExtendError(/EL03114/, null, [p_origin._type, p_origin._guid]);\n        \n        MetaRegistry.setMetaObject(p_oGuid, this); // $set attach\n    };\n    Object.defineProperty(MetaObject.prototype, 'setObject', {\n        enumerable: false\n    });\n\n    return MetaObject;\n\n}());\n\nexport default MetaObject;\nexport { MetaObject };","/**** meta-element.js | MetaElement ****/\n//==============================================================\nimport Message from './message.js';    \nimport ExtendError from './extend-error.js';    \nimport Util from './util.js';\nimport IElement from './i-element.js';\nimport MetaObject from './meta-object.js';\n   \nvar MetaElement  = (function (_super) {\n\n    /**\n     * Creates an instance of the MetaElement class.  \n     * \n     * @constructs MetaElement\n     * @extends MetaObject\n     * @implements {IElement}\n     * @param {string} p_name Name of the element\n     */\n    function MetaElement(p_name) {\n        _super.call(this);\n        \n        var _name;\n\n        /**\n         * Internal property that stores the name of the element.  \n         * \n         * @readonly\n         * @member {string} MetaElement#_name\n         */\n        Object.defineProperty(this, '_name',\n        {\n            get: function() { return _name; },\n            set: function(nVal) {\n                if (typeof nVal !== 'string') throw new ExtendError(/EL03121/, null, [typeof val]);\n                if (nVal.length === 0) throw new ExtendError(/EL03122/, null, []);\n                _name = nVal;\n            },\n            configurable: false,\n            enumerable: false\n        });\n\n        this._name = p_name;\n\n        Util.implements(MetaElement, this);     // strip:\n    }\n    Util.inherits(MetaElement, _super);\n    \n    MetaElement._UNION = [IElement];\n    MetaElement._NS = 'Meta';           // namespace\n    MetaElement._PARAMS = ['name'];     // creator parameter\n    \n    /**\n     * Returns the object as an object literal of type GUID.  \n     * \n     * @param {number} [p_vOpt=0] Import mode  \n     * mode=0 : reference structure (_guid:Yes, $ref:Yes)  \n     * mode=1: Redundant structure (_guid:Yes, $ref:Yes)  \n     * mode=2 : non-coordinated structure (_guid: No, $ref: No)  \n     * @param {object | array<object>} [p_owned={}] Parent object that contains (owns) the current object  \n     * @returns {object}  Guid type object literal\n     * @example\n     * a.getObject(2) == b.getObject(2)   \n     */\n    MetaElement.prototype.getObject = function(p_vOpt, p_owned) {\n        var obj = _super.prototype.getObject.call(this, p_vOpt, p_owned);\n        // var vOpt = p_vOpt || 0;\n        // var owned = p_owned ? [].concat(p_owned, obj) : [].concat(obj);\n\n        obj['name'] = this._name;\n        return obj;\n    };\n    Object.defineProperty(MetaElement.prototype, 'getObject', {\n        enumerable: false\n    });\n\n    /**\n     * Set up a GUID type object literal by converting it to an instance object.  \n     * \n     * @param {object} p_oGuid object literal of the type of GUID to be set\n     * @param {object} [p_origin=p_oGuid] Initial GUID literal object referenced during conversion\n     */\n    MetaElement.prototype.setObject  = function(p_oGuid, p_origin) {\n        _super.prototype.setObject.call(this, p_oGuid, p_origin);\n        // var origin = p_origin ? p_origin : p_oGuid;\n        this._name = p_oGuid['name'];\n        // this.__SET$_name(p_oGuid['name'], this);\n    };\n    Object.defineProperty(MetaElement.prototype, 'setObject', {\n        enumerable: false\n    });\n\n    /**\n     * Creates a replica of the current object.  \n     * \n     * @returns {MetaElement} Replicated Objects\n     */\n    MetaElement.prototype.clone  = function() {\n        var clone = new MetaElement(this._name);\n        return clone;\n    };\n    Object.defineProperty(MetaElement.prototype, 'clone', {\n        enumerable: false\n    });\n\n    return MetaElement;\n\n}(MetaObject));\n\n\nexport default MetaElement;\nexport { MetaElement };","/**** base-collection.js | BaseCollection ****/\n//==============================================================\nimport Message from './message.js';    \nimport ExtendError from './extend-error.js';\nimport Util from './util.js';\nimport Type from './type.js';\nimport EventEmitter from './event-emitter.js';\nimport ICollection from './i-collection.js';\nimport IList from './i-list.js';\nimport MetaRegistry from './meta-registry.js';\nimport MetaObject from './meta-object.js';\n\nvar BaseCollection  = (function (_super) {\n    /**\n    * The creator that creates the collection.  \n    * This is an abstract class, and you must create an instance through inheritance.  \n    * \n    * @abstract\n    * @extends MetaObject\n    * @constructs BaseCollection\n    * @implements {ICollection}\n    * @implements {IList}\n    * @param {object} [p_owner] Objects that own this collection\n    */\n    function BaseCollection(p_owner) { \n        _super.call(this);\n        \n        // private variable\n        var $KEYWORD = [];\n        var $event = new EventEmitter();\n        var $elements = [];\n        var $descriptors = [];\n        \n        // protected variable\n        var _owner ;\n        var _elemTypes  = [];\n\n        /** \n         * List of strings used as reserved words in the collection.  \n         * \n         * @private\n         * @member {array<string>}  BaseCollection#$KEYWORD\n         */\n        Object.defineProperty(this, '$KEYWORD', \n        {\n            get: function() { return $KEYWORD; },\n            set: function(newVal) { $KEYWORD = $KEYWORD.concat(newVal); },  // REVIEW: 예약어 중복\n            configurable: false,\n            enumerable: false,\n        });\n\n        /** \n         * Object that handles events. Used to register and generate various events in the collection.\n         * \n         * @private\n         * @member {EventEmitter} BaseCollection#$event  \n         */\n        Object.defineProperty(this, '$event', \n        {\n            get: function() { return $event; },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /**\n         * An arrangement that stores elements of a collection.\n         * \n         * @private\n         * @member {string} BaseCollection#$elements\n         */\n        Object.defineProperty(this, '$elements',\n        {\n            get: function() { return $elements; },\n            set: function(nVal) { $elements = nVal; },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /**\n         * A descriptor array that defines the getter and setter methods for each collection element.  \n         * \n         * @private\n         * @member {string} BaseCollection#$descriptors\n         */\n        Object.defineProperty(this, '$descriptors',\n        {\n            get: function() { return $descriptors; },\n            set: function(nVal) { $descriptors = nVal; },\n            configurable: false,\n            enumerable: false,\n        });\n\n\n\n        /** \n         * Owned object of the collection.  \n         * \n         * @protected \n         * @member {object} BaseCollection#_owner  \n         */\n        Object.defineProperty(this, '_owner', \n        {   \n            get: function() { return _owner; },\n            set: function(val) { _owner = val; },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /** \n         * Defines the type constraints for the collection element.  \n         * \n         * @protected \n         * @member {array<any>}  BaseCollection#_elemTypes  \n         */\n        Object.defineProperty(this, '_elemTypes', \n        {\n            get: function() { return _elemTypes; },\n            set: function(val) {\n                var arrType = Array.isArray(val) ? val : Array.prototype.slice.call(arguments, 0);\n                var reg = /^_[a-zA-Z]+_/;\n                var arr1 = arrType.length > 0 && typeof arrType[0] === 'string' ? arrType[0] : '';\n                \n                // var result;\n                if (arrType.length > 0  && reg.exec(arr1) === null) arrType = ['_req_'].concat(arrType);\n                    \n                // result = reg.exec(val);\n                // if (result !== null) return result[0].toUpperCase();\n                _elemTypes = arrType;\n            },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /**\n         * An array that stores a list of elements in a collection.  \n         * \n         * @protected \n         * @readonly\n         * @member {Array}  BaseCollection#_list  \n         */\n        Object.defineProperty(this, '_list', \n        {\n            get: function() {\n                var arr = [];\n                for (var i = 0; i < $elements.length; i++) arr.push(this.$elements[i]);\n                return arr;\n            },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /**\n         * Returns the number of elements in the collection.  \n         * \n         * @readonly\n         * @member {number} BaseCollection#count \n         */\n        Object.defineProperty(this, 'count', \n        {\n            get: function() { return this.$elements.length; },\n            enumerable: false,\n            configurable: false\n        });\n\n        /**\n         * Returns the number of elements in the collection.  \n         * @readonly\n         * @member {number} BaseCollection#length \n         */\n        Object.defineProperty(this, 'length', \n        {\n            get: function() { return this.$elements.length; },\n            enumerable: false,\n            configurable: false\n        });\n\n\n        /**\n         * Event handler called before adding an element to a collection.  \n         * \n         * @event BaseCollection#onAdd\n         * @param {function}    p_callback\n         * @param {any}         p_callback.p_elem Elements to add\n         * @param {number}      p_callback.p_idx Index of the element to be added\n         * @param {this}        p_callback.p_this Current collection objects\n         */\n        Object.defineProperty(this, 'onAdd', \n        {\n            set: function(fun) { this.$event.on('add', fun); },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /** \n         * Event handler that is called after an element is added.  \n         * \n         * @event BaseCollection#onAdded\n         * @param {function}    p_callback\n         * @param {any}         p_callback.p_elem Added elements\n         * @param {number}      p_callback.p_idx Index of added element\n         * @param {this}        p_callback.p_this Current collection objects\n         */\n        Object.defineProperty(this, 'onAdded', \n        {\n            set: function(fun) { this.$event.on('added', fun); },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /** \n         * Event handler called before removing an element.  \n         * \n         * @event BaseCollection#onRemove\n         * @param {function}    p_callback\n         * @param {any}         p_callback.p_elem Elements to be removed\n         * @param {number}      p_callback.p_idx Index of the element to be removed\n         * @param {this}        p_callback.p_this Current collection objects\n         */\n        Object.defineProperty(this, 'onRemove', \n        {\n            set: function(fun) { this.$event.on('remove', fun); },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /** \n         * Event handler that is called after the element is removed.  \n         * \n         * @event BaseCollection#onRemoved\n         * @param {function}    p_callback\n         * @param {any}         p_callback.p_elem Removed elements\n         * @param {number}      p_callback.p_idx Index of removed element\n         * @param {this}        p_callback.p_this Current collection objects\n         */\n        Object.defineProperty(this, 'onRemoved', \n        {\n            set: function(fun) { this.$event.on('removed', fun); },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /** \n        * Event handler called before deleting all elements.  \n        * \n        * @event BaseCollection#onClear\n        * @param {function}    p_callback\n        * @param {this}        p_callback.p_this Current collection objects\n        */\n        Object.defineProperty(this, 'onClear', \n        {\n            set: function(fun) { this.$event.on('clear', fun); },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /** \n         * Event handler that is called after all elements are deleted.  \n         * \n         * @event BaseCollection#onCleared\n         * @param {function}    p_callback\n         * @param {this}        p_callback.p_this Current collection objects\n         */\n        Object.defineProperty(this, 'onCleared', \n        {\n            set: function(fun) { this.$event.on('cleared', fun); },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /** \n         * Event handler called before the element changes.  \n         * \n         * @event BaseCollection#onChanging \n         * @param {function}    p_callback\n         * @param {number}      p_callback.p_nextValue New value to be changed\n         * @param {any}         p_callback.prevValue Existing value\n         * @param {any}         p_callback.index Index of the element to be changed\n         * @param {this}        p_callback.p_this Current collection objects\n         */\n        Object.defineProperty(this, 'onChanging', \n        {\n            set: function(fun) { this.$event.on('changing', fun); },\n            configurable: false,\n            enumerable: false,\n        });\n\n        /** \n         * Event handler that is called after an element changes.  \n         * \n         * @event BaseCollection#onChanged \n         * @param {function}    p_callback\n         * @param {any}         p_callback.p_nextValue New value changed\n         * @param {any}         p_callback.p_prevValue Existing value\n         * @param {number}      p_callback.p_index Index of changed element\n         * @param {this}        p_callback.p_this Current collection objects\n         */\n        Object.defineProperty(this, 'onChanged', \n        {\n            set: function(fun) { this.$event.on('changed', fun); },\n            configurable: false,\n            enumerable: false,\n        });\n\n        // object settging\n        this._owner = p_owner || null;\n\n        // 예약어 등록\n        this.$KEYWORD = ['$event', '_owner', '$elements', '$descriptors', '_elemTypes', '_list', 'count', 'length', '$KEYWORD'];\n        this.$KEYWORD = ['onAdd', 'onAdded', 'onRemove', 'onRemoved', 'onClear', 'onCleared', 'onChanging', 'onChanged'];\n        this.$KEYWORD = ['_onAdd', '_onAdded', '_onRemove', '_onRemoved', '_onClear', '_onCleared', '_onChanging', '_onChanged'];\n        this.$KEYWORD = ['_getPropDescriptor', 'getObject', 'setObject', '_guid', '_type'];\n        this.$KEYWORD = ['_remove', 'remove', 'removeAt', 'contains', 'indexOf', 'add', 'clear'];\n\n        Util.implements(BaseCollection, this);          // strip:\n    }\n    Util.inherits(BaseCollection, _super);\n    \n    BaseCollection._UNION = [ICollection, IList];\n    BaseCollection._NS = 'Collection';\n    BaseCollection._PARAMS = ['_owner'];\n    BaseCollection._KIND = 'abstract';\n    \n    /**\n     * Internal method that runs before adding an element.  \n     * \n     * @param {any} p_elem .Elements to be added\n     * @param {number} p_idx Where the element will be added\n     * @listens BaseCollection#onAdd\n     */\n    BaseCollection.prototype._onAdd = function(p_elem, p_idx) {\n        return this.$event.emit('add', p_elem, p_idx, this); \n    };\n    Object.defineProperty(BaseCollection.prototype, '_onAdd', {\n        enumerable: false\n    });\n\n    /**\n     * Internal method that runs after an element is added.  \n     * @param {any} p_elem Added elements\n     * @param {number} p_idx Location where the element was added\n     * @listens BaseCollection#onAdded\n     */\n    BaseCollection.prototype._onAdded = function(p_elem, p_idx) {\n        return this.$event.emit('added', p_elem, p_idx, this); \n    };\n    Object.defineProperty(BaseCollection.prototype, '_onAdded', {\n        enumerable: false\n    });\n\n    /**\n     * Internal method that runs before removing an element.  \n     * \n     * @param {any} p_elem Elements to be removed\n     * @param {number} p_idx Where the element will be removed\n     * @listens BaseCollection#onRemove\n     */\n    BaseCollection.prototype._onRemove = function(p_elem, p_idx) {\n        return this.$event.emit('remove', p_elem, p_idx, this);\n    };\n    Object.defineProperty(BaseCollection.prototype, '_onRemove', {\n        enumerable: false\n    });\n\n    /**\n     * Internal method that runs after the element is removed.  \n     * \n     * @param {any} p_elem Removed elements\n     * @param {number} p_idx Where the element was removed\n     * @listens BaseCollection#onRemoved\n     */\n    BaseCollection.prototype._onRemoved = function(p_elem, p_idx) {\n        return this.$event.emit('removed', p_elem, p_idx, this);\n    };\n    Object.defineProperty(BaseCollection.prototype, '_onRemoved', {\n        enumerable: false\n    });\n\n    /** \n     * Internal method that runs before deleting all elements.\n     * \n     * @listens BaseCollection#onClear\n     */\n    BaseCollection.prototype._onClear = function() {\n        return this.$event.emit('clear', this); \n    };\n    Object.defineProperty(BaseCollection.prototype, '_onClear', {\n        enumerable: false\n    });\n\n    /** \n     * Internal method that runs after all elements are deleted.  \n     * \n     * @listens BaseCollection#onCleared\n     */\n    BaseCollection.prototype._onCleared = function() {\n        return this.$event.emit('cleared', this); \n    };\n    Object.defineProperty(BaseCollection.prototype, '_onCleared', {\n        enumerable: false\n    });\n\n    /** \n     * Internal method that runs before the element changes.\n     * \n     * @param {any} p_nVal New value to be changed\n     * @param {any} p_oVal Existing value\n     * @param {number} p_idx Location of the element to be changed\n     * @listens BaseCollection#onChanging\n     */\n    BaseCollection.prototype._onChanging = function(p_nVal, p_oVal, p_idx) {\n        return this.$event.emit('changing', p_nVal, p_oVal, p_idx, this);\n    };\n    Object.defineProperty(BaseCollection.prototype, '_onChanging', {\n        enumerable: false\n    });\n\n    /** \n     * Internal method that runs after the element changes.  \n     * \n     * @param {any} p_nVal New value changed\n     * @param {any} p_oVal Existing value\n     * @param {number} p_idx Location of changed element\n     * @listens BaseCollection#onChanged\n     */        \n    BaseCollection.prototype._onChanged = function(p_nVal, p_oVal, p_idx) {\n        return this.$event.emit('changed', p_nVal, p_oVal, p_idx, this);\n    };\n    Object.defineProperty(BaseCollection.prototype, '_onChanged', {\n        enumerable: false\n    });\n\n    /**\n     * Internal method to set the attribute descriptor for a particular index.  \n     * \n     * @protected\n     * @param {number} p_idx Where to specify properties\n     * @param {boolean} p_enum whether the property is enumerable\n     */\n    BaseCollection.prototype._getPropDescriptor = function(p_idx, p_enum) {\n        if (typeof p_enum !== 'boolean') p_enum = true;\n        return {\n            get: function() { return this.$elements[p_idx]; },\n            set: function(nVal) {\n                var oVal = this.$elements[p_idx];\n                if (this._elemTypes.length > 0) Type.matchType([this._elemTypes], nVal);\n                this._onChanging(nVal, oVal, p_idx);  // before event\n                this.$elements[p_idx] = nVal;\n                this._onChanged(nVal, oVal, p_idx);   // after event\n            },\n            configurable: true,\n            enumerable: p_enum,\n        };\n    };\n    Object.defineProperty(BaseCollection.prototype, '_getPropDescriptor', {\n        enumerable: false\n    });\n\n    /** \n     * Internal method to remove elements from the collection.  \n     * \n     * @abstract \n     */\n    BaseCollection.prototype._remove  = function() {\n        throw new ExtendError(/EL04111/, null, []);\n    };\n    Object.defineProperty(BaseCollection.prototype, '_remove', {\n        enumerable: false\n    });\n\n    /**\n     * Returns the object as an object literal of type GUID.  \n     * \n     * @param {number} [p_vOpt=0] Import mode  \n     * mode=0 : reference structure(_guid:Yes, $ref:Yes)  \n     * mode=1 : Redundant structure(_guid:Yes, $ref:Yes)  \n     * mode=2 : non-coordinated structure(_guid:No,  $ref:No)   \n     * @param {object | array<object>} [p_owned={}] Parent object that contains (owns) the current object\n     * @returns {object}  Guid type object literal\n     * @example\n     * a.getObject(2) == b.getObject(2)   \n     */\n    BaseCollection.prototype.getObject = function(p_vOpt, p_owned) {\n        var obj = _super.prototype.getObject.call(this, p_vOpt, p_owned);\n        var vOpt = p_vOpt || 0;\n        // var owned = p_owned ? [].concat(p_owned, obj) : [].concat(obj);\n        var _elems = [];\n        \n        if (!Type.deepEqual(this.$event['$storage'], {})) {\n            obj['$storage'] = this.$event.$storage;\n        }\n        if (vOpt < 2 && vOpt > -1 && this._owner) {\n            obj['_owner'] = MetaRegistry.createReferObject(this._owner);\n        }\n        for (var i = 0; i < this._elemTypes.length; i++) {\n            var elem = this._elemTypes[i];\n            if (typeof elem === 'function') _elems.push(MetaRegistry.createNsReferObject(elem));\n            else _elems.push(elem);\n        }\n        obj['_elemTypes'] = _elems;\n        return obj;                        \n    };\n    Object.defineProperty(BaseCollection.prototype, 'getObject', {\n        enumerable: false\n    });\n\n    /**\n     * Set up a GUID type object literal by converting it to an instance object.\n     * \n     * @param {object} p_oGuid Object literal of type of GUID to set\n     * @param {object} [p_origin=p_oGuid] Initial GUID literal object referenced during conversion\n     */\n    BaseCollection.prototype.setObject = function(p_oGuid, p_origin) {\n        _super.prototype.setObject.call(this, p_oGuid, p_origin);\n        \n        var owner;\n        var origin = p_origin ? p_origin : p_oGuid;\n        \n        this.clear();\n        if (p_oGuid['$storage']) {\n            this.$event.$storage = p_oGuid['$storage'];\n        }\n        if (p_oGuid['_owner']) {\n            owner = MetaRegistry.findSetObject(p_oGuid['_owner']['$ref'], origin);\n            if (!owner) throw new ExtendError(/EL04112/, null, [p_oGuid['_owner']['$ref']]);    // Branch:\n            this._owner = owner;            \n        }\n        if (Array.isArray(p_oGuid['_elemTypes']) && p_oGuid['_elemTypes'].length > 0){\n            this._elemTypes = p_oGuid['_elemTypes'];\n        }\n    };\n    Object.defineProperty(BaseCollection.prototype, 'setObject', {\n        enumerable: false\n    });\n\n    /**\n     * Remove the element from the collection.  \n     * \n     * @param {any} p_elem Elements to be removed\n     * @returns {number} Index of removed element. If element does not exist, return -1\n     */\n    BaseCollection.prototype.remove = function(p_elem) {\n        var idx = this.$elements.indexOf(p_elem);\n\n        if (idx >= 0 && this.removeAt(idx)) return idx;\n        return -1;\n    };\n    Object.defineProperty(BaseCollection.prototype, 'remove', {\n        enumerable: false\n    });\n    \n    /**\n     * Remove the element in the specified location.\n     * \n     * @param {number} p_pos Where to remove\n     * @returns {boolean} Element Removal Successful\n     */\n    BaseCollection.prototype.removeAt = function(p_pos) {\n        var elem;\n        \n        if (typeof p_pos !== 'number') throw new ExtendError(/EL04113/, null, [typeof p_pos]);\n        if (p_pos < 0 ) return false;\n        \n        elem = this.$elements[p_pos];\n        if (this.$elements.length > p_pos) {\n            // this._onRemove(p_pos, elem);\n            if (this._onRemove(elem, p_pos) === false) return false;\n\n            if (!this._remove(p_pos)) return false;\n            this._onRemoved(elem, p_pos);\n            return true;\n        }\n        return false;\n    };\n    Object.defineProperty(BaseCollection.prototype, 'removeAt', {\n        enumerable: false\n    });\n\n    /**\n     * Verify that a particular element exists in the collection.  \n     * \n     * @param {any} p_elem Factors to check\n     * @returns {boolean} Element Existence\n     */\n    BaseCollection.prototype.contains = function(p_elem) {\n        return this.$elements.indexOf(p_elem) > -1;\n    };\n    Object.defineProperty(BaseCollection.prototype, 'contains', {\n        enumerable: false\n    });\n\n    /**\n     * Returns the index of an element.  \n     * \n     * @param {any} p_elem Elements to search for\n     * @returns {number} Index of element, return -1 if element is missing\n     */\n    BaseCollection.prototype.indexOf = function(p_elem) {\n        return this.$elements.indexOf(p_elem);\n    };\n    Object.defineProperty(BaseCollection.prototype, 'indexOf', {\n        enumerable: false\n    });\n\n    /** \n     * Adds an element to the collection.\n     * \n     * @abstract \n     */\n    BaseCollection.prototype.add  = function() {\n        throw new ExtendError(/EL04114/, null, []);\n    };\n    Object.defineProperty(BaseCollection.prototype, 'add', {\n        enumerable: false\n    });\n    \n    /**\n     * Initialize the collection.  \n     * \n     * @abstract \n     */\n    BaseCollection.prototype.clear  = function() {\n        throw new ExtendError(/EL04115/, null, []);\n    };\n    Object.defineProperty(BaseCollection.prototype, 'clear', {\n        enumerable: false\n    });\n\n    return BaseCollection;\n    \n}(MetaObject));\n\nexport default BaseCollection;\nexport { BaseCollection };","/**** collection-array.js | ArrayCollection ****/\n//==============================================================\nimport Message from './message.js';    \nimport ExtendError from './extend-error.js';    \nimport Util from './util.js';\nimport Type from './type.js';\nimport IArrayCollection from './i-collection-array.js';\nimport MetaRegistry from './meta-registry.js';\nimport MetaObject from './meta-object.js';\nimport {BaseCollection} from './base-collection.js';\n\nvar ArrayCollection  = (function (_super) {\n    /**\n     * Creates an instance of an ArrayCollection class.  \n     * \n     * @constructs ArrayCollection\n     * @implements {IArrayCollection}\n     * @extends BaseCollection\n     * @param {object} [p_owner] Objects that own this collection\n     */\n    function ArrayCollection(p_owner) {\n        _super.call(this, p_owner);\n\n        this.$KEYWORD = ['insertAt'];\n\n        Util.implements(ArrayCollection, this);     // strip:\n    }\n    Util.inherits(ArrayCollection, _super);\n    \n    ArrayCollection._UNION = [IArrayCollection];\n    ArrayCollection._NS = 'Collection';     // namespace\n    ArrayCollection._PARAMS = ['_owner'];   // creator parameter\n\n    // local function\n    function _isObject(obj) {    // 객체 여부\n        if (typeof obj === 'object' && obj !== null) return true;\n        return false;\n    }\n    \n    /**\n     * Internal method to remove the specified element from the collection.  \n     * \n     * @protected\n     * @param {number} p_pos Index of the element to be removed\n     * @returns {boolean} Success or failure\n     */\n    ArrayCollection.prototype._remove = function(p_pos) {\n        var count = this.count - 1;   // [idx] 포인트 이동\n        \n        this.$elements.splice(p_pos, 1);\n        this.$descriptors.splice(p_pos, 1);\n        \n        if (p_pos < count) {\n            for (var i = p_pos; i < count; i++) {   // 참조 변경(이동)\n                var desc = this.$descriptors[i] ? this.$descriptors[i] : this._getPropDescriptor(i);\n                Object.defineProperty(this, [i], desc);\n            }\n            delete this[count];     // 마지막 idx 삭제\n        } else {\n            delete this[p_pos];     // idx 삭제 (끝일 경우)\n        }\n        return true;\n    };\n    Object.defineProperty(ArrayCollection.prototype, '_remove', {\n        enumerable: false\n    });\n\n    /**\n     * Returns the object as an object literal of type GUID.  \n     * \n     * @param {number} [p_vOpt=0] Import mode  \n     * mode=0 : reference structure (_guid:Yes, $ref:Yes)  \n     * mode=1: Redundant structure (_guid:Yes, $ref:Yes)  \n     * mode=2 : non-coordinated structure (_guid: No, $ref: No)  \n     * @param {object | array<object>} [p_owned={}] Parent object that contains (owns) the current object\n     * @returns {object}  Guid type object literal \n     * @example\n     * a.getObject(2) == b.getObject(2)   \n     */\n    ArrayCollection.prototype.getObject = function(p_vOpt, p_owned) {\n        var obj = _super.prototype.getObject.call(this, p_vOpt, p_owned);\n        var vOpt = p_vOpt || 0;\n        var owned = p_owned ? [].concat(p_owned, obj) : [].concat(obj);\n\n        if (this.$descriptors.length > 0) {\n            obj['_desc'] = [];\n            for (var i = 0; i < this.$descriptors.length; i++) {\n                obj['_desc'].push(this.$descriptors[i]);\n            }\n        }\n        obj['_elem'] = [];\n        for (var j = 0; j < this.$elements.length; j++) {\n            var elem = this.$elements[j];\n            if (elem instanceof MetaObject) {\n                if (MetaRegistry.hasGuidObject(elem, owned)) {\n                    obj['_elem'].push(MetaRegistry.createReferObject(elem));\n                } else obj['_elem'].push(elem.getObject(vOpt, owned));\n            } else obj['_elem'].push(elem);\n        }\n        return obj;                        \n    };\n    Object.defineProperty(ArrayCollection.prototype, 'getObject', {\n        enumerable: false\n    });\n\n    /**\n     * Set up a GUID type object literal by converting it to an instance object.   \n     * \n     * @param {object} p_oGuid object literal of the type of GUID to be set\n     * @param {object} [p_origin=p_oGuid] Initial GUID literal object referenced during conversion\n     */\n    ArrayCollection.prototype.setObject  = function(p_oGuid, p_origin) {\n        _super.prototype.setObject.call(this, p_oGuid, p_origin);\n        var origin = p_origin ? p_origin : p_oGuid;\n\n        if (Array.isArray(p_oGuid['_desc']) && p_oGuid['_desc'].length > 0) {\n            for (var i = 0; i < p_oGuid['_desc'].length; i++) {\n                this.$descriptors.push(p_oGuid['_desc'][i]);\n            }\n        }\n        for(var j = 0; j < p_oGuid['_elem'].length; j++) {\n            Object.defineProperty(this, [j], this._getPropDescriptor(j));\n        }\n\n        for(var k = 0; k < p_oGuid['_elem'].length; k++) {\n            var elem = p_oGuid['_elem'][k];\n            if (MetaRegistry.isGuidObject(elem)) {\n                var obj = MetaRegistry.createMetaObject(elem, origin);\n                obj.setObject(elem, origin);\n                this.$elements.push(obj);\n                \n            } else if (elem['$ref']) {\n                var meta = MetaRegistry.findSetObject(elem['$ref'], origin);\n                if (!meta) throw new ExtendError(/EL04211/, null, [k, elem['$ref']]);\n                this.$elements.push(meta);  \n            \n            } else this.$elements.push(elem);\n        }\n    };        \n    Object.defineProperty(ArrayCollection.prototype, 'setObject', {\n        enumerable: false\n    });\n\n    /**\n     * Adds an element to the collection.  \n     * \n     * @param {any} p_elem Elements to add\n     * @param {object} [p_desc] Property descriptor object for element\n     * @returns {number} Location of the added element\n     */\n    ArrayCollection.prototype.add = function(p_elem, p_desc) {\n        var pos = this.count;\n        this.insertAt(pos, p_elem, p_desc);\n        return pos;\n    };\n    Object.defineProperty(ArrayCollection.prototype, 'add', {\n        enumerable: false\n    });\n\n    /**\n     * Initialize the collection.  \n     * Empty the $elements and $descriptors arrays upon initialization.  \n     */\n    ArrayCollection.prototype.clear = function() {\n        // this._onClear();    // event\n        if (this._onClear() === false) return -1;\n\n        for (var i = 0; i < this.count; i++) delete this[i];\n        this.$elements = [];\n        this.$descriptors = [];\n        \n        this._onCleared();    // event\n    };\n    Object.defineProperty(ArrayCollection.prototype, 'clear', {\n        enumerable: false\n    });\n\n    /**\n     * Adds an element to the specified location.  \n     * \n     * @param {number} p_pos Where to add\n     * @param {any} p_elem Elements to add\n     * @param {object} [p_desc] Property descriptor object for element\n     * @returns {boolean} Additional success\n     */\n    ArrayCollection.prototype.insertAt = function(p_pos, p_elem, p_desc) {\n        try {\n            var index   = this.count;\n\n            if (typeof p_pos !== 'number') throw new ExtendError(/EL04212/, null, [typeof p_pos]);\n            if (index < p_pos) throw new ExtendError(/EL04213/, null, [p_pos, index]);\n            if (p_pos < 0) throw new ExtendError(/EL04214/, null, [p_pos]);\n            if (this._elemTypes.length > 0) Type.matchType([this._elemTypes], p_elem);\n            if (_isObject(p_desc) && p_desc.configurable === false) {\n                console.warn(Message.get('WS011', ['configurable = false', 'element']));\n                // Message.warn('WS011', ['configurable = false', 'element']); \n            }\n            if (_isObject(p_desc) && p_desc.writable === false ) {\n                console.warn(Message.get('WS011', ['writable = false', 'element']));\n                // Message.warn('WS011', ['writable = false', 'element']);\n            }\n\n            if (this._onAdd(p_elem, p_pos) === false) return false;\n\n            // data process\n            this.$elements.splice(p_pos, 0, p_elem);            \n            this.$descriptors.splice(p_pos, 0, p_desc);\n            // property define\n            if (_isObject(p_desc)) {\n                Object.defineProperty(this, [p_pos], p_desc);\n            } else {\n                Object.defineProperty(this, [p_pos], this._getPropDescriptor(p_pos));\n            }\n            // reindexing\n            for (var i = p_pos + 1; i < this.count; i++) {\n                var desc = this.$descriptors[i] ? this.$descriptors[i] : this._getPropDescriptor(i);\n                Object.defineProperty(this, [i], desc);\n            }\n            this._onAdded(p_elem, p_pos);\n            \n            return true;\n\n        } catch (error) {\n            throw new ExtendError(/EL04215/, error, [p_pos, p_elem]);\n        }\n    };\n    Object.defineProperty(ArrayCollection.prototype, 'insertAt', {\n        enumerable: false\n    });\n\n    /**\n     * Returns the result of executing the function provided to all elements to the new array.  \n     * \n     * @param {Function} callback callback function to convert, (elem: T, index: number, list: T[]) => U\n     * @param {any} thisArg Object to use as this inside the callback function\n     * @returns  {Array} Array of converted elements\n     */\n    ArrayCollection.prototype.map  = function(callback, thisArg) {\n        var newArr = [];\n\n        if (typeof callback != 'function') throw new ExtendError(/EL04116/, null, [typeof callback]);\n    \n        for (var i = 0; i < this.length; i++) {\n            newArr[i] = callback.call(thisArg || this, this[i], i, this._list);\n        }\n        return newArr;\n    };\n    Object.defineProperty(ArrayCollection.prototype, 'map', {\n        enumerable: false\n    });\n\n    /**\n     * Returns a new array containing only elements that satisfy the conditions of the provided function.  \n     * \n     * @param {Function} callback callback function to filter, (elem: T, index: number, list: T[]) => boolean\n     * @param {any} thisArg Object to use as this inside the callback function\n     * @returns  {Array} Array of filtered elements\n     */\n    ArrayCollection.prototype.filter = function (callback, thisArg) {\n        let newArr = [];\n\n        if (typeof callback != 'function') throw new ExtendError(/EL04117/, null, [typeof callback]);\n\n        for (let i = 0; i < this.length; i++) {\n            if (callback.call(thisArg || this, this[i], i, this._list)) {\n                newArr.push(this[i]);\n            }\n        }\n        return newArr;\n    };\n    Object.defineProperty(ArrayCollection.prototype, 'filter', {\n        enumerable: false\n    });\n\n    /**\n     * Returns the accumulated results by executing the reducer function provided to all elements.  \n     * \n     * @param {Function} callback callback function to be reduced, (acc: U, element: T, index: number, list: T[]) => U\n     * @param {any} initialValue Initial value\n     * @returns  {any} Accumulated final result value\n     */\n    ArrayCollection.prototype.reduce = function(callback, initialValue) {\n        var acc = initialValue;\n\n        if (typeof callback != 'function') throw new ExtendError(/EL04118/, null, [typeof callback]);\n\n        for(let i=0; i < this.length; i++) {\n            acc = acc ? callback(acc, this[i], i, this._list) : this[i];\n        }\n        return acc;\n    }\n    Object.defineProperty(ArrayCollection.prototype, 'reduce', {\n        enumerable: false\n    });\n\n    /**\n     * Returns the first element that matches the conditions of the provided function.  \n     * \n     * @param {Function} callback Callback function to be searched, (elem: T, index: number, list: T[]) => boolean\n     * @param {any} thisArg Object to use as this inside the callback function\n     * @returns  {any} The first element that satisfies the condition, 'undefined' if not found\n     */\n    ArrayCollection.prototype.find = function(callback, thisArg) {\n        if (typeof callback != 'function') throw new ExtendError(/EL04119/, null, [typeof callback]);\n        \n        for (var i = 0; i < this.length; i++) {\n            if ( callback.call(thisArg || this, this[i], i, this._list) ) {\n            return this[i];\n            }\n        }\n    };\n    Object.defineProperty(ArrayCollection.prototype, 'find', {\n        enumerable: false\n    });\n\n    /**\n     * Run the function provided for all elements.  \n     * \n     * @param {Function} callback Callback function to run, (elem: T, index: number, list: T[]) => void\n     * @param {any} thisArg Object to use as this inside the callback function\n     */\n    ArrayCollection.prototype.forEach = function(callback, thisArg) {\n        if (typeof callback != 'function') throw new ExtendError(/EL041110/, null, [typeof callback]);\n        \n        for (var i = 0; i <this.length; i++) {\n            callback.call(thisArg || this, this[i], i, this._list);\n        }\n    };\n    Object.defineProperty(ArrayCollection.prototype, 'forEach', {\n        enumerable: false\n    });\n\n    /**\n     * Verify that at least one element matches the conditions of the provided function.  \n     * \n     * @param {Function} callback Callback function to be examined, (elem: T, index: number, list: T[]) => boolean\n     * @param {any} thisArg Object to use as this inside the callback function\n     * @returns  {boolean} 'true' if more than one element satisfies the condition, or 'false' if not\n     */\n    ArrayCollection.prototype.some = function(callback, thisArg) {\n        if (typeof callback != 'function') throw new ExtendError(/EL041111/, null, [typeof callback]);\n        \n        for(var i=0; i < this.length; i++){\n            if (callback.call(thisArg || this, this[i], i, this._list)) return true;\n        }\n        return false;\n    };\n    Object.defineProperty(ArrayCollection.prototype, 'some', {\n        enumerable: false\n    });\n\n    /**\n     * Verify that all elements satisfy the conditions of the provided function.  \n     * \n     * @param {Function} callback Callback function to be examined, (elem: T, index: number, list: T[]) => boolean\n     * @param {any} thisArg Object to use as this inside the callback function\n     * @returns  {boolean}  'true' if all elements meet the conditions, 'false' otherwise\n     */\n    ArrayCollection.prototype.every = function(callback, thisArg) {\n        if (typeof callback != 'function') throw new ExtendError(/EL041112/, null, [typeof callback]);\n        \n        for(var i=0; i < this.length; i++){\n            if (!callback.call(thisArg || this, this[i], i, this._list)) return false;\n            }\n            return true;\n    };\n    Object.defineProperty(ArrayCollection.prototype, 'every', {\n        enumerable: false\n    });\n\n    /**\n     * Returns the index of the first element that matches the conditions of the provided function.  \n     * \n     * @param {Function} callback Callback function to be examined, (elem: T, index: number, list: T[]) => boolean\n     * @param {any} thisArg Object to use as this inside the callback function\n     * @returns  {any} Index of the first element that satisfies the condition, if not found '-1'\n     */\n    ArrayCollection.prototype.findIndex = function(callback, thisArg) {\n        if (typeof callback != 'function') throw new ExtendError(/EL041113/, null, [typeof callback]);\n        \n        for (var i = 0; i < this.length; i++) {\n            if ( callback.call(thisArg || this, this[i], i, this._list) ) {\n            return i;\n            }\n        }\n        return -1;\n    };\n    Object.defineProperty(ArrayCollection.prototype, 'findIndex', {\n        enumerable: false\n    });\n\n\n    return ArrayCollection;\n\n}(BaseCollection));\n\nexport default ArrayCollection;\nexport {ArrayCollection};","/**** collection-property.js | PropertyCollection ****/\n//==============================================================\nimport Message from './message.js';\nimport ExtendError from './extend-error.js';\nimport Type from './type.js';\nimport Util from './util.js';\nimport IPropertyCollection from './i-collection-property.js';\nimport MetaRegistry from './meta-registry.js';\nimport MetaObject from './meta-object.js';\nimport BaseCollection from './base-collection.js';\n\nvar PropertyCollection  = (function (_super) {\n    /**\n     * Creates an instance of the class 'PropertyCollection'.  \n     * \n     * @constructs PropertyCollection\n     * @implements {IPropertyCollection}\n     * @extends BaseCollection\n     * @param {object} p_owner Objects that own this collection\n     */\n    function PropertyCollection(p_owner) {\n        _super.call(this, p_owner); \n\n        var $keys = [];\n\n        /**\n         * Returns all key values in the collection to an array.\n         * \n         * @member {string} PropertyCollection#$keys\n         * @readonly\n         * @private\n         */\n        Object.defineProperty(this, '$keys',\n        {\n            get: function() { return $keys; },\n            set: function(nVal) { $keys = nVal; },\n            configurable: false,\n            enumerable: false,\n        });\n\n        // /** \n        //  * 컬렉션 요소의 키값들\n        //  * @readonly\n        //  * @member {array<string>} PropertyCollection#_keys \n        //  */\n        // Object.defineProperty(this, '_keys',\n        // {\n        //     get: function() {\n        //         var arr = [];\n        //         for (var i = 0; i < _keys.length; i++) arr.push(_keys[i]);\n        //         return arr;\n        //     },\n        //     configurable: false,\n        //     enumerable: false\n        // });\n\n        // 예약어 등록 \n        this.$KEYWORD = ['$keys', 'indexOf', 'exists', 'indexToKey'];\n\n        Util.implements(PropertyCollection, this);      // strip:\n    }\n    Util.inherits(PropertyCollection, _super);\n    \n    PropertyCollection._UNION = [IPropertyCollection];\n    PropertyCollection._NS = 'Collection';      // namespace\n    PropertyCollection._PARAMS = ['_owner'];    // creator parameter\n\n    // local function\n    function _isObject(obj) {    // 객체 여부\n        if (typeof obj === 'object' && obj !== null) return true;\n        return false;\n    }\n\n    function _isString(obj) {    // 공백아닌 문자 여부\n        if (typeof obj === 'string' && obj.length > 0) return true;\n        return false;\n    }\n\n    /**\n     * Internal method to remove the specified element from the collection.  \n     * \n     * @protected\n     * @param {number} p_pos Location of the element to be removed\n     * @returns {boolean} Removal successful\n     */\n    PropertyCollection.prototype._remove = function(p_pos) {\n        var count = this.count - 1;\n        var propName = this.indexToKey(p_pos);   // number 검사함\n        \n        delete this[propName];      // 프로퍼티 삭제\n\n        this.$elements.splice(p_pos, 1);\n        this.$keys.splice(p_pos, 1);\n        this.$descriptors.splice(p_pos, 1);\n        \n        if (p_pos < count) {        // 참조 자료 변경\n            for (var i = p_pos; i < count; i++) {\n                // var desc = this.$descriptors[i] ? this.$descriptors[i] : this._getPropDescriptor(i);\n                propName = this.indexToKey(i);\n                Object.defineProperty(this, [i], this.$descriptors[i] ? this.$descriptors[i] : this._getPropDescriptor(i, false));\n                Object.defineProperty(this, propName, this.$descriptors[i] ? this.$descriptors[i] : this._getPropDescriptor(i));\n            }\n            delete this[count];     // 마지막 idx 삭제\n        } else {\n            delete this[p_pos];     // idx 삭제 (끝일 경우)\n        }\n        return true;\n    };\n    Object.defineProperty(PropertyCollection.prototype, '_remove', {\n        enumerable: false\n    });\n\n    /**\n     * Returns the object as an object literal of type GUID.  \n     * \n     * @param {number} [p_vOpt=0] Import mode\n     * mode=0 : reference structure (_guid:Yes, $ref:Yes)  \n     * mode=1: Redundant structure (_guid:Yes, $ref:Yes)  \n     * mode=2 : non-coordinated structure (_guid: No, $ref: No)  \n     * @param {object | array<object>} [p_owned={}] Parent object that contains (owns) the current object\n     * @returns {object}  Guid type object literal\n     * @example\n     * a.getObject(2) == b.getObject(2)   \n     */\n    PropertyCollection.prototype.getObject = function(p_vOpt, p_owned) {\n        var obj = _super.prototype.getObject.call(this, p_vOpt, p_owned);\n        var vOpt = p_vOpt || 0;\n        var owned = p_owned ? [].concat(p_owned, obj) : [].concat(obj);\n\n        if (this.$descriptors.length > 0) {\n            obj['_desc'] = [];\n            for (var i = 0; i < this.$descriptors.length; i++) {\n                obj['_desc'].push(this.$descriptors[i]);\n            }\n        }\n        obj['_elem'] = [];\n        for (var j = 0; j < this.count; j++) {\n            var elem = this.$elements[j];\n            if (elem instanceof MetaObject) {\n                if (MetaRegistry.hasGuidObject(elem, owned)) {\n                    obj['_elem'].push(MetaRegistry.createReferObject(elem));\n                } else obj['_elem'].push(elem.getObject(vOpt, owned));\n            } else obj['_elem'].push(elem);\n        }\n        obj['_key'] = [];\n        for (var k = 0; k < this.$keys.length; k++) {\n            var key = this.$keys[k];\n            obj['_key'].push(key);\n        }\n        return obj;                        \n    };\n    Object.defineProperty(PropertyCollection.prototype, 'getObject', {\n        enumerable: false\n    });\n\n    /**\n     * Set up a GUID type object literal by converting it to an instance object.  \n     * \n     * @param {object} p_oGuid Object literal of the type of GUID to be set\n     * @param {object} [p_origin=p_oGuid] Initial GUID literal object referenced during conversion\n     */\n    PropertyCollection.prototype.setObject  = function(p_oGuid, p_origin) {\n        _super.prototype.setObject.call(this, p_oGuid, p_origin);\n        var origin = p_origin ? p_origin : p_oGuid;\n\n        if (p_oGuid['_elem'].length !== p_oGuid['_key'].length) throw new ExtendError(/EL04221/, null, [p_oGuid['_elem'].length, p_oGuid['_key'].length]);\n        \n        if (Array.isArray(p_oGuid['_desc']) && p_oGuid['_desc'].length > 0) {\n            if (p_oGuid['_elem'].length !== p_oGuid['_desc'].length) throw new ExtendError(/EL04222/, null, [p_oGuid['_elem'].length, p_oGuid['_desc'].length]);\n            for (var i = 0; i < p_oGuid['_desc'].length; i++) {\n                this.$descriptors.push(p_oGuid['_desc'][i]);\n            }\n        }\n\n        this.$keys = [];\n        for(var j = 0; j < p_oGuid['_key'].length; j++) {\n            var key = p_oGuid['_key'][j];\n            this.$keys.push(key);\n            Object.defineProperty(this, [j], this._getPropDescriptor(j, false));\n            Object.defineProperty(this, key, this._getPropDescriptor(j));\n        }\n\n        for(var k = 0; k < p_oGuid['_elem'].length; k++) {\n            var elem = p_oGuid['_elem'][k];\n            if (MetaRegistry.isGuidObject(elem)) {\n                var obj = MetaRegistry.createMetaObject(elem, origin);\n                obj.setObject(elem, origin);\n                this.$elements.push(obj);\n            \n            } else if (elem['$ref']) {\n                var meta = MetaRegistry.findSetObject(elem['$ref'], origin);\n                if (!meta) throw new ExtendError(/EL04223/, null, [k, elem['$ref']]);\n                this.$elements.push(meta);\n                \n            } else this.$elements.push(elem);\n        }\n    };\n    Object.defineProperty(PropertyCollection.prototype, 'setObject', {\n        enumerable: false\n    });\n\n    // /**\n    //  * 프로퍼티 컬렉션의 인덱스 값을 조회합니다.\n    //  * @param {string | any} p_target 키 또는 요소\n    //  * @param {boolean} [p_isKey=false] 키로 조회 여부\n    //  * @returns {number} 없을시 -1\n    //  */\n    // PropertyCollection.prototype.indexOf = function(p_target, p_isKey) {\n    //     var isKey = p_isKey || false;\n        \n    //     if (!isKey) return this.$elements.indexOf(p_target);\n    //     else {\n    //         if (!_isString(p_target))  throw new ExtendError(/EL04224/, null, [typeof p_target]);\n    //         return this.$keys.indexOf(p_target);\n    //     }\n    // };\n    \n    /**\n     * Adds an element to the collection.  \n     * \n     * @param {string} p_key Key of the element\n     * @param {any} [p_elem] Elements to add\n     * @param {object} [p_desc] Property descriptor object for element\n     * @returns {number} Location of the added element\n     */\n    PropertyCollection.prototype.add = function(p_key, p_elem, p_desc) {\n        try {\n            var index   = this.count;\n            var regex = /^[a-zA-Z_][a-zA-Z0-9_]*/;\n            // var types = ['_req_'];\n\n            // types = [types.concat(this._elemTypes)];\n            \n            if (!_isString(p_key)) throw new ExtendError(/EL04225/, null, [p_key]);\n            if(!regex.test(p_key)) throw new ExtendError(/EL04226/, null, [p_key, regex.source]);\n            if (this.$KEYWORD.indexOf(p_key) > -1) throw new ExtendError(/EL04227/, null, [p_key]);\n            if (this.exists(p_key)) throw new ExtendError(/EL04228/, null, [p_key]);\n            if (this._elemTypes.length > 0) Type.matchType([this._elemTypes], p_elem);\n            // if (this._elemTypes.length > 0) Util.matchType(types, p_elem);\n            if (_isObject(p_desc) && p_desc.configurable === false) {\n                console.warn(Message.get('WS011', ['configurable = true', 'element']));\n                // Message.warn('WS011', ['configurable = true', 'element']);\n            }\n            if (_isObject(p_desc) && p_desc.writable === false ) {\n                console.warn(Message.get('WS011', ['writable = true', 'element']));\n                // Message.warn('WS011', ['writable = true', 'element']);\n            }\n\n            // this._onAdd(index, p_elem);\n            if (this._onAdd(p_elem, index) === false) return -1;\n\n            // data process\n            this.$elements.push(p_elem);\n            this.$keys.push(p_key);\n            this.$descriptors.push(p_desc);\n            // property define\n            if (_isObject(p_desc)) {\n                Object.defineProperty(this, [index], p_desc);\n                Object.defineProperty(this, p_key, p_desc);\n            } else {\n                Object.defineProperty(this, [index], this._getPropDescriptor(index, false));\n                Object.defineProperty(this, p_key, this._getPropDescriptor(index));\n            }\n            this._onAdded(p_elem, index);\n\n            return index;\n\n        } catch (error) {\n            throw new ExtendError(/EL04229/, error, [p_key, p_elem]);\n        }\n    };\n    Object.defineProperty(PropertyCollection.prototype, 'add', {\n        enumerable: false\n    });\n\n    /**\n     * Initialize the collection.  \n     * Empty $elements, $descripts, and $keys at initialization.  \n     */\n    PropertyCollection.prototype.clear = function() {\n        // this._onClear();\n        if (this._onClear() === false) return -1;\n        \n        for (var i = 0; i < this.count; i++) {\n            var propName = this.indexToKey(i);\n            delete this[i];\n            delete this[propName];\n        }\n        this.$elements = [];\n        this.$descriptors = [];\n        this.$keys = [];\n        \n        this._onCleared();\n    };\n    Object.defineProperty(PropertyCollection.prototype, 'clear', {\n        enumerable: false\n    });\n\n    /**\n     * Query the index based on the key.  \n     * \n     * @param {string} p_key Key to view\n     * @returns {number} Index corresponding to key, return '-1' if not present\n     */\n    PropertyCollection.prototype.keyToIndex = function(p_key) {\n        if (!_isString(p_key))  throw new ExtendError(/EL04224/, null, [typeof p_key]);\n        return this.$keys.indexOf(p_key);\n    };\n    Object.defineProperty(PropertyCollection.prototype, 'keyToIndex', {\n        enumerable: false\n    });\n\n    /**\n     * Query the key based on the index value.  \n     * \n     * @param {number} p_idx Index to view\n     * @returns {string} Key values for that index\n     */\n    PropertyCollection.prototype.indexToKey = function(p_idx) {\n        if (typeof p_idx !== 'number') throw new ExtendError(/EL0422A/, null, [typeof p_idx]);\n        return this.$keys[p_idx];\n    };\n    Object.defineProperty(PropertyCollection.prototype, 'indexToKey', {\n        enumerable: false\n    });\n\n    /**\n     * Verify that the specified key exists in the collection.  \n     * \n     * @param {string} p_key Key value to check\n     * @returns {boolean} If the key exists, it is 'true', otherwise it is 'false'\n     */\n    PropertyCollection.prototype.exists = function(p_key) {\n        if (!_isString(p_key)) throw new ExtendError(/EL0422B/, null, [typeof p_key]);\n        return Object.prototype.hasOwnProperty.call(this, p_key);\n    };\n    Object.defineProperty(PropertyCollection.prototype, 'exists', {\n        enumerable: false\n    });\n\n\n    /**\n     * Returns the result of executing the function provided to all elements to the new array.  \n     * \n     * @param {Function} callback Callback function to convert, (elem: T, index: number, key: string, list: T[]) => U\n     * @param {any} thisArg Objects to use as this inside the callback function\n     * @returns  {Array} New arrangement of transformed elements\n     */\n    PropertyCollection.prototype.map  = function(callback, thisArg) {\n        var newArr = [];\n\n        if (typeof callback != 'function') throw new ExtendError(/EL04116/, null, [typeof callback]);\n    \n        for (var i = 0; i < this.length; i++) {\n            var key = this.indexToKey(i);\n            newArr[i] = callback.call(thisArg || this, this[i], i, key, this._list);\n        }\n        return newArr;\n    };\n    Object.defineProperty(PropertyCollection.prototype, 'map', {\n        enumerable: false\n    });\n\n    /**\n     * Returns a new array containing only elements that satisfy the conditions of the provided function.  \n     * \n     * @param {Function} callback Callback function to filter, (elem: T, index: number, key: string, list: T[]) => boolean\n     * @param {any} thisArg Objects to use as this inside the callback function\n     * @returns  {Array} Array of filtered elements\n     */\n    PropertyCollection.prototype.filter = function (callback, thisArg) {\n        let newArr = [];\n\n        if (typeof callback != 'function') throw new ExtendError(/EL04117/, null, [typeof callback]);\n\n        for (let i = 0; i < this.length; i++) {\n            var key = this.indexToKey(i);\n            if (callback.call(thisArg || this, this[i], i, key, this._list)) {\n                newArr.push(this[i]);\n            }\n        }\n        return newArr;\n    };\n    Object.defineProperty(PropertyCollection.prototype, 'filter', {\n        enumerable: false\n    });\n\n    /**\n     * Returns the accumulated results by executing the reducer function provided to all elements.  \n     * \n     * @param {Function} callback callback function to be reduced, (acc: U, element: T, index: number, key: string, list: T[]) => U\n     * @param {any} initialValue Initial value\n     * @returns  {any} Array of filtered elements\n     */\n    PropertyCollection.prototype.reduce = function(callback, initialValue) {\n        var acc = initialValue;\n\n        if (typeof callback != 'function') throw new ExtendError(/EL04118/, null, [typeof callback]);\n\n        for(let i=0; i < this.length; i++) {\n            var key = this.indexToKey(i);\n            acc = acc ? callback(acc, this[i], i, key, this._list) : this[i];\n        }\n        return acc;\n    }\n    Object.defineProperty(PropertyCollection.prototype, 'reduce', {\n        enumerable: false\n    });\n\n    /**\n     * Returns the first element that matches the conditions of the provided function.\n     * \n     * @param {Function} callback Callback function to be searched, (elem: T, index: number, key: string, list: T[]) => boolean\n     * @param {any} thisArg Object to use as this inside the callback function\n     * @returns  {any} The first element that satisfies the condition, 'undefined' if not found\n     */\n    PropertyCollection.prototype.find = function(callback, thisArg) {\n        if (typeof callback != 'function') throw new ExtendError(/EL04119/, null, [typeof callback]);\n        \n        for (var i = 0; i < this.length; i++) {\n            var key = this.indexToKey(i);\n            if ( callback.call(thisArg || this, this[i], i, key, this._list) ) {\n            return this[i];\n            }\n        }\n    };\n    Object.defineProperty(PropertyCollection.prototype, 'find', {\n        enumerable: false\n    });\n\n    /**\n     * Run the function provided for all elements.  \n     * \n     * @param {Function} callback callback function to be executed, (elem: T, index: number, key: string, list: T[]) => void\n     * @param {any} thisArg Object to use as this inside the callback function\n     */\n    PropertyCollection.prototype.forEach = function(callback, thisArg) {\n        if (typeof callback != 'function') throw new ExtendError(/EL041110/, null, [typeof callback]);\n        \n        for (var i = 0; i <this.length; i++) {\n            var key = this.indexToKey(i);\n            callback.call(thisArg || this, this[i], i, key, this._list);\n        }\n    };\n    Object.defineProperty(PropertyCollection.prototype, 'forEach', {\n        enumerable: false\n    });\n\n    /**\n     * Verify that at least one element matches the conditions of the provided function.  \n     * \n     * @param {Function} callback Callback function to be examined, (elem: T, index: number, key: string, list: T[]) => boolean\n     * @param {any} thisArg Object to use as this inside the callback function\n     * @returns  {boolean}  'true' if more than one element satisfies the condition, or 'false' if not\n     */\n    PropertyCollection.prototype.some = function(callback, thisArg) {\n        if (typeof callback != 'function') throw new ExtendError(/EL041111/, null, [typeof callback]);\n        \n        for(var i=0; i < this.length; i++){\n            var key = this.indexToKey(i);\n            if (callback.call(thisArg || this, this[i], i, key, this._list)) return true;\n        }\n        return false;\n    };\n    Object.defineProperty(PropertyCollection.prototype, 'some', {\n        enumerable: false\n    });\n\n    /**\n     * Verify that all elements satisfy the conditions of the provided function.  \n     * \n     * @param {Function} callback Callback function to be examined, (elem: T, index: number, key: string, list: T[]) => boolean\n     * @param {any} thisArg Object to use as this inside the callback function\n     * @returns  {boolean} 'true' if all elements meet the conditions, 'false' otherwise\n     */\n    PropertyCollection.prototype.every = function(callback, thisArg) {\n        if (typeof callback != 'function') throw new ExtendError(/EL041112/, null, [typeof callback]);\n        \n        for(var i=0; i < this.length; i++){\n            var key = this.indexToKey(i);\n            if (!callback.call(thisArg || this, this[i], i, key, this._list)) return false;\n            }\n            return true;\n    };\n    Object.defineProperty(PropertyCollection.prototype, 'every', {\n        enumerable: false\n    });\n\n    /**\n     * Returns the index of the first element that matches the conditions of the provided function.  \n     * \n     * @param {Function} callback Callback function to be examined, (elem: T, index: number, key: string, list: T[]) => boolean\n     * @param {any} thisArg Object to use as this inside the callback function\n     * @returns  {any} Index of the first element that satisfies the condition, if not found '-1'\n     */\n    PropertyCollection.prototype.findIndex = function(callback, thisArg) {\n        if (typeof callback != 'function') throw new ExtendError(/EL041113/, null, [typeof callback]);\n        \n        for (var i = 0; i < this.length; i++) {\n            var key = this.indexToKey(i);\n            if ( callback.call(thisArg || this, this[i], i, key, this._list) ) {\n            return i;\n            }\n        }\n        return -1;\n    };\n    Object.defineProperty(PropertyCollection.prototype, 'findIndex', {\n        enumerable: false\n    });        \n\n    return PropertyCollection;\n\n}(BaseCollection));\n\nexport default PropertyCollection;\nexport { PropertyCollection };"],"names":["_isObject","obj","Array","isArray","_deepMerge","target","source","key","hasOwnProperty","targetValue","sourceValue","async","_loadJSON","filePath","isNode","process","versions","node","globalThis","isDOM","isESM","require","import","assert","type","default","response","fetch","json","error","Message","static","lang","path","this","defaultLang","getMessageByCode","p_code","value","$storage","currentLang","String","importMessage","p_msg","p_path","length","push","changeLanguage","p_lang","i","localPath","msg","console","warn","get","p_values","result","p_template","namedValues","indexedValues","replace","match","index","parseInt","undefined","_replacePlaceholders","code","intro","firstChar","substring","$intro","resetLang","autoDetect","locale","window","navigator","languages","language","Intl","DateTimeFormat","resolvedOptions","split","rawLocale","env","LANG","LC_ALL","LANGUAGE","_getLocale","defaultCode","ExtendError","Error","queue","prop","constructor","p_prop","p_codeVal","super","_prop","_msg","_build","_queue","message","RegExp","_buildMessageProp","queue_cnt","mark","j","_buildMsgQueue","toString","_global","OLD_ENV","Type","Date","_isPrimitiveObj","_isLiteral","_equalLiternal","obj1","obj2","_creator","_typeName","_getKeyCode","val","exec","toUpperCase","restoreArrowFunction","transformedCode","altRegex","altMatch","trim","params","body","forEach","assign","parts","extractedParam","originalParam","re","returnStatementMatch","returnType","_parseFunc","funBody","arrFunc","arrRetrun","return","arrParam","test","Function","_hasKindChoice","name","arr","concat","indexOf","_hasKindArray","getAllProperties","hasObj","allProps","cur","is","props","Object","getOwnPropertyNames","prototype","getPrototypeOf","getTypes","ctor","hasUnion","union","proto","tempArr","call","__proto__","$getPrototype","isProtoChain","typeOf","extendType","strValue","firstStr","$type","ref","temp","def","_type","join","Number","Boolean","Symbol","BigInt","kind","toLowerCase","charAt","funcType","_err","slice","_isFillObj","keys","_isEmptyObj","_execAllow","extType","tarType","opt","pathName","eType","tType","sExt","sTar","list","k","success","$arrayAllow","arrTarget","m","n","$choiceAllow","$classAllow","$unionAllow","$functionAllow","_execMatch","_elem","_tar","tar","elem","$arrayMatch","$choiceMatch","subPath","$classMatch","listDefType","$unionMatch","$functionMatch","deepEqual","keys1","keys2","hasType","typeObject","typeObj","temp2","allowType","matchType","isAllowType","isMatchType","Util","p_obj","getArrayDepth","p_elem","p_depts","level","createGuid","_p8","s","p","Math","random","deepCopy","p_target","nobj","inherits","create","superCtor","TempCtor","writable","configurable","enumerable","implements","p_ctor","_interface","addCnt","defineProperty","arguments","$typeName","isImplementOf","EventEmitter","isLog","set","nVal","_isString","_NS","on","p_event","p_listener","addListener","once","self","onceListener","off","apply","idx","splice","removeListener","removeAllListeners","emit","args","listeners","log","IObject","_KIND","instanceOf","equal","IMarshal","_guid","getObject","setObject","ICollection","add","remove","contains","IPropertyCollection","_super","indexToKey","IElement","_name","clone","IList","_list","count","IListControl","del","has","find","ISerialize","output","load","IArrayCollection","insertAt","NamespaceManager","$createNsRefer","_elemTypes","allowOverlap","arrType","storage","stack","findElement","ns","pop","_$KEYWORD","_validName","sName","_getArray","sections","_UNION","_getPathObject","fullName","nsPath","getPath","init","addNamespace","p_ns","parent","delNamespace","p_fullName","oPath","namespace","$findElement","p_stringify","p_space","fun","nObj","full","space","JSON","stringify","p_str","p_parse","parse","o","MetaRegistry","_getGuidList","oGuid","isGuidObject","register","p_meta","_ns","isMetaObject","registerClass","release","guid","p_oGuid","createMetaObject","p_origin","coClass","origin","getClass","argName","findSetObject","bind","createReferObject","$ref","createNsReferObject","findClass","$ns","setMetaObject","validObject","arrObj","_this","$validUniqueGuid","$validReference","$findGuid","$validCollection","hasGuidObject","arrOrigin","hasRefer","$hasRefer","$findObject","transformRefer","$linkReference","parentName","p_key","releaseClass","loadMetaObject","meta","str","MetaObject","_PARAMS","p_obj1","p_obj2","_compare","parentFunction","unionTypes","funName","types","$$findFunctionName","$findFunction","p_vOpt","vOpt","MetaElement","p_name","p_owned","BaseCollection","p_owner","_owner","$KEYWORD","$event","$elements","$descriptors","newVal","arr1","_onAdd","p_idx","_onAdded","_onRemove","_onRemoved","_onClear","_onCleared","_onChanging","p_nVal","p_oVal","_onChanged","_getPropDescriptor","p_enum","oVal","_remove","_elems","owner","clear","removeAt","p_pos","ArrayCollection","desc","owned","p_desc","pos","map","callback","thisArg","newArr","filter","reduce","initialValue","acc","some","every","findIndex","PropertyCollection","$keys","propName","regex","exists","keyToIndex"],"mappings":";6plBAQA,SAASA,EAAUC,GACf,OAAOA,GAAsB,iBAARA,IAAqBC,MAAMC,QAAQF,EAC5D,CAKA,SAASG,EAAWC,EAAQC,GACxB,IAAK,IAAIC,KAAOD,EACZ,GAAIA,EAAOE,eAAeD,GAAM,CAC5B,IAAIE,EAAcJ,EAAOE,GACrBG,EAAcJ,EAAOC,GACrBP,EAAUU,IACLV,EAAUS,KACXJ,EAAOE,GAAO,CAAE,GAEpBF,EAAOE,GAAOH,EAAWC,EAAOE,GAAMG,IAEtCL,EAAOE,GAAOG,CAE9B,CAEI,OAAOL,CACX,CAEAM,eAAeC,EAAUC,GACrB,MAAMC,EAA4B,oBAAZC,SAA+C,MAApBA,QAAQC,UAA6C,MAAzBD,QAAQC,SAASC,OAAqC,IAArBC,WAAWC,MACnHC,EAAQN,IAA8B,oBAAZO,UAAgD,IAArBH,WAAWE,OAEtE,IACI,GAAIA,EACA,aAAcE,OAAOT,EAAoC,CAAAU,OAAA,CAAAC,KAAA,WAAGC,QACzD,GAAIX,EACP,OAAOO,QAAQR,GACZ,CACH,MAAMa,QAAiBC,MAAMd,GAC7B,aAAaa,EAASE,MAClC,CACK,CAAC,MAAOC,GAEL,MACR,CACA,CAyCA,MAAMC,EAKFC,WAAa,SAKbA,gBAAkB,CACdC,KAAM,CAAEP,QAAS,IACjBQ,KAAM,IAWVF,mBAAqB,UAKrBA,mBAAqBG,KAAKC,YAS1B,uBAAOC,CAAkBC,GACrB,IAAIC,EAAQJ,KAAKK,SAASP,KAAKE,KAAKM,eAAeH,IAAWH,KAAKK,SAASP,KAAKE,KAAKC,eAAeE,GACrG,MAAwB,iBAAVC,EAAqBG,OAAOH,GAASA,CACtD,CAQD,oBAAOI,CAAeC,EAAOC,GAhIjC,IAAmB3C,EAmIPD,EAAU2C,KACVvC,EAAW8B,KAAKK,SAASP,KAAKP,QAASkB,GAnI5B,iBADJ1C,EAqIO2C,IApIS3C,EAAI4C,OAAS,GAoIbX,KAAKK,SAASN,KAAKa,KAAKF,GAMtD,CAOD,2BAAaG,CAAgBC,GAEzB,GADAd,KAAKM,YAAcQ,EACJ,YAAXA,EACJ,IAAK,IAAIC,EAAI,EAAGA,EAAIf,KAAKK,SAASN,KAAKY,OAAQI,IAAK,CAChD,IAAIC,EAAYhB,KAAKK,SAASN,KAAKgB,GAC/BE,QAAYvC,EAAU,GAAGsC,KAAaF,UAE1Cd,KAAKK,SAASP,KAAKgB,GAAUd,KAAKK,SAASP,KAAKgB,IAAW,CAAE,EAG1C,iBAARG,EAAkB/C,EAAW8B,KAAKK,SAASP,KAAKgB,GAASG,GAC/DC,QAAQC,KAAK,SAASH,KAAaF,2BACpD,CACA,CASI,UAAOM,CAAKjB,EAAQkB,GAChB,IACIC,EADAL,EAAMrB,EAAQM,iBAAiBC,GAGnC,YAAmB,IAARc,EACA,kCAAkCd,MAE7CmB,EArHR,SAA+BC,EAAYF,GACvC,IAAIG,EAAc,GAAIC,EAAgB,GAetC,OAbIzD,MAAMC,QAAQoD,GAAWI,EAAgBJ,EAChB,iBAAbA,IAAuBG,EAAcH,IAGrDE,EAAaA,EAAWG,QAAQ,gBAAgB,SAASC,EAAOtD,GAC5D,OAAOmD,EAAYlD,eAAeD,GAAOmD,EAAYnD,GAAOsD,CACpE,KAE4BD,QAAQ,YAAY,SAASC,EAAOC,GACxD,IAAIb,EAAIc,SAASD,EAAO,IAAM,EAC9B,YAA4BE,IAArBL,EAAcV,GAAmBU,EAAcV,GAAKY,CACnE,GAGA,CAoGiBI,CAAqBd,EAAKI,GAInC,SAAgBW,GACZ,IAAIC,EAAQ,GACRC,EAAYF,EAAKG,UAAU,EAAG,GAEhB,MAAdD,EAAmBD,EAAQ,QACR,MAAdC,IAAmBD,EAAQ,QACpC,OAAOA,EAAQ,KAAMD,EAAM,IACvC,CAVeI,CAAOjC,GAAUmB,EAW3B,CAKD,gBAAOe,GAEHrC,KAAKM,YAAcN,KAAKC,WAMhC,CAKI,uBAAaqC,GACT,IAAIC,EArKZ,WACI,IAAIA,EAAS,GAEb,GAAsB,oBAAXC,QAA+C,oBAAdC,UAGxCF,GADaE,UAAUC,YAAY,IAAMD,UAAUE,UAAYC,KAAKC,iBAAiBC,kBAAkBP,QACzFQ,MAAM,QAAQ,QACzB,GAAuB,oBAAZlE,QAAyB,CAEvC,MAAMmE,EAAYnE,QAAQoE,IAAIC,MAAQrE,QAAQoE,IAAIE,QAAUtE,QAAQoE,IAAIG,SACpEJ,IACAT,EAASS,EAAUD,MAAM,SAAS,GAAGrB,QAAQ,IAAK,KAE9D,CACI,OAAOa,GAAU,IACrB,CAsJqBc,GAIE,OAAXd,IAAiBA,EAAS,iBACxB3C,EAAQiB,eAAe0B,EACrC,EAoBA3C,EAAQY,cAAc8C,EA9OF,aCmBpB,MAAMC,UAAoBC,MAEtB3D,WAAa,SAOb4D,MAAQ,GAORC,KAAO,CAAE,EA+BT,WAAAC,CAAYlD,EAAOmD,EAAQC,GACvBC,QAEA,IACIC,EAEAC,EAHAC,EAAS,GAETC,EAAS,GAGTN,aAAkBL,GAClBW,EAASN,EAAOH,MAChBM,EAAQH,EAAOF,MACRE,aAAkBJ,MACzBU,EAAOtD,KAAKgD,EAAOO,SACO,iBAAZP,GAAmC,OAAXA,IACtCG,EAAQH,GASZK,GALID,EADiB,iBAAVvD,EACAA,EACAA,aAAiB2D,OACjBxE,EAAQwB,IAAIX,EAAMrC,OAAQyF,GACvB,IAEE,KAEZE,IAAOE,GA3FnB,SAA2BlG,GACvB,IAAIkD,EAAM,GACV,IAAK,IAAIyC,KAAQ3F,EACY,iBAAdA,EAAI2F,KAAoBzC,GAAOyC,EAAO,MAAO3F,EAAI2F,GAAQ,MAGxE,OAAOzC,CACX,CAoF6BoD,CAAkBN,IACnCG,EAAOvD,OAAS,IAAGsD,GApF/B,SAAwBR,GAGpB,IAFA,IAAIxC,EAAM,GACNqD,EAAYb,EAAM9C,OACbI,EAAIuD,EAAWvD,EAAI,EAAGA,IAAK,CAEhC,IADA,IAAIwD,EAAO,GACFC,EAAIzD,EAAGyD,GAAKF,EAAWE,IAAOD,GAAQ,IAC/CtD,GAAYsD,EAAO,IAAKd,EAAM1C,EAAI,GAAK,IAC/C,CACI,OAAOE,CACX,CA2EyCwD,CAAeP,IAEhDlE,KAAKmE,QAAUF,EACfjE,KAAKyD,MAAQS,EACblE,KAAKyD,MAAM7C,KAAKoD,EACxB,CAOI,QAAAU,GACI,MAAO,iBAAmB1E,KAAKmE,OACvC,EC1GA,IAAIQ,EAAU3F,WACV4F,IAAUD,EAAQC,SAAUD,EAAQC,QAKpCC,EAAO,CAAA,EAsBX,SAAS/G,EAAUC,GACf,MAAkB,iBAARA,GAA4B,OAARA,IAflC,SAAyBA,GACrB,MAAkB,iBAARA,GAA4B,OAARA,IACtBA,aAAeqG,QAAUrG,aAAe+G,KAIpD,CASmDC,CAAgBhH,EAInE,CA4DA,SAASiH,EAAWjH,GAChB,MAAoB,iBAATA,IACS,iBAATA,IACS,kBAATA,IACS,iBAATA,IACPA,aAAeqG,aAAnB,KACJ,CAUA,SAASa,EAAeC,EAAMC,GAC1B,OAAID,IAASC,GACTD,aAAgBd,QAAUe,aAAgBf,QAAUc,EAAK9G,SAAW+G,EAAK/G,MAEjF,CAOA,IAAIgH,EAAW,SAAS9F,GACpB,OAAO,IAAIA,CACf,EAQA,SAAS+F,EAAUtH,GACf,OAAOA,EAAU,IACrB,CAQA,SAASuH,EAAYC,GACjB,IACIjE,EAEJ,GAAmB,iBAARiE,EAEX,OAAe,QADfjE,EAJU,eAIGkE,KAAKD,IACUjE,EAAO,GAAGmE,mBAAtC,CACJ,CAGA,SAASC,EAAqBC,GAE1B,MACMhE,EAAQgE,EAAgBhE,MADhB,kCAMd,IAAKA,EAAO,CAEV,MAAMiE,EAAW,8BACXC,EAAWF,EAAgBhE,MAAMiE,GACvC,IAAKC,EACH,MAAM,IAAIrC,MAAM,kCAQlB,OAAOkC,EAAqB,IAJZG,EAAS,GAAGC,eACdD,EAAS,GAAGC,UAIhC,CAGI,IAAIC,EAASpE,EAAM,GAAGmE,OAClBE,EAAOrE,EAAM,GAAGmE,QAIKE,EAAKrE,MAAM,oDAAsD,IAGzEsE,SAAQC,IAGvB,MAAMC,EAAQD,EAAOvE,MAAM,kDAC3B,GAAIwE,EAAO,CACT,MAAMC,EAAiBD,EAAM,GAAGL,OAC1BO,EAAgBF,EAAM,GAAGL,OAGzBQ,EAAK,IAAIlC,OAAO,MAAMiC,OAAoB,KAChDN,EAASA,EAAOrE,QAAQ4E,EAAIF,EACpC,KAKI,MAAMG,EAAuBP,EAAKrE,MAAM,mBACxC,IAAI6E,EAAaD,EAAuBA,EAAqB,GAAGT,OAAS,GAGzE,OAAIU,GAEFT,EAASA,EAAOrE,QAAQ,OAAQ,IACzB,IAAIqE,eAAoBS,OAE/BT,EAASA,EAAOrE,QAAQ,OAAQ,IACzB,IAAIqE,SAEjB,CAUA,SAASU,EAAWC,GAChB,IAKIC,EAGAC,EAFAtF,EAAS,CAAEyE,OAAQ,GAAIc,YAAQ/E,GAC/BgF,EAAW,GAIX,UAAUC,KAAKL,KAAUA,EAAUhB,EAAqBgB,IAE5DA,EAAuBA,EA2BLhF,QAHM,oBAGiB,IACvBA,QAHI,sBAGiB,IA1BvC,IACI,GAhBU,mDAgBEqF,KAAKL,GAAUC,EAdhB,iGAcmCnB,KAAKkB,OAC9C,KAhBK,0BAgBOK,KAAKL,GACjB,MAAM,IAAInD,EAAY,UAAW,KAAM,CAACmD,IADbC,EAdrB,kFAcwCnB,KAAKkB,EACF,CAEtD,GAAgB,OAAZC,EAAkB,MAAM,IAAIpD,EAAY,UAAW,KAAM,CAACmD,IAE9DI,EAAW,IAAKE,SAAS,WAAYL,EAAQ,GAAI,IAAtC,GACXrF,EAAe,OAAIwF,EAEA,KAAfH,EAAQ,KAAWC,EAAY,IAAKI,SAAS,UAAWL,EAAQ,GAAjC,IACnCrF,EAAe,OAAIsF,CAEtB,CAAC,MAAOjH,GACL,MAAM,IAAI4D,EAAY,UAAW5D,EAAO,CAAC,IACjD,CAEI,OAAO2B,CAYX,CA2CA,SAAS2F,EAAeC,GACpB,IAAIC,EAAM,GAEV,MAAoB,iBAATD,IAIXC,GADAA,GADAA,EAAMA,EAAIC,OAAO,CAAC,QAAS,QAAS,QAAS,WACnCA,OAAO,CAAC,QAAS,QAAS,QAAS,WACnCA,OAAO,CAAC,WAEPC,QAAQH,IAAU,CACjC,CAQA,SAASI,EAAcJ,GACnB,IAAIC,EAAM,GAEV,MAAoB,iBAATD,IAIXC,GADAA,GADAA,EAAMA,EAAIC,OAAO,CAAC,QAAS,WACjBA,OAAO,CAAC,QAAS,QAAS,WAC1BA,OAAO,CAAC,WAEPC,QAAQH,IAAU,CACjC,CASA,SAASK,EAAiBxJ,EAAKyJ,GAC3B,IAAIC,EAAW,GAAIC,EAAM3J,EACrB4J,EAAKH,IAAU,EACnB,GAEI,IADA,IAAII,EAAQC,OAAOC,oBAAoBJ,GAC9B3G,EAAI,EAAGA,EAAI6G,EAAMjH,OAAQI,IAAK,CACnC,IAAI2C,EAAOkE,EAAM7G,IACgB,IAA7B0G,EAASJ,QAAQ3D,KAAiBiE,GAAOE,OAAOE,UAAUzJ,eAAeoF,IAAQ+D,EAAS7G,KAAK8C,EAC/G,QACagE,EAAMG,OAAOG,eAAeN,IACrC,OAAOD,CACX,CAkGA,SAASQ,EAASC,EAAMC,GACpB,IAEIC,EACAC,EAHAlB,EAAM,GACNmB,EAAU,GAMd,GAFAH,GAAwB,IAAbA,EAES,mBAATD,EAAqB,MAAM,IAAI3E,EAAY,UAAW,KAAM,QAAQ2E,IAQ/E,GANAf,EAAIvG,KAAKsH,GACTG,EAmBA,SAAuBH,GAEnB,OAAIL,OAAOE,UAAUzJ,eAAeiK,KAAKL,EAAM,SAAiBA,EAAKpE,MAC7Dc,GAA4C,mBAA1BiD,OAAOG,eAA8DE,EAAKM,UAAnCX,OAAOG,eAAeE,EAC/F,CAvBYO,CAAcP,GAElBG,IAAUrB,SAASe,YACnBZ,EAAMA,EAAIC,OAAOa,EAASI,EAAOF,KAEjCA,EAAU,CACVC,EAAQF,EAAa,QAAK,GAC1B,IAAK,IAAInH,EAAI,EAAGA,EAAIqH,EAAMzH,OAAQI,IAC9BoG,EAAMA,EAAIC,OAAOa,EAASG,EAAMrH,GAAIoH,GAEhD,CAEI,IAAK,IAAI3D,EAAI,EAAGA,EAAI2C,EAAIxG,OAAQ6D,IAAK,CACvB8D,EAAQjB,QAAQF,EAAI3C,IACpB,GAAG8D,EAAQ1H,KAAKuG,EAAI3C,GACtC,CACI,OAAO8D,CAQX,CAUA,SAASI,EAAaR,EAAM/J,GACxB,IAAIgJ,EACJ,GAAoB,mBAATe,EAAqB,OAAO,EACvC,GAAwB,mBAAX/J,GAA2C,iBAAXA,EAAsB,OAAO,EAE1EgJ,EAAMc,EAASC,GAAM,GACrB,IAAK,IAAInH,EAAI,EAAGA,EAAIoG,EAAIxG,OAAQI,IAC5B,GAAsB,iBAAX5C,GACP,GAAIA,IAAWgJ,EAAIpG,GAAGmG,KAAM,OAAO,OAEnC,GAAI/I,IAAWgJ,EAAIpG,GAAI,OAAO,EAGtC,OAAO,CACX,CAqGA,SAAS4H,EAAOxK,GACZ,OAAOyK,EAAWzK,GAAe,KACrC,CAYA,SAASyK,EAAWzK,GAChB,IApWc+I,EACVC,EApMU0B,EACVC,EAsiBA/K,EAAO,CAAEgL,MAAO,GAAIC,SAAKlH,EAE7B/D,SAAe,WACX,IAAIkL,EAAO,GACP9B,EAAM,GACV,GAAsB,UAAlBnH,KAAY,OAAmC,WAAlBA,KAAY,MAAgB,CACzD,IAAK,IAAIe,EAAI,EAAGA,EAAIf,KAAW,KAAEW,OAAQI,IAAK,CAC1C,IAEQmI,EAFJC,EAAQP,EAAW5I,KAAW,KAAEe,IACpC,GAAIoI,EAAe,SAA0B,OAArBA,EAAe,QAEFD,EAAV,WAAnBC,EAAa,MAAsB,IAAMA,EAAe,QAAG,IACpDA,EAAe,QAC1BhC,EAAIvG,KAAKuI,EAAa,MAAI,IAAKD,EAAK,UACjC/B,EAAIvG,KAAKuI,EAAa,MAC7C,CAEgBF,EADiB,UAAjBjJ,KAAW,MAAkC,UAAjBA,KAAW,MAAkC,UAAjBA,KAAW,MAAkC,UAAjBA,KAAW,MAAkC,UAAjBA,KAAW,KACpHA,KAAY,MAAG,IAAKA,KAAW,KAAG,KAAMmH,EAAIiC,KAAK,MAAO,IACrDpJ,KAAY,MAAG,IAAKA,KAAW,KAAG,GAE5D,MACYiJ,EAAOjJ,KAAY,MACfA,KAAc,SAAyB,OAApBA,KAAc,UACX,WAAlBA,KAAY,MAAgBiJ,GAAQ,KAAOjJ,KAAc,QAAG,KAC3DiJ,GAAQ,IAAIjJ,KAAc,QAAE,KAGzC,OAAOiJ,CACf,GAEI,GAAsB,iBAAX9K,GAAmC,OAAXA,GAAmBA,EAAc,MAAG,CAUnE,GATAJ,EAAW,MAAII,EAAc,MACzBA,EAAgB,UAAGJ,EAAa,QAAII,EAAgB,SACpDA,EAAa,OAAGJ,EAAU,KAAII,EAAa,MAC3CA,EAAY,MAAGJ,EAAS,IAAII,EAAY,KACxCA,EAAa,OAAGJ,EAAU,KAAII,EAAa,MAC3CA,EAAa,OAAGJ,EAAU,KAAII,EAAa,MAC3CA,EAAa,OAAGJ,EAAU,KAAII,EAAa,MAC3CA,EAAe,SAAGJ,EAAY,OAAII,EAAe,QACjDA,EAAe,SAAGJ,EAAY,OAAII,EAAe,QA1Y3C+I,EA2YInJ,EAAW,MA1YzBoJ,EAAM,KAEU,iBAATD,IAMXC,GADAA,GADAA,GADAA,GADAA,EAAMA,EAAIC,OAAO,CAAC,OAAQ,YAAa,SAAU,SAAU,aACjDA,OAAO,CAAC,QAAS,WAAY,YAC7BA,OAAO,CAAC,SAAU,QAAS,WAC3BA,OAAO,CAAC,SAAU,SAAU,YAC5BA,OAAO,CAAC,SAEPC,QAAQH,IAAU,GAgYI,MAAM,IAAI3D,EAAY,UAAW,KAAM,CAACxF,EAAW,QAChF,GAAqB,UAAjBA,EAAW,QACXA,EAAU,KAAIA,EAAU,MAAK,SACxBuJ,EAAcvJ,EAAU,OAAI,MAAM,IAAIwF,EAAY,UAAW,KAAM,CAACxF,EAAU,OAEvF,GAAqB,WAAjBA,EAAW,QACNkJ,EAAelJ,EAAU,MAAI,MAAM,IAAIwF,EAAY,UAAW,KAAM,CAACxF,EAAU,OAExF,OAAOA,CACf,CAKI,GAJIA,EAAS,IAAII,EAIF,OAAXA,EACAJ,EAAW,MAAI,YACZ,GAAII,IAAWkL,OAClBtL,EAAW,MAAI,SACfA,EAAa,QAAI,UACd,GAAII,IAAWoC,OAClBxC,EAAW,MAAI,SACfA,EAAa,QAAI,UACd,GAAII,IAAWmL,QAClBvL,EAAW,MAAI,UACfA,EAAa,QAAI,UACd,GAAII,IAAWH,MAClBD,EAAW,MAAI,QACfA,EAAU,KAAI,QACdA,EAAU,KAAI,QACX,GAAII,IAAW6I,SAClBjJ,EAAW,MAAI,WACfA,EAAY,OAAI,QACb,GAAII,IAAW0J,OAClB9J,EAAW,MAAI,cACZ,GAAII,IAAWiG,OAClBrG,EAAW,MAAI,SACfA,EAAa,QAAI,UACd,GAAII,IAAWoL,OAClBxL,EAAW,MAAI,cACZ,GAAII,IAAWqL,OAClBzL,EAAW,MAAI,SACfA,EAAa,QAAI,UACd,GAAII,aAAkBiG,OACzBrG,EAAW,MAAI,SACfA,EAAa,QAAII,OAEd,QAAsB,IAAXA,EACdJ,EAAW,MAAI,iBACZ,GAAsB,iBAAXI,EACdJ,EAAW,MAAI,SACfA,EAAa,QAAII,OACd,GAAsB,iBAAXA,EACdJ,EAAW,MAAI,SACfA,EAAa,QAAII,OACd,GAAsB,kBAAXA,EACdJ,EAAW,MAAI,UACfA,EAAa,QAAII,OACd,GAAsB,iBAAXA,EACdJ,EAAW,MAAI,SACfA,EAAa,QAAII,OACd,GAAsB,iBAAXA,EACdJ,EAAW,MAAI,cAEZ,GAAsB,mBAAXI,EAAuB,CACrC,IAAIsL,EAAOtL,EAAc,MAOzB,GANIsL,GACAA,EAAOA,EAAKC,cACa3L,EAAW,MAAvB,aAAT0L,EAAoC,WACpB,SACjB1L,EAAW,OAnpBR8K,EAmpBqB1K,EAAO+I,KAjpBzB,MADb4B,EAAWD,EAASc,OAAO,KAE5Bb,IAAaA,EAASrD,cAgpByB,QAAU,YAEnC,aAAjB1H,EAAW,MACX,IACI,IAAI6L,EAAYzL,EAAc,MAAIA,EAAc,MAAIsI,EAAWtI,EAAOuG,YACtE3G,EAAY,OAAI6L,EAAiB,OACjC7L,EAAY,OAAI6L,EAAiB,MACpC,CAAC,MAAOC,GACL9L,EAAY,OAAI,EAChC,CAGK,MAAM,GAAIC,MAAMC,QAAQE,GAAS,CAc9B,GAbuB,IAAnBA,EAAOwC,QAAiB3C,MAAMC,QAAQE,EAAO,KAC7CJ,EAAW,MAAI,SACU,IAArBI,EAAO,GAAGwC,OAAc5C,EAAU,KAAI,QACrCA,EAAU,KAAIuH,EAAYnH,EAAO,GAAG,IACzCJ,EAAU,KAAIA,EAAU,KAAII,EAAO,GAAG2L,MAAM,GAAK3L,EAAO,KAExDJ,EAAW,MAAI,QACO,IAAlBI,EAAOwC,OAAc5C,EAAU,KAAI,QAClCA,EAAU,KAAIuH,EAAYnH,EAAO,IACtCJ,EAAU,KAAIA,EAAU,KAAII,EAAO2L,MAAM,GAAK3L,GAE7CJ,EAAU,OAAGA,EAAU,KAAI,SAEX,UAAjBA,EAAW,QAAkBuJ,EAAcvJ,EAAU,MAAI,MAAM,IAAIwF,EAAY,UAAW,KAAM,CAACxF,EAAU,OAC/G,GAAqB,WAAjBA,EAAW,QAAmBkJ,EAAelJ,EAAU,MAAI,MAAM,IAAIwF,EAAY,UAAW,KAAM,CAACxF,EAAU,MAGpH,MA5sBL,SAAoBA,GAChB,SAAGD,EAAUC,IAAQwJ,EAAiBxJ,GAAK4C,OAAS,EAExD,EAysBeoJ,CAAW5L,IAvtB1B,SAAqBJ,GACjB,SAAGD,EAAUC,IAAoC,IAA5B8J,OAAOmC,KAAKjM,GAAK4C,QAAiD,IAAjC4G,EAAiBxJ,GAAK4C,OAEhF,CAotBqCsJ,CAAY9L,GACzCJ,EAAW,MAAI,QAKfA,EAAW,MAAI,SAGnB,OAAOA,CACX,CAYA,SAASmM,EAAWC,EAASC,EAASC,EAAKC,GACvC,IAjfiBpD,EAifbqD,EAAQ3B,EAAWuB,GACnBK,EAAQ5B,EAAWwB,GACnB1G,EAAO,CAAE,EACT+G,EAAOF,EAAM7F,WAAYgG,EAAOF,EAAM9F,WAQ1C,GALiB,aADjB4F,EAAWA,GAAsB,YACFA,IAAU5G,EAAK,cAAgB4G,GAC9DD,EAAMA,GAAO,EAITE,EAAY,OACW,UAAlBA,EAAY,MAAmC,UAAlBA,EAAY,MAAmC,UAAlBA,EAAY,MAAmC,UAAlBA,EAAY,MAAkC,UAAlBA,EAAY,OACxG,IAAzBA,EAAY,KAAE5J,OACb,MAAM,IAAI4C,EAAY,UAAWG,EAAM,CAAC,UAAW+G,IAI3D,GAAID,EAAY,OACW,UAAlBA,EAAY,MAAmC,UAAlBA,EAAY,MAAmC,UAAlBA,EAAY,MAAoC,UAAlBA,EAAY,MAAkC,UAAlBA,EAAY,OACzG,IAAzBA,EAAY,KAAE7J,OACb,MAAM,IAAI4C,EAAY,UAAWG,EAAM,CAAC,UAAWgH,IAI3D,GAAuB,WAAnBH,EAAa,OAAqC,WAAnBC,EAAa,MAMhD,GAhhBiBtD,EAghBDqD,EAAa,MA/gBnB,GAEAnD,OAAO,CAAC,OAAQ,YAAa,SAAU,SAAU,YACjDA,OAAO,CAAC,SAAU,SAAU,SAAU,WAErCC,QAAQH,IAAU,EA0gBI,CAC7B,QAA+B,IAArBqD,EAAe,SAA0C,OAArBA,EAAe,UAAetF,EAAesF,EAAe,QAAGC,EAAe,SACxH,MAAM,IAAIjH,EAAY,UAAWG,EAAM,CAAC6G,EAAa,MAAGA,EAAOC,IAEnE,GAAID,EAAa,QAAMC,EAAa,MAAG,MAAM,IAAIjH,EAAY,UAAWG,EAAM,CAAC6G,EAAa,MAAGC,EAAa,OAE/G,MAAM,GAAuB,UAAnBD,EAAa,OAQxB,WACI,GAAuB,UAAnBC,EAAa,QAAkBxM,MAAMC,QAAQuM,EAAY,MAAI,MAAM,IAAIjH,EAAY,UAAWG,EAAM,CAAC8G,EAAa,QAGtH,GAAsB,UAAlBD,EAAY,KACZ,OAGG,GAAsB,UAAlBA,EAAY,KAAe,CAClC,GAAsB,UAAlBC,EAAY,KAAe,OAC/B,GAAsB,UAAlBA,EAAY,MAAmC,UAAlBA,EAAY,KACzC,MAAM,IAAIjH,EAAY,UAAWG,EAAM,CAACgH,IAE5C,MAGH,CAAM,GAAsB,UAAlBH,EAAY,KAAe,CAClC,GAAIA,EAAY,OAAMC,EAAY,KAAI,MAAM,IAAIjH,EAAY,UAAWG,EAAM,CAAC8G,IAC9E,GAAID,EAAY,KAAE5J,OAAS6J,EAAY,KAAE7J,OACrC,MAAM,IAAI4C,EAAY,UAAWG,EAAM,CAAC6G,EAAMI,KAAKhK,OAAQ6J,EAAMG,KAAKhK,SAI1E,IAAK,IAAII,EAAI,EAAGA,EAAIwJ,EAAY,KAAE5J,OAAQI,IACtC,IACImJ,EAAWK,EAAY,KAAExJ,GAAIyJ,EAAY,KAAEzJ,GAAIsJ,EAAKC,EACvD,CAAC,MAAO3K,GACL,MAAM,IAAI4D,EAAY,UAAW5D,EAAO,CAACoB,GAC7D,CAEY,MAGH,CAAM,GAAqB,SAAjBwJ,EAAY,MACnB,GAAsB,UAAlBC,EAAY,MAAmC,UAAlBA,EAAY,MAAmC,UAAlBA,EAAY,KACtE,MAAM,IAAIjH,EAAY,UAAWG,EAAM,CAAC6G,EAAa,MAAGG,QAIzD,IAAsB,UAAlBH,EAAY,KAOnB,MAAM,IAAIhH,EAAY,UAAWG,EAAM,CAAC6G,EAAY,OANpD,GAAsB,UAAlBC,EAAY,MAAmC,UAAlBA,EAAY,KACzC,MAAM,IAAIjH,EAAY,UAAWG,EAAM,CAAC6G,EAAa,MAAGG,GAMxE,CAGQ,IAAK,IAAIE,EAAI,EAAGA,EAAIJ,EAAY,KAAE7J,OAAQiK,IAAK,CAE3C,IADA,IAAIC,GAAU,EACLrG,EAAI,EAAGA,EAAI+F,EAAY,KAAE5J,OAAQ6D,IACtC,IACI,GAAIqG,EAAS,MACb,GAA8C,WAA1CjC,EAAW4B,EAAY,KAAEI,IAAW,OAA4D,WAA1ChC,EAAW2B,EAAY,KAAE/F,IAAW,MAE1F0F,EADgB,CAAEnB,MAAO,SAAUU,KAAM,QAASkB,KAAMJ,EAAY,MAC9CC,EAAY,KAAEI,GAAIP,EAAKC,QAE7CJ,EAAWK,EAAY,KAAE/F,GAAIgG,EAAY,KAAEI,GAAIP,EAAKC,GAExDO,GAAU,CACb,CAAC,MAAOlL,GACL,QACpB,CAEY,IAAKkL,EAAS,MAAM,IAAItH,EAAY,UAAWG,EAAM,CAAC6G,EAAOC,GACzE,CACA,CA5E4CM,QACnC,GAAuB,WAAnBP,EAAa,OA6EtB,WAEI,GAAsB,UAAlBA,EAAY,KAAe,CAC3B,GAAIC,EAAa,OAAMA,EAAa,OAAuB,UAAlBA,EAAY,KACjD,MAAM,IAAIjH,EAAY,UAAWG,EAAM,CAAC6G,EAAa,MAAGG,IAE5D,MAGH,CAAM,GAAsB,UAAlBH,EAAY,KAAe,CAClC,GAAuB,cAAnBC,EAAa,MAAmB,MAAM,IAAIjH,EAAY,UAAWG,EAAM,CAAC,QAAS,cACrF,GAAI6G,EAAa,QAAMC,EAAa,QAAwB,UAAlBA,EAAY,MAAmC,UAAlBA,EAAY,MAAmC,UAAlBA,EAAY,MAAmC,UAAlBA,EAAY,MACzI,MAAM,IAAIjH,EAAY,UAAWG,EAAM,CAACgH,IAE5C,MAGH,CAAM,GAAuB,UAAlBH,EAAY,KAAe,CACnC,GAAIA,EAAa,QAAMC,EAAa,OAAKD,EAAY,OAAMC,EAAY,KAEnE,MAAM,IAAIjH,EAAY,UAAWG,EAAM,CAACgH,IAE5C,MAGH,CAAM,GAAsB,UAAlBH,EAAY,KAAe,CAClC,GAAIA,EAAa,QAAMC,EAAa,OAAKD,EAAY,OAAMC,EAAY,KAEnE,MAAM,IAAIjH,EAAY,UAAWG,EAAM,CAACgH,IAE5C,MAGH,CAAM,GAAsB,UAAlBH,EAAY,MACnB,GAAIA,EAAa,QAAMC,EAAa,QAAwB,UAAlBA,EAAY,MAAmC,UAAlBA,EAAY,MAC9D,UAAlBA,EAAY,MAAmC,UAAlBA,EAAY,MAAmC,UAAlBA,EAAY,MAErE,MAAM,IAAIjH,EAAY,UAAWG,EAAM,CAACgH,SAIzC,GAAsB,UAAlBH,EAAY,KAAe,CAClC,GAAuB,cAAnBC,EAAa,MAAmB,OACpC,GAAID,EAAa,QAAMC,EAAa,QAAwB,UAAlBA,EAAY,MAAmC,UAAlBA,EAAY,MAC9D,UAAlBA,EAAY,MAAmC,UAAlBA,EAAY,MAExC,MAAM,IAAIjH,EAAY,UAAWG,EAAM,CAACgH,GAI/C,MAAM,GAAsB,UAAlBH,EAAY,KAAe,CAClC,GAAIA,EAAa,QAAMC,EAAa,OAAKD,EAAY,OAAMC,EAAY,KACnE,MAAM,IAAIjH,EAAY,UAAWG,EAAM,IAE3C,IAAK,IAAI3C,EAAI,EAAGA,EAAIwJ,EAAY,KAAE5J,OAAQI,IACtC,IAAKiE,EAAWuF,EAAY,KAAExJ,IAAK,MAAM,IAAIwC,EAAY,UAAWG,EAAM,CAAC3C,EAAG6H,EAAW2B,EAAY,KAAExJ,MAE3G,IAAK,IAAIyD,EAAI,EAAGA,EAAIgG,EAAY,KAAE7J,OAAQ6D,IACtC,IAAKQ,EAAWwF,EAAY,KAAEhG,IAAK,MAAM,IAAIjB,EAAY,UAAWG,EAAM,CAACc,EAAGoE,EAAW4B,EAAY,KAAEhG,KAI9G,KAAM,IAAsB,UAAlB+F,EAAY,KASnB,MAAM,IAAIhH,EAAY,UAAWG,EAAM,CAAC6G,EAAY,OARpD,GAAIA,EAAa,QAAMC,EAAa,OAAKD,EAAY,OAAMC,EAAY,KACnE,MAAM,IAAIjH,EAAY,UAAWG,EAAM,IAE3C,IAAKsB,EAAWuF,EAAY,KAAE,IAAK,MAAM,IAAIhH,EAAY,UAAWG,EAAM,CAACkF,EAAW2B,EAAY,KAAE,MACpG,IAAKvF,EAAWwF,EAAY,KAAE,IAAK,MAAM,IAAIjH,EAAY,UAAWG,EAAO,CAACkF,EAAW4B,EAAY,KAAE,KAKjH,CAIQ,IADA,IAAIO,EAAaP,EAAa,KAAIA,EAAY,KAAI,CAACJ,GAC1CY,EAAI,EAAGA,EAAID,EAAUpK,OAAQqK,IAAK,CAEvC,IADA,IAAIH,GAAU,EACLI,EAAI,EAAGA,EAAIV,EAAY,KAAE5J,OAAQsK,IACtC,IACI,GAAIJ,EAAS,SACbX,EAAWK,EAAY,KAAEU,GAAIF,EAAUC,GAAIX,EAAKC,GAChDO,GAAU,CACb,CAAC,MAAOlL,GACL,QACpB,CAEY,IAAKkL,EAAS,MAAM,IAAItH,EAAY,UAAWG,EAAM,CAACsH,EAAGT,EAAO3B,EAAWmC,EAAUC,IAAW,OAC5G,CACA,CAtK0CE,QACjC,GAAuB,UAAnBX,EAAa,OAuKtB,WAGI,GAAuB,UAAnBC,EAAa,MAAe,CAC5B,GAAI9B,EAAa8B,EAAW,IAAGD,EAAW,KAAI,OAC9C,GAAY,IAARF,EACA,IAII,OAAOH,EAFE,IAAIK,EAAW,IACf,IAAIC,EAAW,IACUH,EAAKC,EAC1C,CAAC,MAAO3K,GACL,MAAM,IAAI4D,EAAY,UAAW5D,EAAO,GAC3C,CAEL,MAAM,IAAI4D,EAAY,UAAWG,EAAM,CAAC2G,GAE3C,CAAM,GAAuB,UAAnBG,EAAa,MAAe,CACnC,GAAY,IAARH,EACA,IAGI,OAAOH,EADE,IAAIK,EAAW,IACEC,EAAW,IAAGH,EAAKC,EAChD,CAAC,MAAO3K,GACL,MAAM,IAAI4D,EAAY,UAAW5D,EAAO,GAC3C,CAEL,MAAM,IAAI4D,EAAY,UAAWG,EAAM,CAAC2G,GAEpD,CACQ,MAAM,IAAI9G,EAAY,UAAWG,EAAM,CAAC8G,GAChD,CAtMyCW,QAChC,GAAuB,UAAnBZ,EAAa,OAuMtB,WACI,IAAII,EAEJ,GAAuB,UAAnBH,EAAa,MAAe,MAAM,IAAIjH,EAAY,UAAWG,EAAM,CAAC8G,IACxEG,EAAOpD,EAAiBgD,EAAW,KAEnC,IAAK,IAAIxJ,EAAI,EAAGA,EAAI4J,EAAKhK,OAAQI,IAAK,CAClC,IAAI1C,EAAMsM,EAAK5J,GACf,KAAM1C,KAAOmM,EAAW,KAAI,MAAM,IAAIjH,EAAY,UAAWG,EAAM,CAACrF,EAAKsK,EAAOwB,EAAQ9L,MACxF,IACI6L,EAAWK,EAAW,IAAElM,GAAMmM,EAAW,IAAEnM,GAAMgM,EAAKC,EACzD,CAAC,MAAO3K,GACL,MAAM,IAAI4D,EAAY,UAAW5D,EAAO,CAACtB,GACzD,CACA,CACA,CAtNyC+M,OAChC,IAAuB,aAAnBb,EAAa,MACjB,MAAM,IAAIhH,EAAY,UAAWG,EAAM,KAsN5C,WACI,GAAuB,aAAnB8G,EAAa,MAAmB,MAAM,IAAIjH,EAAY,UAAWG,EAAM,CAAC8G,IAC5E,GAAID,EAAW,MAAMvD,SAAU,OAE/B,GAAIuD,EAAY,KAAG,CACf,GAAIA,EAAY,OAAMH,EAAQlD,MAC3BqD,EAAY,OAAMC,EAAY,MAC7BA,EAAY,MAAKD,EAAY,OAAMC,EAAY,KAAEtD,KAAO,OAC5D,MAAM,IAAI3D,EAAY,UAAWG,EAAM,CAAC6G,EAAY,KAAGC,EAAMtD,MACzE,CACQ,GAAIqD,EAAY,KAAG,CACf,GAA6B,mBAAlBC,EAAY,KAAkB,MAAM,IAAIjH,EAAY,UAAWG,EAAM,IAChF,GAAIgF,EAAa8B,EAAY,KAAGD,EAAY,MAAI,OAChD,MAAM,IAAIhH,EAAY,UAAWG,EAAM,GACnD,CAEQ,KAAK6G,EAAc,QAAOA,EAAc,QAAgC,IAA3BA,EAAc,OAAE5J,QAAe,OAC5E,QAA+B,IAApB6J,EAAc,aAAgD,IAApBA,EAAc,OAC/D,MAAM,IAAIjH,EAAY,UAAWG,EAAM,CAACkF,EAAW2B,EAAMxE,QAAS4C,EAAO4B,EAAM1D,UAEnF,GAAI7I,MAAMC,QAAQsM,EAAc,SAAMA,EAAc,OAAE5J,OAAS,EAC3D,IACIuJ,EAAW,CAAC,SAAS9C,OAAOmD,EAAc,QAAI,CAAC,SAASnD,OAAOoD,EAAc,QAAIH,EAAKC,EACzF,CAAC,MAAO3K,GACL,MAAM,IAAI4D,EAAY,UAAW5D,EAAO,GACxD,CAEQ,GAAI4K,EAAc,OACd,IACIL,EAAWK,EAAc,OAAGC,EAAc,OAAGH,EAAKC,EACrD,CAAC,MAAO3K,GACL,MAAM,IAAI4D,EAAY,UAAW5D,EAAO,GACxD,CAEA,CAzP4C0L,EACO,MAf3CnB,EADc,CAAEnB,MAAO,SAAUU,KAAM,QAASkB,KAAM,CAACR,IACnCC,EAASC,EAAKC,EAwQ1C,CAUA,SAASgB,EAAWnB,EAAShM,EAAQkM,EAAKC,GACtC,IAAIC,EAAQ3B,EAAWuB,GACnBK,EAAQ5B,EAAWzK,GACnBuF,EAAO,CAAE,EACT+G,EAAOF,EAAM7F,WAAYgG,EAAOF,EAAM9F,WAO1C,GAJiB,aADjB4F,EAAWA,GAAsB,aACL5G,EAAK,cAAgB4G,GACjDD,EAAMA,GAAO,EAGTE,EAAY,QACW,UAAlBA,EAAY,MAAmC,UAAlBA,EAAY,MAAmC,UAAlBA,EAAY,MAAmC,UAAlBA,EAAY,MAAkC,UAAlBA,EAAY,WACxG,IAAjBA,EAAW,KAA8C,IAAzBA,EAAY,KAAE5J,QACrD,MAAM,IAAI4C,EAAY,UAAWG,EAAM,CAAC,UAAW+G,IAK3D,GAAuB,SAAnBF,EAAa,OACb,GAAe,OAAXpM,EAAiB,MAAM,IAAIoF,EAAY,UAAWG,EAAM,CAAC,OAAQgH,SAElE,GAAuB,cAAnBH,EAAa,OACpB,QAAsB,IAAXpM,EAAwB,MAAM,IAAIoF,EAAY,UAAWG,EAAM,CAAC,YAAagH,SAErF,GAAuB,WAAnBH,EAAa,OAEpB,GADgC,iBAArBA,EAAe,cAAoC,IAAXpM,IAAwBA,EAASoM,EAAe,SAC7E,iBAAXpM,EAAqB,MAAM,IAAIoF,EAAY,UAAWG,EAAM,CAAC,SAAUgH,SAE/E,GAAuB,WAAnBH,EAAa,OAEpB,GADgC,iBAArBA,EAAe,cAAoC,IAAXpM,IAAwBA,EAASoM,EAAe,SAC7E,iBAAXpM,EAAqB,MAAM,IAAIoF,EAAY,UAAWG,EAAM,CAAC,SAAUgH,SAE/E,GAAuB,YAAnBH,EAAa,OAEpB,GADgC,kBAArBA,EAAe,cAAqC,IAAXpM,IAAwBA,EAASoM,EAAe,SAC9E,kBAAXpM,EAAsB,MAAM,IAAIoF,EAAY,UAAWG,EAAM,CAAC,UAAWgH,SAEjF,GAAuB,WAAnBH,EAAa,OAEpB,GADgC,iBAArBA,EAAe,cAAoC,IAAXpM,IAAwBA,EAASoM,EAAe,SAC7E,iBAAXpM,EAAqB,MAAM,IAAIoF,EAAY,UAAWG,EAAM,CAAC,SAAUgH,SAE/E,GAAsB,WAAnBH,EAAa,OACnB,GAAsB,iBAAXpM,EAAqB,MAAM,IAAIoF,EAAY,UAAWG,EAAM,CAAC,SAAUgH,SAE/E,GAAuB,WAAnBH,EAAa,OAEpB,GADIA,EAAe,SAA0B,OAArBA,EAAe,cAAgC,IAAXpM,IAAwBA,EAASoM,EAAe,WACtGpM,aAAkBiG,QAAS,MAAM,IAAIb,EAAY,UAAWG,EAAM,CAAC,SAAUgH,SAEhF,GAAuB,WAAnBH,EAAa,OACpB,GAAuB,WAAnBC,EAAa,MAAgB,MAAM,IAAIjH,EAAY,UAAWG,EAAM,CAAC,SAAUgH,SAEhF,GAAuB,UAAnBH,EAAa,OAQxB,WACI,IAAKvM,MAAMC,QAAQE,GAAS,MAAM,IAAIoF,EAAY,UAAWG,EAAM,CAACgH,IAGpE,GAAsB,UAAlBH,EAAY,KACZ,OAGG,GAAsB,UAAlBA,EAAY,KAAe,CAClC,GAAsB,IAAlBpM,EAAOwC,OAAc,MAAM,IAAI4C,EAAY,UAAWG,EAAM,CAACvF,EAAOwC,SACxE,MAGH,CAAM,GAAsB,UAAlB4J,EAAY,KAAe,CAClC,GAAIA,EAAY,KAAE5J,OAASxC,EAAOwC,OAAQ,MAAM,IAAI4C,EAAY,UAAWG,EAAM,CAAC6G,EAAY,KAAE5J,OAAQ6J,EAAY,KAAE7J,SACtH,IAAI,IAAII,EAAI,EAAGA,EAAIwJ,EAAY,KAAE5J,OAAQI,IAAK,CAC1C,IAAIwK,EAAUhB,EAAY,KAAExJ,GACxByK,EAAUhB,EAAY,KAAEzJ,GAC5B,GAAIiE,EAAWuG,IACX,IAAKtG,EAAesG,EAAOC,GAAO,MAAM,IAAIjI,EAAY,UAAWG,EAAM,CAAC3C,EAAGwK,EAAOC,SAEpF,IACIF,EAAWC,EAAOC,EAAMnB,EAAKC,EAChC,CAAC,MAAO3K,GACL,MAAM,IAAI4D,EAAY,UAAW5D,EAAO,CAACoB,EAAG4H,EAAO4C,IAC3E,CAEA,CACY,MAGH,CAAM,GAAsB,UAAlBhB,EAAY,MACnB,GAAsB,IAAlBpM,EAAOwC,OAAc,MAAM,IAAI4C,EAAY,UAAYG,EAAM,CAACvF,EAAOwC,aAGtE,IAAsB,UAAlB4J,EAAY,KAKnB,MAAM,IAAIhH,EAAY,UAAYG,EAAM,CAAC6G,EAAY,OAJrD,GAAIvM,MAAMC,QAAQE,IAA6B,IAAlBA,EAAOwC,OAAc,MAK9D,CAIQ,IAAK,IAAIiK,EAAI,EAAGA,EAAIzM,EAAOwC,OAAQiK,IAAK,CAGpC,IAFA,IAAIa,EAAMtN,EAAOyM,GACbC,GAAU,EACLrG,EAAI,EAAGA,EAAI+F,EAAY,KAAE5J,OAAQ6D,IACtC,IACI,IAAIkH,EAAOnB,EAAY,KAAE/F,GACzB,IAAIQ,EAAW0G,GAKR,CACHJ,EAAWI,EAAMD,EAAKpB,EAAKC,GAC3BO,GAAU,EACV,KACxB,CARwB,GAAI5F,EAAeyG,EAAMD,GAAM,CAC3BZ,GAAU,EACV,KAC5B,CAMiB,CAAC,MAAOlL,GACL,QACpB,CAEY,IAAKkL,EACD,MAAM,IAAItH,EAAY,UAAWG,EAAM,CAAC6G,EAAM7F,WAAY8F,EAAM9F,YAEhF,CACA,CA7E2CiH,QAClC,GAAuB,WAAnBpB,EAAa,OA8EtB,WAEI,GAAsB,UAAlBA,EAAY,KACZ,OAGG,GAAsB,UAAlBA,EAAY,KAAe,CAClC,QAAsB,IAAXpM,EAAwB,OACnC,MAAM,IAAIoF,EAAY,UAAWG,EAAM,GAG1C,CAAM,GAAsB,UAAlB6G,EAAY,KAAe,CAClC,QAAsB,IAAXpM,EAAwB,OACnC,MAAM,IAAIoF,EAAY,UAAW,GAGpC,CAAM,GAAsB,UAAlBgH,EAAY,KAAe,CAClC,GAAIpM,aAAkBqF,MAAO,OAC7B,MAAM,IAAID,EAAY,UAAW,GAG7C,CAAe,GAAsB,UAAlBgH,EAAY,WAGhB,GAAsB,UAAlBA,EAAY,MACnB,QAAsB,IAAXpM,EAAwB,YAGhC,GAAsB,UAAlBoM,EAAY,MACnB,IAAK,IAAIxJ,EAAI,EAAGA,EAAIwJ,EAAY,KAAE5J,OAAQI,IACtC,IAAKiE,EAAWuF,EAAY,KAAExJ,IAAK,MAAM,IAAIwC,EAAY,UAAWG,EAAM,CAAC3C,EAAG4H,EAAO4B,EAAY,KAAExJ,UAIpG,IAAsB,UAAlBwJ,EAAY,KAsDnB,MAAM,IAAIhH,EAAY,UAAYG,EAAM,CAAC6G,EAAY,OArDrD,IAAKvF,EAAWuF,EAAY,KAAE,IAAK,MAAM,IAAIhH,EAAY,UAAWG,EAAM,CAACiF,EAAO4B,EAAY,KAAE,MAChG,QAAsB,IAAXpM,EAEP,YADAA,EAASoM,EAAY,KAAE,GAoDvC,CAGQ,IAAK,IAAI/F,EAAI,EAAGA,EAAI+F,EAAY,KAAE5J,OAAQ6D,IACtC,IACI,IAAIkH,EAAOnB,EAAY,KAAE/F,GACzB,IAAIQ,EAAW0G,GAGX,OAAOJ,EAAWI,EAAMvN,EAAQkM,EAAKC,GAFrC,GAAIrF,EAAeyG,EAAMvN,GAAS,MAIzC,CAAC,MAAOwB,GACL,QAChB,CAEQ,MAAM,IAAI4D,EAAY,UAAWG,EAAK,CAAC6G,EAAOC,GACtD,CAvL0CoB,QACjC,GAAuB,UAAnBrB,EAAa,OAwLtB,WACI,GAAuB,UAAnBC,EAAa,MAAe,CAC5B,QAA4B,IAAjBD,EAAW,IAAmB,OACzC,GAAI7B,EAAa8B,EAAW,IAAGD,EAAW,KAAI,MAC1D,MAAe,GAAsB,iBAAXpM,EAAqB,CACnC,GAAIA,aAAkBgM,EAAS,OAC/B,IAvvCW,mBADGpM,EAwvCQoM,IAtvCvBpM,IAAQsL,QAAUtL,IAAQwC,QAAUxC,IAAQuL,SAC5CvL,IAAQ8J,QAAU9J,IAAQC,OAASD,IAAQiJ,UAC3CjJ,IAAQqG,QAAUrG,IAAQ+G,MAC1B/G,IAAQwL,QAAUxL,IAAQyL,SAmvCoB,OAAXrL,GAA2B,IAARkM,EACjD,IACI,IAAIwB,EAAuB,YAAbvB,EAAyB,aAAeA,EAAW,aACjE,OAAOgB,EAAWlG,EAAS+E,GAAUhM,EAAQkM,EAAKwB,EACrD,CAAC,MAAOlM,GACL,MAAM,IAAI4D,EAAY,UAAW5D,EACrD,CAEY,MAAM,IAAI4D,EAAY,UAAWG,EAAM,CAAC2B,EAAU8E,IAC9D,CAjwCA,IAA0BpM,EAkwClB,MAAM,IAAIwF,EAAY,UAAWG,EAAM,CAAC8G,GAChD,CAzMyCsB,QAChC,GAAuB,UAAnBvB,EAAa,OA0MtB,WACI,IAAII,EAEJ,GAAuB,UAAnBH,EAAa,MAAe,MAAM,IAAIjH,EAAY,UAAWG,EAAM,CAAC8G,IACxEG,EAAOpD,EAAiBgD,EAAMvB,KAE9B,IAAK,IAAIjI,EAAI,EAAGA,EAAI4J,EAAKhK,OAAQI,IAAK,CAClC,IAAI1C,EAAMsM,EAAK5J,GACXgL,EAAcnD,EAAWuB,EAAQ9L,IAErC,GAAI,eAAiBA,GAAO,kBAAoBA,EAAhD,MAEsC,IAA3B0N,EAAqB,SAAgD,OAA3BA,EAAqB,cAAqC,IAAhB5N,EAAOE,KACtGF,EAAOE,GAAO0N,EAAqB,SAGnC,IACI,IAAIF,EAAUvB,EAAU,KAAOjM,EAAI,KACnCiN,EAAWnB,EAAQ9L,GAAMF,EAAOE,GAAMgM,EAAKwB,EAC9C,CAAC,MAAOlM,GACL,MAAM,IAAI4D,EAAY,UAAW5D,EAAO,CAACtB,GACzD,CAX2E,CAY3E,CACA,CAjOyC2N,OAChC,IAAuB,aAAnBzB,EAAa,MACjB,MAAM,IAAIhH,EAAY,UAAWG,EAAM,KAiO5C,WACI,GAAuB,aAAnB8G,EAAa,MAAkB,MAAM,IAAIjH,EAAY,UAAWG,EAAM,CAAC8G,IAC3E,GAAID,EAAW,MAAMvD,SAAU,OAE/B,GAAIuD,EAAY,KAAG,CACf,GAAIA,EAAY,OAAMpM,EAAO+I,MAC1BqD,EAAY,OAAMC,EAAY,MAC7BA,EAAY,MAAKD,EAAY,OAAMC,EAAY,KAAEtD,KAAO,OAC5D,MAAM,IAAI3D,EAAY,UAAWG,EAAM,CAAC6G,EAAY,KAAGpM,EAAO+I,MAC1E,CACQ,GAAIqD,EAAY,KAAG,CACf,GAA6B,mBAAlBC,EAAY,KAAkB,MAAM,IAAIjH,EAAY,UAAWG,EAAM,IAChF,GAAIgF,EAAa8B,EAAY,KAAGD,EAAY,MAAI,OAChD,MAAM,IAAIhH,EAAY,UAAWG,EAAM,GACnD,CAEQ,KAAK6G,EAAc,QAAOA,EAAc,QAAgC,IAA3BA,EAAc,OAAE5J,QAAe,OAC5E,QAA+B,IAApB6J,EAAc,aAAgD,IAApBA,EAAc,OAC/D,MAAM,IAAIjH,EAAY,UAAWG,EAAM,CAACkF,EAAW2B,EAAMxE,QAAS4C,EAAO4B,EAAM1D,UAGnF,GAAI7I,MAAMC,QAAQsM,EAAc,SAAMA,EAAc,OAAE5J,OAAS,EAC3D,IACIuJ,EAAW,CAAC,SAAS9C,OAAOmD,EAAc,QAAI,CAAC,SAASnD,OAAOoD,EAAc,QAAIH,EAAKC,EACzF,CAAC,MAAO3K,GACL,MAAM,IAAI4D,EAAY,UAAW5D,EAAO,GACxD,CAGQ,GAAI4K,EAAc,OACd,IACIL,EAAWK,EAAc,OAAGC,EAAc,OAAGH,EAAKC,EACrD,CAAC,MAAO3K,GACL,MAAM,IAAI4D,EAAY,UAAWG,EAAM,GACvD,CAEA,CAtQ4CuI,EACO,CAsQnD,CA5hCApH,EAAK0C,iBAAmBA,EAgDxB1C,EAAKqH,UAvCL,SAASA,EAAUhH,EAAMC,GAErB,GAAID,IAASC,EAAM,OAAO,EAG1B,GAAa,OAATD,GAA0B,OAATC,UAAwBD,UAAgBC,EAAM,OAAO,EAG1E,GAAoB,mBAATD,GAAuC,mBAATC,EACrC,OAAOD,EAAKR,aAAeS,EAAKT,WAIpC,GAAoB,iBAATQ,GAAqC,iBAATC,EAAmB,OAAO,EAGjE,GAAInH,MAAMC,QAAQiH,IAASlH,MAAMC,QAAQkH,GAAO,CAC5C,GAAID,EAAKvE,SAAWwE,EAAKxE,OAAQ,OAAO,EACxC,IAAK,IAAII,EAAI,EAAGA,EAAImE,EAAKvE,OAAQI,IAC7B,IAAKmL,EAAUhH,EAAKnE,GAAIoE,EAAKpE,IAAK,OAAO,EAE7C,OAAO,CACf,CAKI,IAAIoL,EAAQtE,OAAOC,oBAAoB5C,GACnCkH,EAAQvE,OAAOC,oBAAoB3C,GAEvC,GAAIgH,EAAMxL,SAAWyL,EAAMzL,OAAQ,OAAO,EAE1C,IAAK,IAAI6D,EAAI,EAAGA,EAAI2H,EAAMxL,OAAQ6D,IAAK,CACnC,IAAInG,EAAM8N,EAAM3H,GAChB,IAA6B,IAAzB4H,EAAM/E,QAAQhJ,KAAgB6N,EAAUhH,EAAK7G,GAAM8G,EAAK9G,IAAO,OAAO,CAClF,CAEI,OAAO,CACX,EAsFAwG,EAAKoD,SAAWA,EAwBhBpD,EAAK6D,aAAeA,EAwBpB7D,EAAKwH,QAfL,SAAiBnE,EAAM/J,GACnB,IAAIgJ,EACJ,GAAoB,mBAATe,EAAqB,OAAO,EACvC,GAAwB,mBAAX/J,GAA2C,iBAAXA,EAAsB,OAAO,EAE1EgJ,EAAMc,EAASC,GACf,IAAK,IAAInH,EAAI,EAAGA,EAAIoG,EAAIxG,OAAQI,IAC5B,GAAsB,iBAAX5C,GACP,GAAIA,IAAWgJ,EAAIpG,GAAGmG,KAAM,OAAO,OAEnC,GAAI/I,IAAWgJ,EAAIpG,GAAI,OAAO,EAGtC,OAAO,CACX,EAqEA8D,EAAKyH,WAjDL,SAASA,EAAWnO,GAChB,IAAIJ,EAAM,CAAE,EACRwO,EAAUzO,EAAUK,IAAWA,EAAc,MAAIA,EAASyK,EAAWzK,GAYzE,GATAJ,EAAW,MAAIwO,EAAe,MAEH,OAAvBA,EAAiB,cAA4C,IAAvBA,EAAiB,UAAmBxO,EAAa,QAAIwO,EAAiB,SACxF,OAApBA,EAAc,WAAyC,IAApBA,EAAc,OAAmBxO,EAAU,KAAIwO,EAAc,MAChGA,EAAgB,SAAGxO,EAAY,OAAIwO,EAAgB,QACnDA,EAAgB,SAAGxO,EAAY,OAAIwO,EAAgB,QACnDA,EAAiB,UAAGxO,EAAa,QAAIwO,EAAiB,SACtDA,EAAmB,YAAGxO,EAAe,UAAIwO,EAAmB,WATjD,CAAC,OAAQ,YAAa,SAAU,SAAU,UAAW,SAAU,UAAW,SAAU,UAWtFlF,QAAQtJ,EAAW,QAAK,EAEjC,OADIwO,EAAiB,UAAGxO,EAAa,QAAIwO,EAAiB,SACnDxO,EAEX,GAAqB,UAAjBA,EAAW,OAAmC,WAAjBA,EAAW,MAAgB,CACxDA,EAAU,KAAI,GACd,IAAI,IAAIgD,EAAI,EAAGA,EAAIwL,EAAc,KAAE5L,OAAQI,IACvChD,EAAU,KAAEgD,GAAKuL,EAAWC,EAAc,KAAExL,GAExD,CACI,GAAqB,aAAjBhD,EAAW,MAAkB,CAC7B,IAAI,IAAIyG,EAAI,EAAGA,EAAIzG,EAAY,OAAE4C,OAAQ6D,IACrCzG,EAAY,OAAEyG,GAAK8H,EAAWC,EAAgB,OAAE/H,IAEhD+H,EAAgB,SAAGxO,EAAY,OAAIuO,EAAWC,EAAgB,QAC1E,CACI,GAAqB,UAAjBxO,EAAW,OACmB,mBAAnBwO,EAAa,IAAkB,CACtCxO,EAAa,QAAIwO,EAAa,IAAErF,KAChC,IAAI+B,EAAO7D,EAASmH,EAAa,KACjCxO,EAAe,UAAIuO,EAAWrD,EAC1C,CAEI,GAAqB,UAAjBlL,EAAW,MAAe,CAC1BA,EAAW,MAAI,CAAE,EAGjB,IAFA,IAAIyO,EAAQD,EAAa,KAAKA,EAAe,MACzC5B,EAAOpD,EAAiBiF,GACnB5B,EAAI,EAAGA,EAAID,EAAKhK,OAAQiK,IAAK,CAClC,IAAIvM,EAAMsM,EAAKC,GACX,eAAiBvM,GAAO,kBAAoBA,IAChDN,EAAW,MAAEM,GAAOiO,EAAWE,EAAMnO,IACjD,CACA,CACI,OAAON,CACX,EAYA8G,EAAK8D,OAASA,EAiKd9D,EAAK+D,WAAaA,EAwoBlB/D,EAAK4H,UAPL,SAAmBtC,EAASC,EAASC,GACjC,IACIH,EAAWC,EAASC,EAASC,EAChC,CAAC,MAAO1K,GACL,MAAM,IAAI4D,EAAY,UAAW5D,EACzC,CACA,EAkBAkF,EAAK6H,UAPL,SAAmBvC,EAAShM,EAAQkM,GAChC,IACIiB,EAAWnB,EAAShM,EAAQkM,EAC/B,CAAC,MAAO1K,GACL,MAAM,IAAI4D,EAAY,UAAW5D,EACzC,CACA,EAmBAkF,EAAK8H,YARL,SAAqBxC,EAAShM,EAAQkM,GAClC,IACIH,EAAWC,EAAShM,EAAQkM,EAC/B,CAAC,MAAO1K,GACL,OAAO,CACf,CACI,OAAO,CACX,EAmBAkF,EAAK+H,YARL,SAAqBzC,EAAShM,EAAQkM,GAClC,IAEI,OADAiB,EAAWnB,EAAShM,EAAQkM,IACrB,CACV,CAAC,MAAO1K,GACL,OAAO,CACf,CACA,ECt8CA,IAAIgF,EAAU3F,WAEV4F,IAAUD,EAAQC,SAAUD,EAAQC,QAKpCiI,EAAO,CAAA,EAIX,SAAS/O,EAAUC,GACf,OAAc,MAAPA,GAA8B,iBAARA,CACjC,CAGKC,MAAMC,UAAW2G,IAClB5G,MAAMC,QAAU,SAAS6O,GACrB,MAAiD,mBAA1CjF,OAAOE,UAAUrD,SAAS6D,KAAKuE,EACzC,GA+BLD,EAAKE,cAAgB,SAASA,EAAcC,EAAQC,GAChD,IACIC,EAAU,EAQd,OANAD,EAAUA,GAAW,EACjBD,aAAkBhP,OAJR,GAIuBiP,IACjCC,IACAD,IACAC,GAAgBH,EAAcC,EAAO,GAAIC,IAEtCC,CACX,EAOAL,EAAKM,WAAa,WACd,SAASC,EAAIC,GACT,IAAIC,GAAKC,KAAKC,SAAS9I,SAAS,IAAI,aAAavC,UAAU,EAAE,IAC7D,OAAOkL,EAAI,IAAMC,EAAEnL,UAAU,EAAG,GAAK,IAAMmL,EAAEnL,UAAU,EAAG,GAAKmL,CACvE,CACI,OAAOF,IAAQA,GAAI,GAAQA,GAAI,GAAQA,GAC3C,EAQAP,EAAKY,SAAW,SAASA,EAASC,GAC9B,IAAIC,EAEJ,IAAK7P,EAAU4P,GACX,OAAOA,EAEX,GAAIA,aAAoBtJ,OAAQ,OAAOsJ,EAKvC,GAFAC,EAAO3P,MAAMC,QAAQyP,GAAY,GAAK,CAAE,EAEpC1P,MAAMC,QAAQyP,GACd,IAAK,IAAI3M,EAAI,EAAGA,EAAI2M,EAAS/M,OAAQI,IACjC4M,EAAK5M,GAAK0M,EAASC,EAAS3M,SAGhC,IAAK,IAAI1C,KAAOqP,EACR7F,OAAOE,UAAUzJ,eAAeiK,KAAKmF,EAAUrP,KAC/CsP,EAAKtP,GAAOoP,EAASC,EAASrP,KAI1C,OAAOsP,CACX,EASAd,EAAKe,SAC4B,mBAAlB/F,OAAOgG,QAA0BjJ,EAiBjC,SAAUsD,EAAM4F,GACnB,GAAIA,EAAW,CACX5F,EAAKpE,MAAQgK,EACb,IAAIC,EAAW,WAAc,EAC7BA,EAAShG,UAAY+F,EAAU/F,UAC/BG,EAAKH,UAAY,IAAIgG,EACrB7F,EAAKH,UAAUpE,YAAcuE,CAC7C,CACA,EAvBe,SAASA,EAAM4F,GACdA,IACA5F,EAAKpE,MAAQgK,EACb5F,EAAKH,UAAYF,OAAOgG,OAAOC,EAAU/F,UAAW,CAChDpE,YAAa,CACTvD,MAAO8H,EACP8F,UAAU,EACVC,cAAc,EACdC,YAAY,KAI3B,EA2BTrB,EAAKsB,WAAa,SAASC,EAAQtB,GAC/B,IAAIuB,EAAa,GACbC,EAAS,EAEb,GAAsB,mBAAXF,EAAuB,MAAM,IAAI7K,EAAY,UAAW,KAAM,QAAQ6K,IACjF,IAAKtQ,EAAUgP,GAAQ,MAAM,IAAIvJ,EAAY,UAAW,KAAM,QAAQuJ,SAEtC,IAArBA,EAAMuB,YACbxG,OAAO0G,eAAezB,EAAO,aAAc,CACvC1L,IAAK,WACD,OAAOiN,CACV,EACDJ,cAAc,EACdC,YAAY,IAIfE,EAAe,SAAGA,EAAe,OAAI,IAE1C,IAAI,IAAIrN,EAAI,EAAGA,EAAIyN,UAAU7N,OAAQI,IAAK,CACtC,GAA4B,mBAAjByN,UAAUzN,GAKd,MAAM,IAAIwC,EAAY,UAAW,KAAM,CAACxC,EAAI,SAAUyN,UAAUzN,KAJ/D+L,EAAMuB,WAAWhH,QAAQmH,UAAUzN,IAAM,IACzC+L,EAAMuB,WAAWzN,KAAK4N,UAAUzN,IAChCuN,IAGX,CAED,IAAK,IAAI9J,EAAI,EAAGA,EAAI4J,EAAe,OAAEzN,OAAQ6D,IACrCsI,EAAMuB,WAAWhH,QAAQ+G,EAAe,OAAE5J,IAAM,IAChDsI,EAAMuB,WAAWzN,KAAKwN,EAAe,OAAE5J,IACvC8J,KAIR,IAEI,IADA,IACS1D,EADMkC,EAAMuB,WAAW1N,OAAS2N,EAClB1D,EAAIkC,EAAMuB,WAAW1N,OAAQiK,IACxB,cAApBwD,EAAc,MACdvJ,EAAK4H,UAAUK,EAAMuB,WAAWzD,GAAIkC,EAAO,GACxCjI,EAAK6H,UAAUI,EAAMuB,WAAWzD,GAAIkC,EAAO,EAEzD,CAAC,MAAOnN,GACL,MAAM,IAAI4D,EAAY,UAAW5D,EAAO,CAAC8O,EAAU3B,GAAQ2B,EAAU3B,EAAMuB,WAAWtN,IAAKqN,EAAc,OAAK,SACtH,CAwBI,SAASK,EAAU1Q,GAGf,MAAmB,mBAARA,EACAA,EAAImJ,KACW,iBAARnJ,IACL6G,GAAWiD,OAAOG,eAAiBH,OAAOG,eAAejK,GAAOA,EAAIyK,WACzD7E,YACAuD,KACV,cACtB,MAhCuC,IAAxB4F,EAAM4B,eACb7G,OAAO0G,eAAezB,EAAO,gBAC7B,CACI1M,MAOR,SAAwBjC,GACpB,GAAsB,mBAAXA,GACP,IAAK,IAAI4C,EAAI,EAAGA,EAAIf,KAAKqO,WAAW1N,OAAQI,IACxC,GAAIf,KAAKqO,WAAWtN,KAAO5C,EAAQ,OAAO,MAE3C,IAAsB,iBAAXA,EAIX,MAAM,IAAIoF,EAAY,UAAW,KAAM,QAAQpF,IAHlD,IAAK,IAAIqG,EAAI,EAAGA,EAAIxE,KAAKqO,WAAW1N,OAAQ6D,IACxC,GAAIxE,KAAKqO,WAAW7J,GAAG0C,OAAS/I,EAAQ,OAAO,CAEO,CAC9D,OAAO,CACf,EAjBY8P,cAAc,EACdC,YAAY,GA4BxB,EC3OG,IAACS,EAAgB,WAKhB,SAASA,IAEL,IAAItO,EAAW,CAAE,EACbuO,GAAQ,EAQZ/G,OAAO0G,eAAevO,KAAM,WAC5B,CACIoB,IAAK,WAAa,OAAOf,CAAW,EACpCwO,IAAK,SAASC,GACV,GA4CW,iBADJ/Q,EA3CQ+Q,IA4CgB,OAAR/Q,EA5CD,MAAM,IAAIwF,EAAY,UAAW,KAAM,CAACvD,KAAK2D,YAAYuD,KAAM4H,IA2CjG,IAAmB/Q,EA1CPsC,EAAWyO,CACd,EACDb,cAAc,EACdC,YAAY,IAShBrG,OAAO0G,eAAevO,KAAM,QACxB,CACIoB,IAAK,WACD,OAAOyG,OAAOmC,KAAKhK,KAAKK,SAC3B,EACD4N,cAAc,EACdC,YAAY,IAQpBrG,OAAO0G,eAAevO,KAAM,QAC5B,CACIoB,IAAK,WAAa,OAAOwN,CAAQ,EACjCC,IAAK,SAASC,GACV,GAAoB,kBAATA,EAAoB,MAAM,IAAIvL,EAAY,UAAW,KAAM,CAACvD,KAAK2D,YAAYuD,KAAM4H,IAC9FF,EAAQE,CACxB,GAEA,CAII,SAASC,EAAUhR,GACf,MAAmB,iBAARA,GAAoBA,EAAI4C,OAAS,CAEpD,CA0GI,OAhHAgO,EAAaK,IAAM,SAkBnBL,EAAa5G,UAAUkH,GAAK,SAASC,EAASC,GAC1C,IAAKJ,EAAUG,GAAU,MAAM,IAAI3L,EAAY,UAAW,KAAM,QAAQ2L,IACxE,GAA0B,mBAAfC,EAA2B,MAAM,IAAI5L,EAAY,UAAW,KAAM,QAAQ4L,IAE/C,iBAA3BnP,KAAKK,SAAS6O,KACrBlP,KAAKK,SAAS6O,GAAW,SAEzBlP,KAAKK,SAAS6O,GAAS7H,QAAQ8H,IAC/BnP,KAAKK,SAAS6O,GAAStO,KAAKuO,EAInC,EAEDR,EAAa5G,UAAUqH,YAAcT,EAAa5G,UAAUkH,GAQ5DN,EAAa5G,UAAUsH,KAAO,SAASH,EAASC,GAC5C,IAAIG,EAAOtP,KAEX,IAAK+O,EAAUG,GAAU,MAAM,IAAI3L,EAAY,UAAW,KAAM,QAAQ2L,IACxE,GAA0B,mBAAfC,EAA2B,MAAM,IAAI5L,EAAY,UAAW,KAAM,QAAQ4L,IAMrFnP,KAAKiP,GAAGC,GAJR,SAASK,IACLD,EAAKE,IAAIN,EAASK,GAClBJ,EAAWM,MAAMH,EAAMd,UACnC,GAEK,EAQDG,EAAa5G,UAAUyH,IAAM,SAASN,EAASC,GAC3C,IAAKJ,EAAUG,GAAU,MAAM,IAAI3L,EAAY,UAAW,KAAM,QAAQ2L,IACxE,GAA0B,mBAAfC,EAA2B,MAAM,IAAI5L,EAAY,UAAW,KAAM,QAAQ4L,IAErF,GAAsC,iBAA3BnP,KAAKK,SAAS6O,GAAuB,CAC5C,IAAIQ,EAAM1P,KAAKK,SAAS6O,GAAS7H,QAAQ8H,GACrCO,GAAM,GACN1P,KAAKK,SAAS6O,GAASS,OAAOD,EAAK,EAEnD,CACK,EAEDf,EAAa5G,UAAU6H,eAAiBjB,EAAa5G,UAAUyH,IAM/Db,EAAa5G,UAAU8H,mBAAqB,SAASX,GAC5CA,IACDlP,KAAKK,SAAW,IAEkB,iBAA3BL,KAAKK,SAAS6O,WACdlP,KAAKK,SAAS6O,EAE5B,EAQDP,EAAa5G,UAAU+H,KAAO,SAASZ,GACnC,IAAIa,EAAO,GAAGjG,MAAMvB,KAAKiG,UAAW,GAChCwB,EAAY,GAIhB,IAAKjB,EAAUG,GAAU,MAAM,IAAI3L,EAAY,UAAW,KAAM,QAAQ2L,IAExE,GAAsC,iBAA3BlP,KAAKK,SAAS6O,GAAuB,CAC5Cc,EAAYhQ,KAAKK,SAAS6O,GAASpF,QACnC,IAAK,IAAI/I,EAAI,EAAGA,EAAIiP,EAAUrP,OAAQI,IAElC,IAAiB,IADNiP,EAAUjP,GAAG0O,MAAMzP,KAAM+P,GACZ,OAAO,CAE/C,CAGQ,OAFI/P,KAAK4O,OAAO1N,QAAQ+O,IAAI,IAAIf,EAAQ,mBAEjCc,EAAUrP,OAAS,QAAWmB,CACxC,EAEM6M,CAEX,IC3KIuB,EAAY,WAOZ,SAASA,IACb,CAmCI,OAjCAA,EAAQlB,IAAM,YACdkB,EAAQC,MAAQ,YAQhBD,EAAQnI,UAAUE,SAAY,WAC1B,MAAM,IAAI1E,EAAY,UAAW,KAAM,CAAC,WAC3C,EAQD2M,EAAQnI,UAAUqI,WAAc,WAC5B,MAAM,IAAI7M,EAAY,UAAW,KAAM,CAAC,WAC3C,EAQD2M,EAAQnI,UAAUsI,MAAS,WACvB,MAAM,IAAI9M,EAAY,UAAW,KAAM,CAAC,WAC3C,EAEM2M,CAEX,IC7CII,EAAa,WAMb,SAASA,IAOLtQ,KAAKuQ,MAAQhQ,OAObP,KAAKmJ,MAAQ,CAAC,CAAC,QAASnC,SAAU,CAAC+B,MAAO,UAClD,CAuBI,OArBAuH,EAAStB,IAAM,YACfsB,EAASH,MAAQ,YAOjBG,EAASvI,UAAUyI,UAAY,WAC3B,MAAM,IAAIjN,EAAY,UAAW,KAAM,CAAC,YAC3C,EAOD+M,EAASvI,UAAU0I,UAAa,WAC5B,MAAM,IAAIlN,EAAY,UAAW,KAAM,CAAC,YAC3C,EAEM+M,CAEX,IC9CII,EAAgB,WAMhB,SAASA,IACb,CA2CI,OAzCAA,EAAYP,MAAQ,YACpBO,EAAY1B,IAAM,YAOlB0B,EAAY3I,UAAU4I,IAAO,WACzB,MAAM,IAAIpN,EAAY,UAAW,KAAM,CAAC,eAC3C,EAODmN,EAAY3I,UAAU6I,OAAU,WAC5B,MAAM,IAAIrN,EAAY,UAAW,KAAM,CAAC,eAC3C,EAQDmN,EAAY3I,UAAU8I,SAAY,WAC9B,MAAM,IAAItN,EAAY,UAAW,KAAM,CAAC,eAC3C,EAQDmN,EAAY3I,UAAUV,QAAW,WAC7B,MAAM,IAAI9D,EAAY,UAAW,KAAM,CAAC,eAC3C,EAEMmN,CAEX,IClDII,EAAwB,SAAUC,GAQlC,SAASD,IACLC,EAAOxI,KAAKvI,KACpB,CAgBI,OAfA6M,EAAKe,SAASkD,EAAqBC,GAEnCD,EAAoBX,MAAQ,YAC5BW,EAAoB9B,IAAM,YAQ1B8B,EAAoB/I,UAAUiJ,WAAc,WACxC,MAAM,IAAIzN,EAAY,UAAW,KAAM,CAAC,uBAC3C,EAEMuN,CAEX,CA5BuB,CA4BrBJ,GC9BEO,EAAa,WAMb,SAASA,IAMLjR,KAAKkR,MAAQ3Q,MACrB,CAeI,OAbA0Q,EAASjC,IAAM,YACfiC,EAASd,MAAQ,YAQjBc,EAASlJ,UAAUoJ,MAAS,WACxB,MAAM,IAAI5N,EAAY,UAAW,KAAM,CAAC,YAC3C,EAEM0N,CAEX,IC9BIG,EAAU,WAOV,SAASA,IAOLpR,KAAKqR,MAAQrT,MAObgC,KAAKsR,MAAQjI,MACrB,CAKI,OAHA+H,EAAMpC,IAAM,YACZoC,EAAMjB,MAAQ,YAEPiB,CAEX,IC7BIG,EAAiB,WAOjB,SAASA,IACb,CA0CI,OAxCAA,EAAavC,IAAM,YACnBuC,EAAapB,MAAQ,YAOrBoB,EAAaxJ,UAAU4I,IAAM,WACzB,MAAM,IAAIpN,EAAY,UAAW,KAAM,CAAC,gBAC3C,EAODgO,EAAaxJ,UAAUyJ,IAAO,WAC1B,MAAM,IAAIjO,EAAY,UAAW,KAAM,CAAC,gBAC3C,EAQDgO,EAAaxJ,UAAU0J,IAAO,WAC1B,MAAM,IAAIlO,EAAY,UAAW,KAAM,CAAC,gBAC3C,EAODgO,EAAaxJ,UAAU2J,KAAQ,WAC3B,MAAM,IAAInO,EAAY,UAAW,KAAM,CAAC,gBAC3C,EAEMgO,CAEX,ICpDII,EAAe,WAMf,SAASA,IACb,CAwBI,OAtBAA,EAAW3C,IAAM,YACjB2C,EAAWxB,MAAQ,YAQnBwB,EAAW5J,UAAU6J,OAAU,WAC3B,MAAM,IAAIrO,EAAY,UAAW,KAAM,CAAC,cAC3C,EAODoO,EAAW5J,UAAU8J,KAAQ,WACzB,MAAM,IAAItO,EAAY,UAAW,KAAM,CAAC,cAC3C,EAEMoO,CAEX,IC/BIG,EAAqB,SAAUf,GAM/B,SAASe,IACLf,EAAOxI,KAAKvI,KACpB,CAeI,OAdA6M,EAAKe,SAASkE,EAAkBf,GAEhCe,EAAiB3B,MAAQ,YACzB2B,EAAiB9C,IAAM,YAOvB8C,EAAiB/J,UAAUgK,SAAY,WACnC,MAAM,IAAIxO,EAAY,UAAW,KAAM,CAAC,oBAC3C,EAEMuO,CAEX,CAzBoB,CAyBlBpB,GCtBEsB,EAAoB,WAMpB,SAASA,IAEL,IAAI3R,EAAWL,KAAKiS,iBAChBC,EAAc,GACdC,GAAe,EAUnBtK,OAAO0G,eAAevO,KAAM,WAC5B,CACIoB,IAAK,WAAa,OAAOf,CAAW,EACpCwO,IAAK,SAASC,GAAQzO,EAAWyO,CAAO,EACxCb,cAAc,EACdC,YAAY,IAUhBrG,OAAO0G,eAAevO,KAAM,aAC5B,CACIoB,IAAK,WACD,OAAO8Q,CACV,EACDrD,IAAK,SAAStJ,GACV,IAAI6M,EAAUpU,MAAMC,QAAQsH,GAAOA,EAAMvH,MAAM+J,UAAU+B,MAAMvB,KAAKiG,UAAW,GAC/E0D,EAAaE,CAChB,EACDnE,cAAc,EACdC,YAAY,IAShBrG,OAAO0G,eAAevO,KAAM,QAC5B,CACIoB,IAAK,WACD,IAAIiR,EAAUrS,KAAKK,SACf8G,EAAM,GACNmL,EAAQ,GAEZ,OAGA,SAASC,EAAYpU,GACjB,IAAK,IAAIuF,KAAQvF,EACb,GAAa,UAATuF,EAAJ,CACA,IAAI8O,EAAKrU,EAAOuF,GAChB4O,EAAM1R,KAAK8C,GACN8O,EAAU,MAERD,EAAYC,GADfrL,EAAIvG,KAAK0R,EAAMlJ,KAAK,MAExBkJ,EAAMG,KANgB,CAQ9C,CAdgBF,CAAYF,GACLlL,CAcV,EACD8G,cAAc,EACdC,YAAY,IAShBrG,OAAO0G,eAAevO,KAAM,QAC5B,CACIoB,IAAK,WACD,OAAOpB,KAAKqR,MAAM1Q,MACrB,EACDsN,cAAc,EACdC,YAAY,IAShBrG,OAAO0G,eAAevO,KAAM,eAC5B,CACIoB,IAAK,WAAa,OAAO+Q,CAAe,EACxCtD,IAAK,SAAStJ,GACV,GAAmB,kBAARA,EAAmB,MAAM,IAAIhC,EAAY,UAAW,KAAM,QAAQgC,IAC7E4M,EAAe5M,CAClB,EACD0I,cAAc,EACdC,YAAY,IAQhBlO,KAAK0S,UAAY,CAAC,YAAa,KAAM,KAAM,SAE3C7F,EAAKsB,WAAW6D,EAAkBhS,KAC1C,CAKI,SAAS+O,EAAUhR,GACf,MAAmB,iBAARA,GAAoBA,EAAI4C,OAAS,CAEpD,CAOI,SAASgS,EAAWC,GAEhB,MADY,6BACC7L,KAAK6L,EAC1B,CAEI,SAASC,EAAUL,GACf,IAAIM,EAAW,GACf,GAAW,KAAPN,EAAW,OAAOM,EACtB,GAAkB,iBAAPN,EAAiB,CACxB,IAbQ,iCACCzL,KAYYyL,GAAK,MAAM,IAAIjP,EAAY,UAAW,KAAM,CAACiP,IAClEM,EAAWN,EAAGzP,MAAM,IACvB,KAAM,KAAI/E,MAAMC,QAAQuU,GAElB,MAAM,IAAIjP,EAAY,UAAW,KAAM,QAAQiP,IADlDM,EAAWN,CAC2C,CAE1D,IAAK,IAAIzR,EAAI,EAAGA,EAAI+R,EAASnS,OAAQI,IAAK,CACtC,IAAI6R,EAAOE,EAAS/R,GACpB,IAAKgO,EAAU6D,GAAQ,MAAM,IAAIrP,EAAY,UAAW,KAAM,CAACxC,SAAU6R,IACzE,IAAKD,EAAWC,GAAQ,MAAM,IAAIrP,EAAY,UAAW,KAAM,CAACxC,EAAG6R,GAC/E,CACQ,OAAOE,CACf,CA6UI,OAhXAd,EAAiBe,OAAS,CAAC3B,EAAOG,GAClCS,EAAiBhD,IAAM,OA0CvBgD,EAAiBjK,UAAUkK,eAAiB,WACxC,MAAO,CAAE9I,MAAO,KACnB,EASD6I,EAAiBjK,UAAUiL,eAAiB,SAAShG,GACjD,IAAIiG,EACA9L,EACA9I,EACA6U,EACAnV,EAAM,CAAE,EAKZ,GAAwB,iBAHDkV,EAAnBlE,EAAU/B,GAAoBA,EAClBhN,KAAKmT,QAAQnG,IAS7B,OAJA3O,GADA8I,EAAM8L,EAASlQ,MAAM,MACX0P,MACVS,EAAS/L,EAAIiC,KAAK,KAClBrL,EAAQ,GAAImV,EACZnV,EAAS,IAAIM,EACNN,CACV,EAKDiU,EAAiBjK,UAAUqL,KAAO,WAC9BpT,KAAKK,SAAWL,KAAKiS,gBACxB,EAODD,EAAiBjK,UAAUsL,aAAe,SAASC,GAC/C,IACIR,EADAS,EAASvT,KAAKK,SAGlB,IACIyS,EAAWD,EAAUS,GAEjBtT,KAAK0S,UAAUrL,QAAQyL,EAAS,KAAO,IAAGA,EAAWA,EAAShJ,MAAM,IAExE,IAAK,IAAI/I,EAAI,EAAGA,EAAI+R,EAASnS,OAAQI,GAAG,OAED,IAAxBwS,EAAOT,EAAS/R,MACvBwS,EAAOT,EAAS/R,IAAMf,KAAKiS,kBAE/BsB,EAASA,EAAOT,EAAS/R,GAGhC,CAAC,MAAOpB,GACL,MAAM,IAAI4D,EAAY,UAAW5D,EAAO,GACpD,CACK,EAODqS,EAAiBjK,UAAUyL,aAAe,SAASF,GAC/C,IACIR,EADAS,EAASvT,KAAKK,SAGlB,IACIyS,EAAWD,EAAUS,GAErB,IAAK,IAAIvS,EAAI,EAAGA,EAAI+R,EAASnS,OAAQI,GAAG,EAAG,CACvC,IAAI6R,EAAQE,EAAS/R,GACrB,IAAIwS,EAAOX,IAAqC,OAA3BW,EAAOX,GAAc,MAGnC,OAFC7R,IAAM+R,EAASnS,OAAS,SAAU4S,EAAOX,GACxCW,EAASA,EAAOX,EAEzC,CACS,CAAC,MAAOjT,GACL,MAAM,IAAI4D,EAAY,UAAW5D,EAAO,GACpD,CACK,EAQDqS,EAAiBjK,UAAUhI,KAAO,SAASuT,GACvC,IACIR,EADAS,EAASvT,KAAKK,SAGlB,IAAKiT,EAAM,OAAOC,EAElB,IACIT,EAAWD,EAAUS,GAErB,IAAK,IAAIvS,EAAI,EAAGA,EAAI+R,EAASnS,OAAQI,GAAG,EAAG,CACvC,IAAI6R,EAAQE,EAAS/R,GACrB,IAAIwS,EAAOX,IAAqC,OAA3BW,EAAOX,GAAc,MAGnC,OAFH,GAAI7R,IAAM+R,EAASnS,OAAS,EAAG,OAAO4S,EAAOX,GAC7CW,EAASA,EAAOX,EAEpC,CAES,CAAC,MAAOjT,GACL,MAAM,IAAI4D,EAAY,UAAW5D,EAAO,GACpD,CACK,EAQDqS,EAAiBjK,UAAU4I,IAAM,SAAS8C,EAAYzG,GAClD,IACI8F,EACAY,EACArV,EACAmU,EAJAe,EAASvT,KAAKK,SAMlB,IAOI,GALAhC,GADAqV,EAAQ1T,KAAKgT,eAAeS,IACX,IAEjBX,EAAWD,EADXL,EAAKkB,EAAU,IAGX1T,KAAKkS,WAAWvR,OAAS,GAAGkE,EAAK6H,UAAU,CAAC1M,KAAKkS,YAAalF,IAC7D2F,EAAWtU,GAAM,MAAM,IAAIkF,EAAY,UAAW,KAAM,CAAClF,IAC9D,IAAK2B,KAAKmS,cAAgBnS,KAAKmT,QAAQnG,GACnC,MAAM,IAAIzJ,EAAY,UAAW,KAAM,IAG3C,GAAwB,IAApBuP,EAASnS,OAET,YADA4S,EAAOlV,GAAO2O,GAEXhN,KAAKqT,aAAab,GAEzB,IAAK,IAAIzR,EAAI,EAAGA,EAAI+R,EAASnS,OAAQI,GAAG,EAAG,CACvC,IAAI6R,EAAQE,EAAS/R,GACjBA,IAAM+R,EAASnS,OAAS,EACxB4S,EAAOX,GAAOvU,GAAO2O,EAClBuG,EAASA,EAAOX,EACvC,CAES,CAAC,MAAOjT,GACL,MAAM,IAAI4D,EAAY,UAAW5D,EAAO,GACpD,CACK,EAQDqS,EAAiBjK,UAAUyJ,IAAM,SAASiC,GACtC,IACIX,EADAS,EAASvT,KAAKK,SAGlB,IACIyS,EAAWD,EAAUY,GAErB,IAAK,IAAI1S,EAAI,EAAGA,EAAI+R,EAASnS,OAAQI,GAAG,EAAG,CACvC,IAAI6R,EAAQE,EAAS/R,GACrB,IAAIwS,EAAOX,GAKJ,OAAO,EAJV,GAAI7R,IAAM+R,EAASnS,OAAS,EAExB,cADO4S,EAAOX,IACP,EACJW,EAASA,EAAOX,EAE3C,CAES,CAAC,MAAOjT,GACL,MAAM,IAAI4D,EAAY,UAAW5D,EAAO,GACpD,CAEK,EAQDqS,EAAiBjK,UAAU0J,IAAM,SAASzE,GACtC,SAAI+B,EAAU/B,KAAWhN,KAAK0R,KAAK1E,KACM,iBAAzBhN,KAAKmT,QAAQnG,EAEhC,EAQDgF,EAAiBjK,UAAU2J,KAAO,SAAS+B,GACvC,IACIX,EADAS,EAASvT,KAAKK,SAGlB,IACIyS,EAAWD,EAAUY,GACrB,IAAK,IAAI1S,EAAI,EAAGA,EAAI+R,EAASnS,OAAQI,GAAG,EAAG,CACvC,IAAI6R,EAAQE,EAAS/R,GACrB,IAAIwS,EAAOX,GAGJ,OAFH,GAAI7R,IAAM+R,EAASnS,OAAS,EAAG,OAAO4S,EAAOX,GACxCW,EAASA,EAAOX,EAEzC,CAES,CAAC,MAAOjT,GACL,MACZ,CACK,EAQDqS,EAAiBjK,UAAUoL,QAAU,SAASnG,GAC1C,IAAI2G,EAAY3T,KAAKK,SACjBiS,EAAQ,GAEZ,IAAKtF,EAAQ,MAAM,IAAIzJ,EAAY,UAAW,KAAM,QAAQyJ,IAE5D,OAKA,SAAS4G,EAAazV,GAClB,IAAI,IAAIuF,KAAQvF,EAAQ,CACpB,IAAIJ,EAAMI,EAAOuF,GACjB,GAAY,OAAR3F,EACJ,GAAIA,GAAwB,OAAjBA,EAAW,OAElB,GADAuU,EAAM1R,KAAK8C,GACRkQ,EAAa7V,GAAM,OAAO,OAE7B,GAAIA,IAAQiP,EAER,OADAsF,EAAM1R,KAAK8C,IACJ,CAG/B,CAEY,OADA4O,EAAMG,OACC,CACnB,CArBYmB,CAAaD,GACNrB,EAAMlJ,KAAK,UACf,CAoBV,EAUD4I,EAAiBjK,UAAU6J,OAAS,SAASiC,EAAaC,GACtD,IACI/V,EADAoJ,EAAM,GAGN8B,EAAO,CAAC0B,KAAMxD,GAElB,IACI,IAAK,IAAIpG,EAAI,EAAGA,EAAIf,KAAKqR,MAAM1Q,OAAQI,IAAK,CACxC,IAAIkS,EAAcjT,KAAKqR,MAAMtQ,GACzBgT,EAAc/T,KAAK0R,KAAKuB,GACxBe,EAAchU,KAAKgT,eAAeC,GACtClV,EAAM,CACFyU,GAAIwB,EAAKxB,GACTnU,IAAK2V,EAAK3V,IACV4V,KAAMhB,EACNvH,KAAMqI,GAEV5M,EAAIvG,KAAK7C,EACzB,CAIY,MAF2B,mBAAhB8V,EAAkCA,EAAY5K,EAAM,CAACiL,MAAOJ,IAC5DK,KAAKC,UAAUnL,EAAM,KAAM6K,EAGzC,CAAC,MAAOnU,GACL,MAAM,IAAI4D,EAAY,UAAW5D,EAAO,CAACA,GACrD,CAEK,EAODqS,EAAiBjK,UAAU8J,KAAO,SAASwC,EAAOC,GAC9C,IAAInN,EAAM,GAEV,IAAK4H,EAAUsF,GAAQ,MAAM,IAAI9Q,EAAY,UAAW,KAAM,QAAQ8Q,IAEtE,IACuClN,EAAZ,mBAAZmN,EAA8BA,EAAQD,GACtCF,KAAKI,MAAMF,EAAO,MAE7BrU,KAAKoT,OACL,IAAK,IAAIrS,EAAI,EAAGA,EAAIoG,EAAU,KAAExG,OAAQI,IAAK,CACzC,IAAIyT,EAAIrN,EAAU,KAAEpG,GAChBgT,EAAMS,EAAQ,KAClBxU,KAAK2Q,IAAI6D,EAAQ,KAAGT,EACpC,CAES,CAAC,MAAOpU,GACL,MAAM,IAAI4D,EAAY,UAAW5D,EAAO,CAACA,EAAMwE,SAC3D,CACK,EAEM6N,CACX,IC7eIyC,EAAgB,WAOhB,SAASA,IACb,CAEIA,EAAazF,IAAM,OAGnB,IAAIqC,EAAQ,GACRsC,EAAY,IAAI3B,EAyDpB,SAASlU,EAAUC,GACf,MAAmB,iBAARA,GAA4B,OAARA,CAEvC,CAEI,SAASgR,EAAUhR,GACf,MAAmB,iBAARA,GAAoBA,EAAI4C,OAAS,CAEpD,CAEI,SAAS+T,EAAaC,EAAOxN,GAGzB,GAFAA,EAAMA,GAAO,GACTsN,EAAaG,aAAaD,IAAQxN,EAAIvG,KAAK+T,GAC3C3W,MAAMC,QAAQ0W,GACd,IAAI,IAAI5T,EAAI,EAAGA,EAAI4T,EAAMhU,OAAQI,IACzBjD,EAAU6W,EAAM5T,KAAK2T,EAAaC,EAAM5T,GAAIoG,QAEjD,GAAIrJ,EAAU6W,GACjB,IAAI,IAAIjR,KAAQiR,EACR7W,EAAU6W,EAAMjR,KAAQgR,EAAaC,EAAMjR,GAAOyD,GAG9D,OAAOA,CACf,CAkgBI,OA1kBAU,OAAO0G,eAAekG,EAAc,QACpC,CACIrT,IAAK,WAED,IADA,IAAI+F,EAAM,GACDpG,EAAI,EAAGA,EAAIsQ,EAAM1Q,OAAQI,IAAKoG,EAAIvG,KAAKyQ,EAAMtQ,IACtD,OAAOoG,CACV,EACD8G,cAAc,EACdC,YAAY,IAShBrG,OAAO0G,eAAekG,EAAc,QACpC,CACIrT,IAAK,WAAa,OAAOiQ,EAAM1Q,MAAS,EACxCsN,cAAc,EACdC,YAAY,IAShBrG,OAAO0G,eAAekG,EAAc,YACpC,CACIrT,IAAK,WAAa,OAAOuS,CAAY,EACrC1F,cAAc,EACdC,YAAY,IA2ChBuG,EAAarB,KAAO,WAChB/B,EAAM1Q,OAAS,EACfX,KAAK2T,UAAUP,MAClB,EASDqB,EAAaI,SAAW,SAASC,GAC7B,IAAIC,EACA1W,EACAiB,EAGJ,IAAKU,KAAKgV,aAAaF,GAAS,MAAM,IAAIvR,EAAY,UAAW,KAAM,CAACuR,EAAO3L,MAAO2L,EAAOvE,QAC7F,GAAIvQ,KAAKyR,IAAIqD,GAAS,MAAM,IAAIvR,EAAY,UAAW,KAAM,CAACuR,EAAOvE,QAErEwE,EAAcD,EAAY,KAAK,GAE/BzW,GADAiB,EAAcwV,EAAc,OACT5N,KAGnBmK,EAAMzQ,KAAKkU,GACX9U,KAAKiV,cAAc3V,EAAMyV,EAAK1W,EACjC,EAQDoW,EAAaS,QAAU,SAASJ,GAC5B,IAAIK,EAEJ,GAAsB,iBAAXL,GAAyC,iBAAXA,EACrC,MAAM,IAAIvR,EAAY,UAAW,KAAM,QAAQuR,IAInD,IAAK/F,EADLoG,EAAyB,iBAAXL,EAAsBA,EAASA,EAAc,OACrC,OAAO,EAE7B,IAAI,IAAI/T,EAAI,EAAGA,EAAIsQ,EAAM1Q,OAAQI,IAC7B,GAAIsQ,EAAMtQ,GAAU,QAAMoU,EAEtB,OADA9D,EAAM1B,OAAO5O,EAAG,IACT,EAGf,OAAO,CACV,EAQD0T,EAAahD,IAAM,SAAS2D,GACxB,IAAID,EAAOrX,EAAUsX,GAAWA,EAAe,MAAIA,EAEnD,IAAKrG,EAAUoG,GAAO,OAAO,EAE7B,IAAI,IAAIpU,EAAI,EAAGA,EAAIsQ,EAAM1Q,OAAQI,IAC7B,GAAIsQ,EAAMtQ,GAAU,QAAMoU,EAAM,OAAO,EAE3C,OAAO,CACV,EAQDV,EAAa/C,KAAO,SAAS0D,GACzB,IAAID,EAAOrX,EAAUsX,GAAWA,EAAe,MAAIA,EAEnD,GAAKrG,EAAUoG,GAEf,IAAI,IAAIpU,EAAI,EAAGA,EAAIsQ,EAAM1Q,OAAQI,IAC7B,GAAIsQ,EAAMtQ,GAAU,QAAMoU,EAAM,OAAO9D,EAAMtQ,EAEpD,EAQD0T,EAAaO,aAAe,SAAStH,GACjC,QAAK5P,EAAU4P,OACXqB,EAAUrB,EAAgB,QAAmC,mBAAtBA,EAAgB,MAE9D,EASD+G,EAAaY,iBAAmB,SAASD,EAASE,GAC9C,IAEIhW,EACAkT,EACAS,EACAsC,EACAxP,EANAyP,EAASF,GAAsBF,EAC/BrF,EAAO,CAAC,MAOZ,IAAKjS,EAAUsX,GAAU,MAAM,IAAI7R,EAAY,UAAW,KAAM,QAAQ6R,IACxE,IAAKrG,EAAUqG,EAAe,OAAI,MAAM,IAAI7R,EAAY,UAAW,KAAM,QAAQ6R,EAAe,QAChG,IAAKtX,EAAU0X,GAAS,MAAM,IAAIjS,EAAY,UAAW,KAAM,QAAQiS,IAOvE,GALAlW,EAAc8V,EAAe,MAE7BnC,EAAsB,MADtBT,EAAc4C,EAAa,KAAK,IACL,CAAC5C,EAAIlT,GAAM8J,KAAK,KAAO9J,EAG3B,mBAFvBiW,EAAcvV,KAAKyV,SAASxC,IAEO,MAAM,IAAI1P,EAAY,UAAW,KAAM,CAAC0P,SAAiBsC,IAG5FxP,EAAS8B,OAAOE,UAAUzJ,eAAeiK,KAAKgN,EAAS,WAAaA,EAAiB,QAAI,GACzF,IAAK,IAAIxU,EAAI,EAAGA,EAAIgF,EAAOpF,OAAQI,IAAK,CACpC,IAEIhD,EAFA2X,EAAU3P,EAAOhF,GACjB2C,EAAO0R,EAAQM,GAEnB3X,EAAMD,EAAU4F,IAASA,EAAW,KAAI1D,KAAK2V,cAAcjS,EAAW,KAAG8R,GAAU9R,EAC/E0R,EAAQM,IAAU3F,EAAKnP,KAAK7C,EAC5C,CACQ,OAAO,IAAKiJ,SAASe,UAAU6N,KAAKnG,MAAM8F,EAASxF,GACtD,EAYD0E,EAAaoB,kBAAoB,SAASf,GACtC,IAAKhX,EAAUgX,GAAS,MAAM,IAAIvR,EAAY,UAAW,KAAM,QAAQuR,IACvE,IAAK/F,EAAU+F,EAAc,OAAI,MAAM,IAAIvR,EAAY,UAAW,KAAM,QAAQuR,EAAc,QAC9F,MAAO,CAAEgB,KAAMhB,EAAc,MAChC,EAYDL,EAAasB,oBAAsB,SAASrI,GACxC,IACI8E,EAAInU,EAER,GAAwB,mBAAbqP,EAAyB,MAAM,IAAInK,EAAY,UAAW,KAAM,QAAQmK,IAQnF,OANK1N,KAAKgW,UAAUtI,KAChB8E,EAAM9E,EAAc,KAAK,GACzBrP,EAAMqP,EAASxG,KACflH,KAAKiV,cAAcvH,EAAU8E,EAAInU,IAG9B,CAAE4X,IADEjW,KAAKgW,UAAUtI,GAE7B,EAeD+G,EAAayB,cAAgB,SAASd,EAASN,GAC3C,IAAKhX,EAAUsX,GAAU,MAAM,IAAI7R,EAAY,UAAW,KAAM,QAAQ6R,IACxE,IAAKtX,EAAUgX,GAAS,MAAM,IAAIvR,EAAY,UAAW,KAAM,QAAQuR,IACvE,IAAK/F,EAAU+F,EAAc,OAAI,MAAM,IAAIvR,EAAY,UAAW,KAAK,QAAQuR,EAAc,QAG7F,OADAM,EAAc,KAAIN,EAAc,MACzBM,CACV,EAYDX,EAAa0B,YAAc,SAASf,GAChC,IACIgB,EADAC,EAAQrW,KAGZ,IAAKlC,EAAUsX,GAAU,MAAM,IAAI7R,EAAY,UAAW,KAAM,QAAQ6R,IAGxE,OADAgB,EAAS1B,EAAaU,MAyCtB,WACI,IAAK,IAAIrU,EAAI,EAAGA,EAAIqV,EAAOzV,OAAQI,IAC/B,IAAK,IAAIyD,EAAI,EAAGA,EAAI4R,EAAOzV,OAAQ6D,IAC/B,GAAI4R,EAAOrV,GAAU,QAAMqV,EAAO5R,GAAU,OAAKzD,IAAMyD,EAAG,OAAO,EAGzE,OAAO,CACnB,CA/Ca8R,IASL,SAASC,EAAgB5B,GACrB,GAAIA,EAAY,OAAM6B,EAAU7B,EAAY,KAAGyB,GAAS,OAAO,EAC/D,GAAIzB,EAAY,OAAM6B,EAAU7B,EAAY,KAAGyB,GAAS,OAAO,EAC/D,GAAIzB,EAAW,MAAM0B,EAAMZ,SAASd,EAAW,KAAI,OAAO,EAE1D,GAAI3W,MAAMC,QAAQ0W,IACd,IAAI,IAAI5T,EAAI,EAAGA,EAAI4T,EAAMhU,OAAQI,IAC7B,GAAIjD,EAAU6W,EAAM5T,MAAQwV,EAAgB5B,EAAM5T,IAAK,OAAO,OAGlE,IAAI,IAAI2C,KAAQiR,EACZ,GAAI7W,EAAU6W,EAAMjR,MAAW6S,EAAgB5B,EAAMjR,IAAQ,OAAO,EAG5E,OAAO,CACnB,CAxBoC6S,CAAgBnB,IAyB5C,SAASqB,EAAiB9B,GACtB,GAAI3W,MAAMC,QAAQ0W,EAAa,QAAM3W,MAAMC,QAAQ0W,EAAY,OACvDA,EAAa,MAAEhU,SAAWgU,EAAY,KAAEhU,OAAQ,OAAO,EAE/D,GAAI3C,MAAMC,QAAQ0W,IACd,IAAI,IAAI5T,EAAI,EAAGA,EAAI4T,EAAMhU,OAAQI,IAC7B,GAAIjD,EAAU6W,EAAM5T,MAAQ0V,EAAiB9B,EAAM5T,IAAK,OAAO,OAGnE,IAAI,IAAI2C,KAAQ0R,EACZ,GAAItX,EAAU6W,EAAMjR,MAAW+S,EAAiB9B,EAAMjR,IAAQ,OAAO,EAG7E,OAAO,CACnB,CAvCiE+S,CAAiBrB,IAI1E,SAASoB,EAAUrB,EAAMhO,GACrB,IAAI,IAAIpG,EAAI,EAAGA,EAAIoG,EAAIxG,OAAQI,IAC3B,GAAIoG,EAAIpG,GAAU,QAAMoU,EAAM,OAAOhO,EAAIpG,EAEzD,CAwCK,EAOD0T,EAAaG,aAAe,SAASlH,GACjC,QAAK5P,EAAU4P,OACXqB,EAAUrB,EAAgB,SAAMqB,EAAUrB,EAAgB,OAEjE,EASD+G,EAAaiC,cAAgB,SAAStB,EAASE,GAC3C,IAAIH,EAAOrX,EAAUsX,GAAWA,EAAe,MAAIA,EAC/CuB,EAAY,GAEhB,IAAK5H,EAAUoG,GAAO,MAAM,IAAI5R,EAAY,UAAW,KAAM,QAAQ4R,IAEjEnX,MAAMC,QAAQqX,GAAWqB,EAAYrB,EACpCqB,EAAU/V,KAAK0U,GAEpB,IAAK,IAAIvU,EAAI,EAAGA,EAAI4V,EAAUhW,OAAQI,IAAK,CACvC,IAAIyU,EAASmB,EAAU5V,GACnBqV,EAAS1B,EAAac,GAC1B,IAAK1X,EAAU0X,GAAS,MAAM,IAAIjS,EAAY,UAAW,KAAM,CAACxC,SAAUoU,IAC1E,IAAK,IAAI3Q,EAAI,EAAGA,EAAI4R,EAAOzV,OAAQ6D,IAC/B,GAAI4R,EAAO5R,GAAG+L,QAAU4E,EAAM,OAAO,CAErD,CACQ,OAAO,CACV,EASDV,EAAamC,SAAW,SAASxB,GAC7B,IAAKtX,EAAUsX,GAAU,MAAM,IAAI7R,EAAY,UAAW,KAAM,QAAQ6R,IACxE,IAAKpV,KAAK4U,aAAaQ,GAAU,MAAM,IAAI7R,EAAY,UAAW,KAAM,CAAC6R,EAAe,MAAGA,EAAe,QAE1G,OAGA,SAASyB,EAAUlC,GACf,GAAI3W,MAAMC,QAAQ0W,IACd,IAAI,IAAI5T,EAAI,EAAGA,EAAI4T,EAAMhU,OAAQI,IAC7B,GAAwB,iBAAb4T,EAAM5T,IAAmB8V,EAAUlC,EAAM5T,IAAK,OAAO,MAEjE,CACH,GAAI4T,EAAY,MAAK5F,EAAU4F,EAAY,MAAI,OAAO,EACtD,GAAIA,EAAW,KAAK5F,EAAU4F,EAAW,KAAI,OAAO,EACpD,IAAI,IAAIjR,KAAQiR,EACZ,GAAI7W,EAAU6W,EAAMjR,KAAUmT,EAAUlC,EAAMjR,IAAQ,OAAO,CAEjF,CACY,OAAO,CACnB,CAhBemT,CAAUzB,EAiBzB,EASIX,EAAakB,cAAgB,SAASP,EAASE,GAC3C,IAAIH,EAAOrX,EAAUsX,GAAWA,EAAe,MAAIA,EAC/CI,EAASF,EAEb,IAAKvG,EAAUoG,GAAO,MAAM,IAAI5R,EAAY,UAAW,KAAM,CAAC4R,IAC9D,IAAKrX,EAAU0X,GAAS,MAAM,IAAIjS,EAAY,UAAW,KAAM,QAAQiS,IAEvE,OAGA,SAASsB,EAAYnC,GACjB,IAAIrT,EACJ,GAAItD,MAAMC,QAAQ0W,IACd,IAAI,IAAI5T,EAAI,EAAGA,EAAI4T,EAAMhU,OAAQI,IAC7B,GAAwB,iBAAb4T,EAAM5T,KACbO,EAASwV,EAAYnC,EAAM5T,KAChB,OAAOO,MAGvB,CACH,GAAIqT,EAAa,OAAKA,EAAa,QAAMQ,EAErC,OADA7T,EAASqT,EAAY,KAAIF,EAAa/C,KAAKiD,EAAY,WAAK7S,EAGhE,IAAI,IAAI4B,KAAQiR,EACZ,GAA2B,iBAAhBA,EAAMjR,KACbpC,EAASwV,EAAYnC,EAAMjR,KAChB,OAAOpC,CAG1C,CACY,OAAOA,CACnB,CAzBewV,CAAYtB,EA0BtB,EAUDf,EAAasC,eAAiB,SAAS3B,GACnC,IACIgB,EACAjF,EAFAkF,EAAQrW,KAIZ,IAAKlC,EAAUsX,GAAU,MAAM,IAAI7R,EAAY,UAAW,KAAM,QAAQ6R,IAKxE,OAHAgB,EAAS1B,EAAaU,GAMtB,SAAS4B,EAAerC,EAAOxN,EAAK8P,GAEhC,GADAA,EAAaA,GAAc,GACvBjZ,MAAMC,QAAQ0W,GACd,IAAI,IAAI5T,EAAI,EAAGA,EAAI4T,EAAMhU,OAAQI,IACL,iBAAb4T,EAAM5T,IAAiBiW,EAAerC,EAAM5T,GAAIoG,QAG/D,IAAI,IAAIzD,KAAQiR,EACZ,GAAI7W,EAAU6W,EAAMjR,IAChB,GAAIiR,EAAMjR,GAAW,IAAG,CACpB,IAAI8O,EAAK6D,EAAMZ,SAASd,EAAMjR,GAAW,KACzC,GAAkB,mBAAP8O,EAAmB,MAAM,IAAIjP,EAAY,UAAW,KAAM,CAAC0T,EAAYvT,IAClFiR,EAAMjR,GAAQ8O,CAC1C,MAA+BwE,EAAerC,EAAMjR,GAAOyD,EAAK8P,EAAaA,EAAY,IAAKvT,EAAOA,EAIrG,CArBQsT,CADA7F,EAAQtE,EAAKY,SAAS2H,GACAgB,GACfjF,CAqBV,EAUDsD,EAAaQ,cAAgB,SAASvH,EAAU4F,EAAM4D,GAClD,IAAIjE,EApdkBlV,EAsdtB,IAAMD,EAAU4P,IAAiC,mBAAbA,EAA0B,MAAM,IAAInK,EAAY,UAAW,KAAM,QAAQmK,IAC7G,GAAI4F,GAAwB,iBAATA,EAAmB,MAAM,IAAI/P,EAAY,UAAW,KAAM,QAAQ+P,IACrF,GAAI4D,IAAUnI,EAAUmI,GAAQ,MAAM,IAAI3T,EAAY,UAAW,KAAM,QAAQ2T,KAEpEjE,EAAPiE,EAAkB5D,EAAK3S,OAAS,EAAI2S,EAAM,IAAK4D,EAAQA,EAC3C5D,EA1dG,mBADGvV,EA6dD2P,IA3dd3P,IAAQsL,QAAUtL,IAAQwC,QAC1BxC,IAAQuL,SAAWvL,IAAQiJ,UAC3BjJ,IAAQ8J,QAAU9J,IAAQC,OAC1BD,IAAQqG,QAAUrG,IAAQ+G,MAC1B/G,IAAQwL,QAAUxL,IAAQyL,UAwdG,mBAAzBxK,WAAWiU,KAEjBjT,KAAK2T,UAAUjC,KAAKuB,IAAWjT,KAAK2T,UAAUhD,IAAIsC,EAAUvF,IACpE,EAQD+G,EAAa0C,aAAe,SAAS1D,GACjC,IAAK1E,EAAU0E,GAAa,MAAM,IAAIlQ,EAAY,UAAW,KAAM,QAAQkQ,IAE3E,MAAsC,mBAA3BzU,WAAWyU,IACfzT,KAAK2T,UAAUnC,IAAIiC,EAC7B,EAQDgB,EAAauB,UAAY,SAAStI,GAC9B,IAAIuF,EAEJ,GAAwB,mBAAbvF,EAAyB,MAAM,IAAInK,EAAY,UAAW,KAAM,QAAQmK,IAGnF,OADAuF,EAAWvF,EAASxG,KACgB,mBAAzBlI,WAAWiU,GAAiCA,EAChDjT,KAAK2T,UAAUR,QAAQzF,EACjC,EAQD+G,EAAagB,SAAW,SAAShC,GAC7B,IAAK1E,EAAU0E,GAAa,MAAM,IAAIlQ,EAAY,UAAW,KAAM,QAAQkQ,IAE3E,MAAsC,mBAA3BzU,WAAWyU,GAAmCzU,WAAWyU,GAC7DzT,KAAK2T,UAAUjC,KAAK+B,EAC9B,EASDgB,EAAa2C,eAAiB,SAAS/C,EAAOC,GAC1C,IACIK,EACA0C,EAFAtZ,EAAMsW,EAIV,GAAqB,iBAAVA,EAAoB,MAAM,IAAI9Q,EAAY,UAAW,KAAM,QAAQ+T,MAG9E,GADAvZ,EAA0B,mBAAZuW,EAA0BA,EAAQvW,GAAOoW,KAAKI,MAAMxW,EAAK,MACnEiC,KAAKyR,IAAI1T,GAAM,OAAOiC,KAAK0R,KAAK3T,EAAW,OAC/C,IAAKiC,KAAK4U,aAAa7W,GAAM,MAAM,IAAIwF,EAAY,UAAW,KAAM,CAACxF,EAAW,MAAGA,EAAW,QAK9F,OAHA4W,EAAQ3U,KAAK+W,eAAehZ,IAC5BsZ,EAAOrX,KAAKqV,iBAAiBV,IACxBlE,UAAUkE,GACR0C,CACV,EACM5C,CACX,IC9lBI8C,EAAe,WAQf,SAASA,IAEL,IAAIhH,EACAwE,EA2DJ,GAhDAlN,OAAO0G,eAAevO,KAAM,QAC5B,CACIoB,IAAK,WAED,OADKmP,IAAOA,EAAQ1D,EAAKM,cAClBoD,CACV,EACD1B,IAAK,SAASC,GAAQyB,EAAQzB,CAAO,EACrCb,cAAc,EACdC,YAAY,IAahBrG,OAAO0G,eAAevO,KAAM,QAC5B,CACIoB,IAAK,WAED,OADYpB,KAAKwI,WAAaX,OAAOG,eAAehI,OACvC2D,WAChB,EACDsK,cAAc,EACdC,YAAY,IAOhBrG,OAAO0G,eAAevO,KAAM,MAC5B,CACIoB,IAAK,WACD,OAAO2T,CACV,EACDlG,IAAK,SAASC,GACViG,EAAMjG,CACT,EACDb,cAAc,EACdC,YAAY,IAIZrG,OAAOE,UAAUzJ,eAAeiK,KAAKvI,KAAKmJ,MAAO,SAAU,CAE3D,IAAIM,EAAOzJ,KAAKmJ,MAAa,MAAEO,cAC/B,GAAI,CAAC,WAAY,YAAa,OAAQ,YAAYrC,QAAQoC,MACtD,MAAM,IAAIlG,EAAY,UAAW,KAAM,CAACvD,KAAKmJ,MAAMjC,KAAMuC,GAEzE,CAGYzJ,KAAKmJ,OAASnJ,KAAKmJ,MAAM6F,MAAKhP,KAAK+U,IAAM/U,KAAKmJ,MAAM6F,KACxDyF,EAAaI,SAAS7U,MAEtB6M,EAAKsB,WAAWoJ,EAAYvX,KACpC,CAMI,SAASlC,EAAUC,GACf,MAAmB,iBAARA,GAA4B,OAARA,CAEvC,CAyLI,OAjMAwZ,EAAWxE,OAAS,CAAC7C,EAASI,GAC9BiH,EAAWvI,IAAM,OACjBuI,EAAWC,QAAU,GAoCrBD,EAAWxP,UAAUsI,MAAQ,SAAS3C,GAClC,OA7BJ,SAAkB+J,EAAQC,GACtB,GAAID,IAAWC,EAAQ,OAAO,EACzB,GAAID,aAAkBF,GAAcG,aAAkBH,EAAY,CACnE,IAAIrS,EAAOuS,EAAOjH,UAAU,GACxBrL,EAAOuS,EAAOlH,UAAU,GAC5B,OAAO3L,EAAKqH,UAAUhH,EAAMC,EAC/B,CAAM,SAAIrH,EAAU2Z,KAAW3Z,EAAU4Z,KAC/B7S,EAAKqH,UAAUuL,EAAQC,EAE1C,CAoBeC,CAAS3X,KAAM0N,EACzB,EACD7F,OAAO0G,eAAegJ,EAAWxP,UAAW,QAAS,CACjDmG,YAAY,IAqBhBqJ,EAAWxP,UAAUE,SAAW,WAC5B,OAGA,SAAS2P,EAAe7Z,GACpB,IAAI4M,EAAO,GACPtC,EAAQtK,EAAIyK,WAAaX,OAAOG,eAAejK,GAC/CsK,IACAsC,EAAK/J,KAAKyH,EAAM1E,aAChBgH,EAAOA,EAAKvD,OAAOwQ,EAAevP,KAEtC,OAAOsC,CACnB,CAXeiN,CAAe5X,KAYzB,EACD6H,OAAO0G,eAAegJ,EAAWxP,UAAW,WAAY,CACpDmG,YAAY,IA0BhBqJ,EAAWxP,UAAUqI,WAAa,SAAS1C,GACvC,IAAI2I,EAAQrW,KACR6X,EAAa7X,KAAKqO,YAAcrO,KAAKmJ,MAAM4J,OAK/C,MAAwB,iBAAbrF,EAgBX,SAA4BoK,GAExB,IADA,IAAIC,EAAQ1B,EAAMpO,WACTlH,EAAI,EAAGA,EAAIgX,EAAMpX,OAAQI,IAC9B,GAAI+W,IAAYC,EAAMhX,GAAGmG,KAAM,OAAO,EAE1C,IAAK,IAAI0D,EAAI,EAAGA,EAAIiN,EAAWlX,OAAQiK,IACnC,GAAIkN,IAAYD,EAAWjN,GAAG1D,KAAM,OAAO,EAE/C,OAAO,CACnB,CAzBiD8Q,CAAmBtK,GACpC,mBAAbA,GAIX,SAAuBqG,GAEnB,IADA,IAAIgE,EAAQ1B,EAAMpO,WACTlH,EAAI,EAAGA,EAAIgX,EAAMpX,OAAQI,IAC9B,GAAIgT,IAAQgE,EAAMhX,GAAI,OAAO,EAGjC,IAAK,IAAI6J,EAAI,EAAGA,EAAIiN,EAAWlX,OAAQiK,IACnC,GAAImJ,IAAS8D,EAAWjN,GAAI,OAAO,EAEvC,OAAO,CACnB,CAdmDqN,CAAcvK,EAyB5D,EACD7F,OAAO0G,eAAegJ,EAAWxP,UAAW,aAAc,CACtDmG,YAAY,IAehBqJ,EAAWxP,UAAUyI,UAAY,SAAS0H,GACtC,IAAIC,EAAOD,GAAU,EACjBna,EAAM,CAAE,EAKZ,OAFIoa,EAAO,GAAKA,GAAO,IAAIpa,EAAW,MAAIiC,KAAKuQ,OAC/CxS,EAAW,MAAIiC,KAAKmJ,MAAM6F,IAAMhP,KAAKmJ,MAAM6F,IAAK,IAAKhP,KAAKmJ,MAAMjC,KAAOlH,KAAKmJ,MAAMjC,KAC3EnJ,CACV,EACD8J,OAAO0G,eAAegJ,EAAWxP,UAAW,YAAa,CACrDmG,YAAY,IAShBqJ,EAAWxP,UAAU0I,UAAa,SAAS2E,EAASE,GAChD,IAAIE,EAASF,GAAsBF,EAC/BnC,EAAWjT,KAAKmJ,MAAM6F,IAAMhP,KAAKmJ,MAAM6F,IAAK,IAAKhP,KAAKmJ,MAAMjC,KAAOlH,KAAKmJ,MAAMjC,KAElF,IAAKpJ,EAAUsX,GAAU,MAAM,IAAI7R,EAAY,UAAW,KAAM,QAAQ6R,IACxE,GAAIA,EAAe,QAAMnC,EAAU,MAAM,IAAI1P,EAAY,UAAW,KAAM,CAAC6R,EAAe,MAAGnC,IAE7F,IAAIwB,EAAaG,aAAaY,GAKvB,MAAM,IAAIjS,EAAY,UAAW,KAAM,CAAC+R,EAASnM,MAAOmM,EAAS/E,QAJ/DiF,EAA0B,qBAC3BA,EAASf,EAAasC,eAAevB,IACX,mBAAI,GAItCf,EAAayB,cAAcd,EAASpV,KACvC,EACD6H,OAAO0G,eAAegJ,EAAWxP,UAAW,YAAa,CACrDmG,YAAY,IAGTqJ,CAEX,ICzRIa,EAAgB,SAAUrH,GAU1B,SAASqH,EAAYC,GAGjB,IAAInH,EAFJH,EAAOxI,KAAKvI,MAUZ6H,OAAO0G,eAAevO,KAAM,QAC5B,CACIoB,IAAK,WAAa,OAAO8P,CAAQ,EACjCrC,IAAK,SAASC,GACV,GAAoB,iBAATA,EAAmB,MAAM,IAAIvL,EAAY,UAAW,KAAM,QAAQgC,MAC7E,GAAoB,IAAhBuJ,EAAKnO,OAAc,MAAM,IAAI4C,EAAY,UAAW,KAAM,IAC9D2N,EAAQpC,CACX,EACDb,cAAc,EACdC,YAAY,IAGhBlO,KAAKkR,MAAQmH,EAEbxL,EAAKsB,WAAWiK,EAAapY,KACrC,CA4DI,OA3DA6M,EAAKe,SAASwK,EAAarH,GAE3BqH,EAAYrF,OAAS,CAAC9B,GACtBmH,EAAYpJ,IAAM,OAClBoJ,EAAYZ,QAAU,CAAC,QAcvBY,EAAYrQ,UAAUyI,UAAY,SAAS0H,EAAQI,GAC/C,IAAIva,EAAMgT,EAAOhJ,UAAUyI,UAAUjI,KAAKvI,KAAMkY,EAAQI,GAKxD,OADAva,EAAU,KAAIiC,KAAKkR,MACZnT,CACV,EACD8J,OAAO0G,eAAe6J,EAAYrQ,UAAW,YAAa,CACtDmG,YAAY,IAShBkK,EAAYrQ,UAAU0I,UAAa,SAAS2E,EAASE,GACjDvE,EAAOhJ,UAAU0I,UAAUlI,KAAKvI,KAAMoV,EAASE,GAE/CtV,KAAKkR,MAAQkE,EAAc,IAE9B,EACDvN,OAAO0G,eAAe6J,EAAYrQ,UAAW,YAAa,CACtDmG,YAAY,IAQhBkK,EAAYrQ,UAAUoJ,MAAS,WAE3B,OADY,IAAIiH,EAAYpY,KAAKkR,MAEpC,EACDrJ,OAAO0G,eAAe6J,EAAYrQ,UAAW,QAAS,CAClDmG,YAAY,IAGTkK,CAEX,CAlGe,CAkGbb,GC9FEgB,EAAmB,SAAUxH,GAY7B,SAASwH,EAAeC,GACpBzH,EAAOxI,KAAKvI,MAGZ,IAMIyY,EANAC,EAAW,GACXC,EAAS,IAAIhK,EACbiK,EAAY,GACZC,EAAe,GAIf3G,EAAc,GAQlBrK,OAAO0G,eAAevO,KAAM,WAC5B,CACIoB,IAAK,WAAa,OAAOsX,CAAW,EACpC7J,IAAK,SAASiK,GAAUJ,EAAWA,EAAStR,OAAO0R,EAAU,EAC7D7K,cAAc,EACdC,YAAY,IAShBrG,OAAO0G,eAAevO,KAAM,SAC5B,CACIoB,IAAK,WAAa,OAAOuX,CAAS,EAClC1K,cAAc,EACdC,YAAY,IAShBrG,OAAO0G,eAAevO,KAAM,YAC5B,CACIoB,IAAK,WAAa,OAAOwX,CAAY,EACrC/J,IAAK,SAASC,GAAQ8J,EAAY9J,CAAO,EACzCb,cAAc,EACdC,YAAY,IAShBrG,OAAO0G,eAAevO,KAAM,eAC5B,CACIoB,IAAK,WAAa,OAAOyX,CAAe,EACxChK,IAAK,SAASC,GAAQ+J,EAAe/J,CAAO,EAC5Cb,cAAc,EACdC,YAAY,IAWhBrG,OAAO0G,eAAevO,KAAM,SAC5B,CACIoB,IAAK,WAAa,OAAOqX,CAAS,EAClC5J,IAAK,SAAStJ,GAAOkT,EAASlT,CAAM,EACpC0I,cAAc,EACdC,YAAY,IAShBrG,OAAO0G,eAAevO,KAAM,aAC5B,CACIoB,IAAK,WAAa,OAAO8Q,CAAa,EACtCrD,IAAK,SAAStJ,GACV,IAAI6M,EAAUpU,MAAMC,QAAQsH,GAAOA,EAAMvH,MAAM+J,UAAU+B,MAAMvB,KAAKiG,UAAW,GAE3EuK,EAAO3G,EAAQzR,OAAS,GAA2B,iBAAfyR,EAAQ,GAAkBA,EAAQ,GAAK,GAG3EA,EAAQzR,OAAS,GAAyB,OAJpC,eAIqB6E,KAAKuT,KAAgB3G,EAAU,CAAC,SAAShL,OAAOgL,IAI/EF,EAAaE,CAChB,EACDnE,cAAc,EACdC,YAAY,IAUhBrG,OAAO0G,eAAevO,KAAM,QAC5B,CACIoB,IAAK,WAED,IADA,IAAI+F,EAAM,GACDpG,EAAI,EAAGA,EAAI6X,EAAUjY,OAAQI,IAAKoG,EAAIvG,KAAKZ,KAAK4Y,UAAU7X,IACnE,OAAOoG,CACV,EACD8G,cAAc,EACdC,YAAY,IAShBrG,OAAO0G,eAAevO,KAAM,QAC5B,CACIoB,IAAK,WAAa,OAAOpB,KAAK4Y,UAAUjY,MAAS,EACjDuN,YAAY,EACZD,cAAc,IAQlBpG,OAAO0G,eAAevO,KAAM,SAC5B,CACIoB,IAAK,WAAa,OAAOpB,KAAK4Y,UAAUjY,MAAS,EACjDuN,YAAY,EACZD,cAAc,IAalBpG,OAAO0G,eAAevO,KAAM,QAC5B,CACI6O,IAAK,SAASkF,GAAO/T,KAAK2Y,OAAO1J,GAAG,MAAO8E,EAAO,EAClD9F,cAAc,EACdC,YAAY,IAYhBrG,OAAO0G,eAAevO,KAAM,UAC5B,CACI6O,IAAK,SAASkF,GAAO/T,KAAK2Y,OAAO1J,GAAG,QAAS8E,EAAO,EACpD9F,cAAc,EACdC,YAAY,IAYhBrG,OAAO0G,eAAevO,KAAM,WAC5B,CACI6O,IAAK,SAASkF,GAAO/T,KAAK2Y,OAAO1J,GAAG,SAAU8E,EAAO,EACrD9F,cAAc,EACdC,YAAY,IAYhBrG,OAAO0G,eAAevO,KAAM,YAC5B,CACI6O,IAAK,SAASkF,GAAO/T,KAAK2Y,OAAO1J,GAAG,UAAW8E,EAAO,EACtD9F,cAAc,EACdC,YAAY,IAUhBrG,OAAO0G,eAAevO,KAAM,UAC5B,CACI6O,IAAK,SAASkF,GAAO/T,KAAK2Y,OAAO1J,GAAG,QAAS8E,EAAO,EACpD9F,cAAc,EACdC,YAAY,IAUhBrG,OAAO0G,eAAevO,KAAM,YAC5B,CACI6O,IAAK,SAASkF,GAAO/T,KAAK2Y,OAAO1J,GAAG,UAAW8E,EAAO,EACtD9F,cAAc,EACdC,YAAY,IAahBrG,OAAO0G,eAAevO,KAAM,aAC5B,CACI6O,IAAK,SAASkF,GAAO/T,KAAK2Y,OAAO1J,GAAG,WAAY8E,EAAO,EACvD9F,cAAc,EACdC,YAAY,IAahBrG,OAAO0G,eAAevO,KAAM,YAC5B,CACI6O,IAAK,SAASkF,GAAO/T,KAAK2Y,OAAO1J,GAAG,UAAW8E,EAAO,EACtD9F,cAAc,EACdC,YAAY,IAIhBlO,KAAKyY,OAASD,GAAW,KAGzBxY,KAAK0Y,SAAW,CAAC,SAAU,SAAU,YAAa,eAAgB,aAAc,QAAS,QAAS,SAAU,YAC5G1Y,KAAK0Y,SAAW,CAAC,QAAS,UAAW,WAAY,YAAa,UAAW,YAAa,aAAc,aACpG1Y,KAAK0Y,SAAW,CAAC,SAAU,WAAY,YAAa,aAAc,WAAY,aAAc,cAAe,cAC3G1Y,KAAK0Y,SAAW,CAAC,qBAAsB,YAAa,YAAa,QAAS,SAC1E1Y,KAAK0Y,SAAW,CAAC,UAAW,SAAU,WAAY,WAAY,UAAW,MAAO,SAEhF7L,EAAKsB,WAAWoK,EAAgBvY,KACxC,CAyTI,OAxTA6M,EAAKe,SAAS2K,EAAgBxH,GAE9BwH,EAAexF,OAAS,CAACrC,EAAaU,GACtCmH,EAAevJ,IAAM,aACrBuJ,EAAef,QAAU,CAAC,UAC1Be,EAAepI,MAAQ,WASvBoI,EAAexQ,UAAUiR,OAAS,SAAShM,EAAQiM,GAC/C,OAAOjZ,KAAK2Y,OAAO7I,KAAK,MAAO9C,EAAQiM,EAAOjZ,KACjD,EACD6H,OAAO0G,eAAegK,EAAexQ,UAAW,SAAU,CACtDmG,YAAY,IAShBqK,EAAexQ,UAAUmR,SAAW,SAASlM,EAAQiM,GACjD,OAAOjZ,KAAK2Y,OAAO7I,KAAK,QAAS9C,EAAQiM,EAAOjZ,KACnD,EACD6H,OAAO0G,eAAegK,EAAexQ,UAAW,WAAY,CACxDmG,YAAY,IAUhBqK,EAAexQ,UAAUoR,UAAY,SAASnM,EAAQiM,GAClD,OAAOjZ,KAAK2Y,OAAO7I,KAAK,SAAU9C,EAAQiM,EAAOjZ,KACpD,EACD6H,OAAO0G,eAAegK,EAAexQ,UAAW,YAAa,CACzDmG,YAAY,IAUhBqK,EAAexQ,UAAUqR,WAAa,SAASpM,EAAQiM,GACnD,OAAOjZ,KAAK2Y,OAAO7I,KAAK,UAAW9C,EAAQiM,EAAOjZ,KACrD,EACD6H,OAAO0G,eAAegK,EAAexQ,UAAW,aAAc,CAC1DmG,YAAY,IAQhBqK,EAAexQ,UAAUsR,SAAW,WAChC,OAAOrZ,KAAK2Y,OAAO7I,KAAK,QAAS9P,KACpC,EACD6H,OAAO0G,eAAegK,EAAexQ,UAAW,WAAY,CACxDmG,YAAY,IAQhBqK,EAAexQ,UAAUuR,WAAa,WAClC,OAAOtZ,KAAK2Y,OAAO7I,KAAK,UAAW9P,KACtC,EACD6H,OAAO0G,eAAegK,EAAexQ,UAAW,aAAc,CAC1DmG,YAAY,IAWhBqK,EAAexQ,UAAUwR,YAAc,SAASC,EAAQC,EAAQR,GAC5D,OAAOjZ,KAAK2Y,OAAO7I,KAAK,WAAY0J,EAAQC,EAAQR,EAAOjZ,KAC9D,EACD6H,OAAO0G,eAAegK,EAAexQ,UAAW,cAAe,CAC3DmG,YAAY,IAWhBqK,EAAexQ,UAAU2R,WAAa,SAASF,EAAQC,EAAQR,GAC3D,OAAOjZ,KAAK2Y,OAAO7I,KAAK,UAAW0J,EAAQC,EAAQR,EAAOjZ,KAC7D,EACD6H,OAAO0G,eAAegK,EAAexQ,UAAW,aAAc,CAC1DmG,YAAY,IAUhBqK,EAAexQ,UAAU4R,mBAAqB,SAASV,EAAOW,GAE1D,MADsB,kBAAXA,IAAsBA,GAAS,GACnC,CACHxY,IAAK,WAAa,OAAOpB,KAAK4Y,UAAUK,EAAS,EACjDpK,IAAK,SAASC,GACV,IAAI+K,EAAO7Z,KAAK4Y,UAAUK,GACtBjZ,KAAKkS,WAAWvR,OAAS,GAAGkE,EAAK6H,UAAU,CAAC1M,KAAKkS,YAAapD,GAClE9O,KAAKuZ,YAAYzK,EAAM+K,EAAMZ,GAC7BjZ,KAAK4Y,UAAUK,GAASnK,EACxB9O,KAAK0Z,WAAW5K,EAAM+K,EAAMZ,EAC/B,EACDhL,cAAc,EACdC,WAAY0L,EAEnB,EACD/R,OAAO0G,eAAegK,EAAexQ,UAAW,qBAAsB,CAClEmG,YAAY,IAQhBqK,EAAexQ,UAAU+R,QAAW,WAChC,MAAM,IAAIvW,EAAY,UAAW,KAAM,GAC1C,EACDsE,OAAO0G,eAAegK,EAAexQ,UAAW,UAAW,CACvDmG,YAAY,IAehBqK,EAAexQ,UAAUyI,UAAY,SAAS0H,EAAQI,GAClD,IAAIva,EAAMgT,EAAOhJ,UAAUyI,UAAUjI,KAAKvI,KAAMkY,EAAQI,GACpDH,EAAOD,GAAU,EAEjB6B,EAAS,GAERlV,EAAKqH,UAAUlM,KAAK2Y,OAAiB,SAAG,CAAA,KACzC5a,EAAc,SAAIiC,KAAK2Y,OAAOtY,UAE9B8X,EAAO,GAAKA,GAAO,GAAMnY,KAAKyY,SAC9B1a,EAAY,OAAI0W,EAAaoB,kBAAkB7V,KAAKyY,SAExD,IAAK,IAAI1X,EAAI,EAAGA,EAAIf,KAAKkS,WAAWvR,OAAQI,IAAK,CAC7C,IAAI2K,EAAO1L,KAAKkS,WAAWnR,GACP,mBAAT2K,EAAqBqO,EAAOnZ,KAAK6T,EAAasB,oBAAoBrK,IACxEqO,EAAOnZ,KAAK8K,EAC7B,CAEQ,OADA3N,EAAgB,WAAIgc,EACbhc,CACV,EACD8J,OAAO0G,eAAegK,EAAexQ,UAAW,YAAa,CACzDmG,YAAY,IAShBqK,EAAexQ,UAAU0I,UAAY,SAAS2E,EAASE,GAGnD,IAAI0E,EAFJjJ,EAAOhJ,UAAU0I,UAAUlI,KAAKvI,KAAMoV,EAASE,GAG/C,IAAIE,EAASF,GAAsBF,EAMnC,GAJApV,KAAKia,QACD7E,EAAkB,WAClBpV,KAAK2Y,OAAOtY,SAAW+U,EAAkB,UAEzCA,EAAgB,OAAG,CAEnB,KADA4E,EAAQvF,EAAakB,cAAcP,EAAgB,OAAQ,KAAGI,IAClD,MAAM,IAAIjS,EAAY,UAAW,KAAM,CAAC6R,EAAgB,OAAQ,OAC5EpV,KAAKyY,OAASuB,CAC1B,CACYhc,MAAMC,QAAQmX,EAAoB,aAAMA,EAAoB,WAAEzU,OAAS,IACvEX,KAAKkS,WAAakD,EAAoB,WAE7C,EACDvN,OAAO0G,eAAegK,EAAexQ,UAAW,YAAa,CACzDmG,YAAY,IAShBqK,EAAexQ,UAAU6I,OAAS,SAAS5D,GACvC,IAAI0C,EAAM1P,KAAK4Y,UAAUvR,QAAQ2F,GAEjC,OAAI0C,GAAO,GAAK1P,KAAKka,SAASxK,GAAaA,GAClC,CACZ,EACD7H,OAAO0G,eAAegK,EAAexQ,UAAW,SAAU,CACtDmG,YAAY,IAShBqK,EAAexQ,UAAUmS,SAAW,SAASC,GACzC,IAAIzO,EAEJ,GAAqB,iBAAVyO,EAAoB,MAAM,IAAI5W,EAAY,UAAW,KAAM,QAAQ4W,IAC9E,QAAIA,EAAQ,KAEZzO,EAAO1L,KAAK4Y,UAAUuB,GAClBna,KAAK4Y,UAAUjY,OAASwZ,KAEY,IAAhCna,KAAKmZ,UAAUzN,EAAMyO,OAEpBna,KAAK8Z,QAAQK,KAClBna,KAAKoZ,WAAW1N,EAAMyO,IACf,KAGd,EACDtS,OAAO0G,eAAegK,EAAexQ,UAAW,WAAY,CACxDmG,YAAY,IAShBqK,EAAexQ,UAAU8I,SAAW,SAAS7D,GACzC,OAAOhN,KAAK4Y,UAAUvR,QAAQ2F,IAAY,CAC7C,EACDnF,OAAO0G,eAAegK,EAAexQ,UAAW,WAAY,CACxDmG,YAAY,IAShBqK,EAAexQ,UAAUV,QAAU,SAAS2F,GACxC,OAAOhN,KAAK4Y,UAAUvR,QAAQ2F,EACjC,EACDnF,OAAO0G,eAAegK,EAAexQ,UAAW,UAAW,CACvDmG,YAAY,IAQhBqK,EAAexQ,UAAU4I,IAAO,WAC5B,MAAM,IAAIpN,EAAY,UAAW,KAAM,GAC1C,EACDsE,OAAO0G,eAAegK,EAAexQ,UAAW,MAAO,CACnDmG,YAAY,IAQhBqK,EAAexQ,UAAUkS,MAAS,WAC9B,MAAM,IAAI1W,EAAY,UAAW,KAAM,GAC1C,EACDsE,OAAO0G,eAAegK,EAAexQ,UAAW,QAAS,CACrDmG,YAAY,IAGTqK,CAEX,CAzmBkB,CAymBhBhB,GC1mBE6C,EAAoB,SAAUrJ,GAS9B,SAASqJ,EAAgB5B,GACrBzH,EAAOxI,KAAKvI,KAAMwY,GAElBxY,KAAK0Y,SAAW,CAAC,YAEjB7L,EAAKsB,WAAWiM,EAAiBpa,KACzC,CAQI,SAASlC,EAAUC,GACf,MAAmB,iBAARA,GAA4B,OAARA,CAEvC,CAmWI,OA7WA8O,EAAKe,SAASwM,EAAiBrJ,GAE/BqJ,EAAgBrH,OAAS,CAACjB,GAC1BsI,EAAgBpL,IAAM,aACtBoL,EAAgB5C,QAAU,CAAC,UAe3B4C,EAAgBrS,UAAU+R,QAAU,SAASK,GACzC,IAAI7I,EAAQtR,KAAKsR,MAAQ,EAKzB,GAHAtR,KAAK4Y,UAAUjJ,OAAOwK,EAAO,GAC7Bna,KAAK6Y,aAAalJ,OAAOwK,EAAO,GAE5BA,EAAQ7I,EAAO,CACf,IAAK,IAAIvQ,EAAIoZ,EAAOpZ,EAAIuQ,EAAOvQ,IAAK,CAChC,IAAIsZ,EAAOra,KAAK6Y,aAAa9X,GAAKf,KAAK6Y,aAAa9X,GAAKf,KAAK2Z,mBAAmB5Y,GACjF8G,OAAO0G,eAAevO,KAAM,CAACe,GAAIsZ,EACjD,QACmBra,KAAKsR,EACxB,aACmBtR,KAAKma,GAEhB,OAAO,CACV,EACDtS,OAAO0G,eAAe6L,EAAgBrS,UAAW,UAAW,CACxDmG,YAAY,IAehBkM,EAAgBrS,UAAUyI,UAAY,SAAS0H,EAAQI,GACnD,IAAIva,EAAMgT,EAAOhJ,UAAUyI,UAAUjI,KAAKvI,KAAMkY,EAAQI,GACpDH,EAAOD,GAAU,EACjBoC,EAAQhC,EAAU,GAAGlR,OAAOkR,EAASva,GAAO,GAAGqJ,OAAOrJ,GAE1D,GAAIiC,KAAK6Y,aAAalY,OAAS,EAAG,CAC9B5C,EAAW,MAAI,GACf,IAAK,IAAIgD,EAAI,EAAGA,EAAIf,KAAK6Y,aAAalY,OAAQI,IAC1ChD,EAAW,MAAE6C,KAAKZ,KAAK6Y,aAAa9X,GAEpD,CACQhD,EAAW,MAAI,GACf,IAAK,IAAIyG,EAAI,EAAGA,EAAIxE,KAAK4Y,UAAUjY,OAAQ6D,IAAK,CAC5C,IAAIkH,EAAO1L,KAAK4Y,UAAUpU,GACtBkH,aAAgB6L,EACZ9C,EAAaiC,cAAchL,EAAM4O,GACjCvc,EAAW,MAAE6C,KAAK6T,EAAaoB,kBAAkBnK,IAC9C3N,EAAW,MAAE6C,KAAK8K,EAAK8E,UAAU2H,EAAMmC,IAC3Cvc,EAAW,MAAE6C,KAAK8K,EACrC,CACQ,OAAO3N,CACV,EACD8J,OAAO0G,eAAe6L,EAAgBrS,UAAW,YAAa,CAC1DmG,YAAY,IAShBkM,EAAgBrS,UAAU0I,UAAa,SAAS2E,EAASE,GACrDvE,EAAOhJ,UAAU0I,UAAUlI,KAAKvI,KAAMoV,EAASE,GAC/C,IAAIE,EAASF,GAAsBF,EAEnC,GAAIpX,MAAMC,QAAQmX,EAAe,QAAMA,EAAe,MAAEzU,OAAS,EAC7D,IAAK,IAAII,EAAI,EAAGA,EAAIqU,EAAe,MAAEzU,OAAQI,IACzCf,KAAK6Y,aAAajY,KAAKwU,EAAe,MAAErU,IAGhD,IAAI,IAAIyD,EAAI,EAAGA,EAAI4Q,EAAe,MAAEzU,OAAQ6D,IACxCqD,OAAO0G,eAAevO,KAAM,CAACwE,GAAIxE,KAAK2Z,mBAAmBnV,IAG7D,IAAI,IAAIoG,EAAI,EAAGA,EAAIwK,EAAe,MAAEzU,OAAQiK,IAAK,CAC7C,IAAIc,EAAO0J,EAAe,MAAExK,GAC5B,GAAI6J,EAAaG,aAAalJ,GAAO,CACjC,IAAI3N,EAAM0W,EAAaY,iBAAiB3J,EAAM8J,GAC9CzX,EAAI0S,UAAU/E,EAAM8J,GACpBxV,KAAK4Y,UAAUhY,KAAK7C,EAEpC,MAAmB,GAAI2N,EAAW,KAAG,CACrB,IAAI2L,EAAO5C,EAAakB,cAAcjK,EAAW,KAAG8J,GACpD,IAAK6B,EAAM,MAAM,IAAI9T,EAAY,UAAW,KAAM,CAACqH,EAAGc,EAAW,OACjE1L,KAAK4Y,UAAUhY,KAAKyW,EAEvB,MAAMrX,KAAK4Y,UAAUhY,KAAK8K,EACvC,CACA,EACI7D,OAAO0G,eAAe6L,EAAgBrS,UAAW,YAAa,CAC1DmG,YAAY,IAUhBkM,EAAgBrS,UAAU4I,IAAM,SAAS3D,EAAQuN,GAC7C,IAAIC,EAAMxa,KAAKsR,MAEf,OADAtR,KAAK+R,SAASyI,EAAKxN,EAAQuN,GACpBC,CACV,EACD3S,OAAO0G,eAAe6L,EAAgBrS,UAAW,MAAO,CACpDmG,YAAY,IAOhBkM,EAAgBrS,UAAUkS,MAAQ,WAE9B,IAAwB,IAApBja,KAAKqZ,WAAsB,OAAS,EAExC,IAAK,IAAItY,EAAI,EAAGA,EAAIf,KAAKsR,MAAOvQ,WAAYf,KAAKe,GACjDf,KAAK4Y,UAAY,GACjB5Y,KAAK6Y,aAAe,GAEpB7Y,KAAKsZ,YACR,EACDzR,OAAO0G,eAAe6L,EAAgBrS,UAAW,QAAS,CACtDmG,YAAY,IAWhBkM,EAAgBrS,UAAUgK,SAAW,SAASoI,EAAOnN,EAAQuN,GACzD,IACI,IAAI3Y,EAAU5B,KAAKsR,MAEnB,GAAqB,iBAAV6I,EAAoB,MAAM,IAAI5W,EAAY,UAAW,KAAM,QAAQ4W,IAC9E,GAAIvY,EAAQuY,EAAO,MAAM,IAAI5W,EAAY,UAAW,KAAM,CAAC4W,EAAOvY,IAClE,GAAIuY,EAAQ,EAAG,MAAM,IAAI5W,EAAY,UAAW,KAAM,CAAC4W,IAWvD,GAVIna,KAAKkS,WAAWvR,OAAS,GAAGkE,EAAK6H,UAAU,CAAC1M,KAAKkS,YAAalF,GAC9DlP,EAAUyc,KAAmC,IAAxBA,EAAOtM,cAC5B/M,QAAQC,KAAKvB,EAAQwB,IAAI,QAAS,CAAC,uBAAwB,aAG3DtD,EAAUyc,KAA+B,IAApBA,EAAOvM,UAC5B9M,QAAQC,KAAKvB,EAAQwB,IAAI,QAAS,CAAC,mBAAoB,cAIxB,IAA/BpB,KAAKgZ,OAAOhM,EAAQmN,GAAkB,OAAO,EAGjDna,KAAK4Y,UAAUjJ,OAAOwK,EAAO,EAAGnN,GAChChN,KAAK6Y,aAAalJ,OAAOwK,EAAO,EAAGI,GAE/Bzc,EAAUyc,GACV1S,OAAO0G,eAAevO,KAAM,CAACma,GAAQI,GAErC1S,OAAO0G,eAAevO,KAAM,CAACma,GAAQna,KAAK2Z,mBAAmBQ,IAGjE,IAAK,IAAIpZ,EAAIoZ,EAAQ,EAAGpZ,EAAIf,KAAKsR,MAAOvQ,IAAK,CACzC,IAAIsZ,EAAOra,KAAK6Y,aAAa9X,GAAKf,KAAK6Y,aAAa9X,GAAKf,KAAK2Z,mBAAmB5Y,GACjF8G,OAAO0G,eAAevO,KAAM,CAACe,GAAIsZ,EACjD,CAGY,OAFAra,KAAKkZ,SAASlM,EAAQmN,IAEf,CAEV,CAAC,MAAOxa,GACL,MAAM,IAAI4D,EAAY,UAAW5D,EAAO,CAACwa,EAAOnN,GAC5D,CACK,EACDnF,OAAO0G,eAAe6L,EAAgBrS,UAAW,WAAY,CACzDmG,YAAY,IAUhBkM,EAAgBrS,UAAU0S,IAAO,SAASC,EAAUC,GAChD,IAAIC,EAAS,GAEb,GAAuB,mBAAZF,EAAwB,MAAM,IAAInX,EAAY,UAAW,KAAM,QAAQmX,IAElF,IAAK,IAAI3Z,EAAI,EAAGA,EAAIf,KAAKW,OAAQI,IAC7B6Z,EAAO7Z,GAAK2Z,EAASnS,KAAKoS,GAAW3a,KAAMA,KAAKe,GAAIA,EAAGf,KAAKqR,OAEhE,OAAOuJ,CACV,EACD/S,OAAO0G,eAAe6L,EAAgBrS,UAAW,MAAO,CACpDmG,YAAY,IAUhBkM,EAAgBrS,UAAU8S,OAAS,SAAUH,EAAUC,GACnD,IAAIC,EAAS,GAEb,GAAuB,mBAAZF,EAAwB,MAAM,IAAInX,EAAY,UAAW,KAAM,QAAQmX,IAElF,IAAK,IAAI3Z,EAAI,EAAGA,EAAIf,KAAKW,OAAQI,IACzB2Z,EAASnS,KAAKoS,GAAW3a,KAAMA,KAAKe,GAAIA,EAAGf,KAAKqR,QAChDuJ,EAAOha,KAAKZ,KAAKe,IAGzB,OAAO6Z,CACV,EACD/S,OAAO0G,eAAe6L,EAAgBrS,UAAW,SAAU,CACvDmG,YAAY,IAUhBkM,EAAgBrS,UAAU+S,OAAS,SAASJ,EAAUK,GAClD,IAAIC,EAAMD,EAEV,GAAuB,mBAAZL,EAAwB,MAAM,IAAInX,EAAY,UAAW,KAAM,QAAQmX,IAElF,IAAI,IAAI3Z,EAAE,EAAGA,EAAIf,KAAKW,OAAQI,IAC1Bia,EAAMA,EAAMN,EAASM,EAAKhb,KAAKe,GAAIA,EAAGf,KAAKqR,OAASrR,KAAKe,GAE7D,OAAOia,CACf,EACInT,OAAO0G,eAAe6L,EAAgBrS,UAAW,SAAU,CACvDmG,YAAY,IAUhBkM,EAAgBrS,UAAU2J,KAAO,SAASgJ,EAAUC,GAChD,GAAuB,mBAAZD,EAAwB,MAAM,IAAInX,EAAY,UAAW,KAAM,QAAQmX,IAElF,IAAK,IAAI3Z,EAAI,EAAGA,EAAIf,KAAKW,OAAQI,IAC7B,GAAK2Z,EAASnS,KAAKoS,GAAW3a,KAAMA,KAAKe,GAAIA,EAAGf,KAAKqR,OACrD,OAAOrR,KAAKe,EAGnB,EACD8G,OAAO0G,eAAe6L,EAAgBrS,UAAW,OAAQ,CACrDmG,YAAY,IAShBkM,EAAgBrS,UAAU9B,QAAU,SAASyU,EAAUC,GACnD,GAAuB,mBAAZD,EAAwB,MAAM,IAAInX,EAAY,WAAY,KAAM,QAAQmX,IAEnF,IAAK,IAAI3Z,EAAI,EAAGA,EAAGf,KAAKW,OAAQI,IAC5B2Z,EAASnS,KAAKoS,GAAW3a,KAAMA,KAAKe,GAAIA,EAAGf,KAAKqR,MAEvD,EACDxJ,OAAO0G,eAAe6L,EAAgBrS,UAAW,UAAW,CACxDmG,YAAY,IAUhBkM,EAAgBrS,UAAUkT,KAAO,SAASP,EAAUC,GAChD,GAAuB,mBAAZD,EAAwB,MAAM,IAAInX,EAAY,WAAY,KAAM,QAAQmX,IAEnF,IAAI,IAAI3Z,EAAE,EAAGA,EAAIf,KAAKW,OAAQI,IAC1B,GAAI2Z,EAASnS,KAAKoS,GAAW3a,KAAMA,KAAKe,GAAIA,EAAGf,KAAKqR,OAAQ,OAAO,EAEvE,OAAO,CACV,EACDxJ,OAAO0G,eAAe6L,EAAgBrS,UAAW,OAAQ,CACrDmG,YAAY,IAUhBkM,EAAgBrS,UAAUmT,MAAQ,SAASR,EAAUC,GACjD,GAAuB,mBAAZD,EAAwB,MAAM,IAAInX,EAAY,WAAY,KAAM,QAAQmX,IAEnF,IAAI,IAAI3Z,EAAE,EAAGA,EAAIf,KAAKW,OAAQI,IAC1B,IAAK2Z,EAASnS,KAAKoS,GAAW3a,KAAMA,KAAKe,GAAIA,EAAGf,KAAKqR,OAAQ,OAAO,EAEpE,OAAO,CACd,EACDxJ,OAAO0G,eAAe6L,EAAgBrS,UAAW,QAAS,CACtDmG,YAAY,IAUhBkM,EAAgBrS,UAAUoT,UAAY,SAAST,EAAUC,GACrD,GAAuB,mBAAZD,EAAwB,MAAM,IAAInX,EAAY,WAAY,KAAM,QAAQmX,IAEnF,IAAK,IAAI3Z,EAAI,EAAGA,EAAIf,KAAKW,OAAQI,IAC7B,GAAK2Z,EAASnS,KAAKoS,GAAW3a,KAAMA,KAAKe,GAAIA,EAAGf,KAAKqR,OACrD,OAAOtQ,EAGX,OAAS,CACZ,EACD8G,OAAO0G,eAAe6L,EAAgBrS,UAAW,YAAa,CAC1DmG,YAAY,IAITkM,CAEX,CA/XmB,CA+XjB7B,GC/XE6C,EAAuB,SAAUrK,GASjC,SAASqK,EAAmB5C,GACxBzH,EAAOxI,KAAKvI,KAAMwY,GAElB,IAAI6C,EAAQ,GASZxT,OAAO0G,eAAevO,KAAM,QAC5B,CACIoB,IAAK,WAAa,OAAOia,CAAQ,EACjCxM,IAAK,SAASC,GAAQuM,EAAQvM,CAAO,EACrCb,cAAc,EACdC,YAAY,IAoBhBlO,KAAK0Y,SAAW,CAAC,QAAS,UAAW,SAAU,cAE/C7L,EAAKsB,WAAWiN,EAAoBpb,KAC5C,CAQI,SAASlC,EAAUC,GACf,MAAmB,iBAARA,GAA4B,OAARA,CAEvC,CAEI,SAASgR,EAAUhR,GACf,MAAmB,iBAARA,GAAoBA,EAAI4C,OAAS,CAEpD,CAkbI,OAjcAkM,EAAKe,SAASwN,EAAoBrK,GAElCqK,EAAmBrI,OAAS,CAACjC,GAC7BsK,EAAmBpM,IAAM,aACzBoM,EAAmB5D,QAAU,CAAC,UAoB9B4D,EAAmBrT,UAAU+R,QAAU,SAASK,GAC5C,IAAI7I,EAAQtR,KAAKsR,MAAQ,EACrBgK,EAAWtb,KAAKgR,WAAWmJ,GAQ/B,UANOna,KAAKsb,GAEZtb,KAAK4Y,UAAUjJ,OAAOwK,EAAO,GAC7Bna,KAAKqb,MAAM1L,OAAOwK,EAAO,GACzBna,KAAK6Y,aAAalJ,OAAOwK,EAAO,GAE5BA,EAAQ7I,EAAO,CACf,IAAK,IAAIvQ,EAAIoZ,EAAOpZ,EAAIuQ,EAAOvQ,IAE3Bua,EAAWtb,KAAKgR,WAAWjQ,GAC3B8G,OAAO0G,eAAevO,KAAM,CAACe,GAAIf,KAAK6Y,aAAa9X,GAAKf,KAAK6Y,aAAa9X,GAAKf,KAAK2Z,mBAAmB5Y,GAAG,IAC1G8G,OAAO0G,eAAevO,KAAMsb,EAAUtb,KAAK6Y,aAAa9X,GAAKf,KAAK6Y,aAAa9X,GAAKf,KAAK2Z,mBAAmB5Y,WAEzGf,KAAKsR,EACxB,aACmBtR,KAAKma,GAEhB,OAAO,CACV,EACDtS,OAAO0G,eAAe6M,EAAmBrT,UAAW,UAAW,CAC3DmG,YAAY,IAehBkN,EAAmBrT,UAAUyI,UAAY,SAAS0H,EAAQI,GACtD,IAAIva,EAAMgT,EAAOhJ,UAAUyI,UAAUjI,KAAKvI,KAAMkY,EAAQI,GACpDH,EAAOD,GAAU,EACjBoC,EAAQhC,EAAU,GAAGlR,OAAOkR,EAASva,GAAO,GAAGqJ,OAAOrJ,GAE1D,GAAIiC,KAAK6Y,aAAalY,OAAS,EAAG,CAC9B5C,EAAW,MAAI,GACf,IAAK,IAAIgD,EAAI,EAAGA,EAAIf,KAAK6Y,aAAalY,OAAQI,IAC1ChD,EAAW,MAAE6C,KAAKZ,KAAK6Y,aAAa9X,GAEpD,CACQhD,EAAW,MAAI,GACf,IAAK,IAAIyG,EAAI,EAAGA,EAAIxE,KAAKsR,MAAO9M,IAAK,CACjC,IAAIkH,EAAO1L,KAAK4Y,UAAUpU,GACtBkH,aAAgB6L,EACZ9C,EAAaiC,cAAchL,EAAM4O,GACjCvc,EAAW,MAAE6C,KAAK6T,EAAaoB,kBAAkBnK,IAC9C3N,EAAW,MAAE6C,KAAK8K,EAAK8E,UAAU2H,EAAMmC,IAC3Cvc,EAAW,MAAE6C,KAAK8K,EACrC,CACQ3N,EAAU,KAAI,GACd,IAAK,IAAI6M,EAAI,EAAGA,EAAI5K,KAAKqb,MAAM1a,OAAQiK,IAAK,CACxC,IAAIvM,EAAM2B,KAAKqb,MAAMzQ,GACrB7M,EAAU,KAAE6C,KAAKvC,EAC7B,CACQ,OAAON,CACV,EACD8J,OAAO0G,eAAe6M,EAAmBrT,UAAW,YAAa,CAC7DmG,YAAY,IAShBkN,EAAmBrT,UAAU0I,UAAa,SAAS2E,EAASE,GACxDvE,EAAOhJ,UAAU0I,UAAUlI,KAAKvI,KAAMoV,EAASE,GAC/C,IAAIE,EAASF,GAAsBF,EAEnC,GAAIA,EAAe,MAAEzU,SAAWyU,EAAc,KAAEzU,OAAQ,MAAM,IAAI4C,EAAY,UAAW,KAAM,CAAC6R,EAAe,MAAEzU,OAAQyU,EAAc,KAAEzU,SAEzI,GAAI3C,MAAMC,QAAQmX,EAAe,QAAMA,EAAe,MAAEzU,OAAS,EAAG,CAChE,GAAIyU,EAAe,MAAEzU,SAAWyU,EAAe,MAAEzU,OAAQ,MAAM,IAAI4C,EAAY,UAAW,KAAM,CAAC6R,EAAe,MAAEzU,OAAQyU,EAAe,MAAEzU,SAC3I,IAAK,IAAII,EAAI,EAAGA,EAAIqU,EAAe,MAAEzU,OAAQI,IACzCf,KAAK6Y,aAAajY,KAAKwU,EAAe,MAAErU,GAExD,CAEQf,KAAKqb,MAAQ,GACb,IAAI,IAAI7W,EAAI,EAAGA,EAAI4Q,EAAc,KAAEzU,OAAQ6D,IAAK,CAC5C,IAAInG,EAAM+W,EAAc,KAAE5Q,GAC1BxE,KAAKqb,MAAMza,KAAKvC,GAChBwJ,OAAO0G,eAAevO,KAAM,CAACwE,GAAIxE,KAAK2Z,mBAAmBnV,GAAG,IAC5DqD,OAAO0G,eAAevO,KAAM3B,EAAK2B,KAAK2Z,mBAAmBnV,GACrE,CAEQ,IAAI,IAAIoG,EAAI,EAAGA,EAAIwK,EAAe,MAAEzU,OAAQiK,IAAK,CAC7C,IAAIc,EAAO0J,EAAe,MAAExK,GAC5B,GAAI6J,EAAaG,aAAalJ,GAAO,CACjC,IAAI3N,EAAM0W,EAAaY,iBAAiB3J,EAAM8J,GAC9CzX,EAAI0S,UAAU/E,EAAM8J,GACpBxV,KAAK4Y,UAAUhY,KAAK7C,EAEpC,MAAmB,GAAI2N,EAAW,KAAG,CACrB,IAAI2L,EAAO5C,EAAakB,cAAcjK,EAAW,KAAG8J,GACpD,IAAK6B,EAAM,MAAM,IAAI9T,EAAY,UAAW,KAAM,CAACqH,EAAGc,EAAW,OACjE1L,KAAK4Y,UAAUhY,KAAKyW,EAEvB,MAAMrX,KAAK4Y,UAAUhY,KAAK8K,EACvC,CACK,EACD7D,OAAO0G,eAAe6M,EAAmBrT,UAAW,YAAa,CAC7DmG,YAAY,IA2BhBkN,EAAmBrT,UAAU4I,IAAM,SAASuG,EAAOlK,EAAQuN,GACvD,IACI,IAAI3Y,EAAU5B,KAAKsR,MACfiK,EAAQ,0BAKZ,IAAKxM,EAAUmI,GAAQ,MAAM,IAAI3T,EAAY,UAAW,KAAM,CAAC2T,IAC/D,IAAIqE,EAAMxU,KAAKmQ,GAAQ,MAAM,IAAI3T,EAAY,UAAW,KAAM,CAAC2T,EAAOqE,EAAMnd,SAC5E,GAAI4B,KAAK0Y,SAASrR,QAAQ6P,IAAU,EAAG,MAAM,IAAI3T,EAAY,UAAW,KAAM,CAAC2T,IAC/E,GAAIlX,KAAKwb,OAAOtE,GAAQ,MAAM,IAAI3T,EAAY,UAAW,KAAM,CAAC2T,IAahE,OAZIlX,KAAKkS,WAAWvR,OAAS,GAAGkE,EAAK6H,UAAU,CAAC1M,KAAKkS,YAAalF,GAE9DlP,EAAUyc,KAAmC,IAAxBA,EAAOtM,cAC5B/M,QAAQC,KAAKvB,EAAQwB,IAAI,QAAS,CAAC,sBAAuB,aAG1DtD,EAAUyc,KAA+B,IAApBA,EAAOvM,UAC5B9M,QAAQC,KAAKvB,EAAQwB,IAAI,QAAS,CAAC,kBAAmB,cAKvB,IAA/BpB,KAAKgZ,OAAOhM,EAAQpL,IAA0B,GAGlD5B,KAAK4Y,UAAUhY,KAAKoM,GACpBhN,KAAKqb,MAAMza,KAAKsW,GAChBlX,KAAK6Y,aAAajY,KAAK2Z,GAEnBzc,EAAUyc,IACV1S,OAAO0G,eAAevO,KAAM,CAAC4B,GAAQ2Y,GACrC1S,OAAO0G,eAAevO,KAAMkX,EAAOqD,KAEnC1S,OAAO0G,eAAevO,KAAM,CAAC4B,GAAQ5B,KAAK2Z,mBAAmB/X,GAAO,IACpEiG,OAAO0G,eAAevO,KAAMkX,EAAOlX,KAAK2Z,mBAAmB/X,KAE/D5B,KAAKkZ,SAASlM,EAAQpL,GAEfA,EAEV,CAAC,MAAOjC,GACL,MAAM,IAAI4D,EAAY,UAAW5D,EAAO,CAACuX,EAAOlK,GAC5D,CACK,EACDnF,OAAO0G,eAAe6M,EAAmBrT,UAAW,MAAO,CACvDmG,YAAY,IAOhBkN,EAAmBrT,UAAUkS,MAAQ,WAEjC,IAAwB,IAApBja,KAAKqZ,WAAsB,OAAS,EAExC,IAAK,IAAItY,EAAI,EAAGA,EAAIf,KAAKsR,MAAOvQ,IAAK,CACjC,IAAIua,EAAWtb,KAAKgR,WAAWjQ,UACxBf,KAAKe,UACLf,KAAKsb,EACxB,CACQtb,KAAK4Y,UAAY,GACjB5Y,KAAK6Y,aAAe,GACpB7Y,KAAKqb,MAAQ,GAEbrb,KAAKsZ,YACR,EACDzR,OAAO0G,eAAe6M,EAAmBrT,UAAW,QAAS,CACzDmG,YAAY,IAShBkN,EAAmBrT,UAAU0T,WAAa,SAASvE,GAC/C,IAAKnI,EAAUmI,GAAS,MAAM,IAAI3T,EAAY,UAAW,KAAM,QAAQ2T,IACvE,OAAOlX,KAAKqb,MAAMhU,QAAQ6P,EAC7B,EACDrP,OAAO0G,eAAe6M,EAAmBrT,UAAW,aAAc,CAC9DmG,YAAY,IAShBkN,EAAmBrT,UAAUiJ,WAAa,SAASiI,GAC/C,GAAqB,iBAAVA,EAAoB,MAAM,IAAI1V,EAAY,UAAW,KAAM,QAAQ0V,IAC9E,OAAOjZ,KAAKqb,MAAMpC,EACrB,EACDpR,OAAO0G,eAAe6M,EAAmBrT,UAAW,aAAc,CAC9DmG,YAAY,IAShBkN,EAAmBrT,UAAUyT,OAAS,SAAStE,GAC3C,IAAKnI,EAAUmI,GAAQ,MAAM,IAAI3T,EAAY,UAAW,KAAM,QAAQ2T,IACtE,OAAOrP,OAAOE,UAAUzJ,eAAeiK,KAAKvI,KAAMkX,EACrD,EACDrP,OAAO0G,eAAe6M,EAAmBrT,UAAW,SAAU,CAC1DmG,YAAY,IAWhBkN,EAAmBrT,UAAU0S,IAAO,SAASC,EAAUC,GACnD,IAAIC,EAAS,GAEb,GAAuB,mBAAZF,EAAwB,MAAM,IAAInX,EAAY,UAAW,KAAM,QAAQmX,IAElF,IAAK,IAAI3Z,EAAI,EAAGA,EAAIf,KAAKW,OAAQI,IAAK,CAClC,IAAI1C,EAAM2B,KAAKgR,WAAWjQ,GAC1B6Z,EAAO7Z,GAAK2Z,EAASnS,KAAKoS,GAAW3a,KAAMA,KAAKe,GAAIA,EAAG1C,EAAK2B,KAAKqR,MAC7E,CACQ,OAAOuJ,CACV,EACD/S,OAAO0G,eAAe6M,EAAmBrT,UAAW,MAAO,CACvDmG,YAAY,IAUhBkN,EAAmBrT,UAAU8S,OAAS,SAAUH,EAAUC,GACtD,IAAIC,EAAS,GAEb,GAAuB,mBAAZF,EAAwB,MAAM,IAAInX,EAAY,UAAW,KAAM,QAAQmX,IAElF,IAAK,IAAI3Z,EAAI,EAAGA,EAAIf,KAAKW,OAAQI,IAAK,CAClC,IAAI1C,EAAM2B,KAAKgR,WAAWjQ,GACtB2Z,EAASnS,KAAKoS,GAAW3a,KAAMA,KAAKe,GAAIA,EAAG1C,EAAK2B,KAAKqR,QACrDuJ,EAAOha,KAAKZ,KAAKe,GAEjC,CACQ,OAAO6Z,CACV,EACD/S,OAAO0G,eAAe6M,EAAmBrT,UAAW,SAAU,CAC1DmG,YAAY,IAUhBkN,EAAmBrT,UAAU+S,OAAS,SAASJ,EAAUK,GACrD,IAAIC,EAAMD,EAEV,GAAuB,mBAAZL,EAAwB,MAAM,IAAInX,EAAY,UAAW,KAAM,QAAQmX,IAElF,IAAI,IAAI3Z,EAAE,EAAGA,EAAIf,KAAKW,OAAQI,IAAK,CAC/B,IAAI1C,EAAM2B,KAAKgR,WAAWjQ,GAC1Bia,EAAMA,EAAMN,EAASM,EAAKhb,KAAKe,GAAIA,EAAG1C,EAAK2B,KAAKqR,OAASrR,KAAKe,EAC1E,CACQ,OAAOia,CACf,EACInT,OAAO0G,eAAe6M,EAAmBrT,UAAW,SAAU,CAC1DmG,YAAY,IAUhBkN,EAAmBrT,UAAU2J,KAAO,SAASgJ,EAAUC,GACnD,GAAuB,mBAAZD,EAAwB,MAAM,IAAInX,EAAY,UAAW,KAAM,QAAQmX,IAElF,IAAK,IAAI3Z,EAAI,EAAGA,EAAIf,KAAKW,OAAQI,IAAK,CAClC,IAAI1C,EAAM2B,KAAKgR,WAAWjQ,GAC1B,GAAK2Z,EAASnS,KAAKoS,GAAW3a,KAAMA,KAAKe,GAAIA,EAAG1C,EAAK2B,KAAKqR,OAC1D,OAAOrR,KAAKe,EAExB,CACK,EACD8G,OAAO0G,eAAe6M,EAAmBrT,UAAW,OAAQ,CACxDmG,YAAY,IAShBkN,EAAmBrT,UAAU9B,QAAU,SAASyU,EAAUC,GACtD,GAAuB,mBAAZD,EAAwB,MAAM,IAAInX,EAAY,WAAY,KAAM,QAAQmX,IAEnF,IAAK,IAAI3Z,EAAI,EAAGA,EAAGf,KAAKW,OAAQI,IAAK,CACjC,IAAI1C,EAAM2B,KAAKgR,WAAWjQ,GAC1B2Z,EAASnS,KAAKoS,GAAW3a,KAAMA,KAAKe,GAAIA,EAAG1C,EAAK2B,KAAKqR,MACjE,CACK,EACDxJ,OAAO0G,eAAe6M,EAAmBrT,UAAW,UAAW,CAC3DmG,YAAY,IAUhBkN,EAAmBrT,UAAUkT,KAAO,SAASP,EAAUC,GACnD,GAAuB,mBAAZD,EAAwB,MAAM,IAAInX,EAAY,WAAY,KAAM,QAAQmX,IAEnF,IAAI,IAAI3Z,EAAE,EAAGA,EAAIf,KAAKW,OAAQI,IAAI,CAC9B,IAAI1C,EAAM2B,KAAKgR,WAAWjQ,GAC1B,GAAI2Z,EAASnS,KAAKoS,GAAW3a,KAAMA,KAAKe,GAAIA,EAAG1C,EAAK2B,KAAKqR,OAAQ,OAAO,CACpF,CACQ,OAAO,CACV,EACDxJ,OAAO0G,eAAe6M,EAAmBrT,UAAW,OAAQ,CACxDmG,YAAY,IAUhBkN,EAAmBrT,UAAUmT,MAAQ,SAASR,EAAUC,GACpD,GAAuB,mBAAZD,EAAwB,MAAM,IAAInX,EAAY,WAAY,KAAM,QAAQmX,IAEnF,IAAI,IAAI3Z,EAAE,EAAGA,EAAIf,KAAKW,OAAQI,IAAI,CAC9B,IAAI1C,EAAM2B,KAAKgR,WAAWjQ,GAC1B,IAAK2Z,EAASnS,KAAKoS,GAAW3a,KAAMA,KAAKe,GAAIA,EAAG1C,EAAK2B,KAAKqR,OAAQ,OAAO,CACrF,CACY,OAAO,CACd,EACDxJ,OAAO0G,eAAe6M,EAAmBrT,UAAW,QAAS,CACzDmG,YAAY,IAUhBkN,EAAmBrT,UAAUoT,UAAY,SAAST,EAAUC,GACxD,GAAuB,mBAAZD,EAAwB,MAAM,IAAInX,EAAY,WAAY,KAAM,QAAQmX,IAEnF,IAAK,IAAI3Z,EAAI,EAAGA,EAAIf,KAAKW,OAAQI,IAAK,CAClC,IAAI1C,EAAM2B,KAAKgR,WAAWjQ,GAC1B,GAAK2Z,EAASnS,KAAKoS,GAAW3a,KAAMA,KAAKe,GAAIA,EAAG1C,EAAK2B,KAAKqR,OAC1D,OAAOtQ,CAEnB,CACQ,OAAS,CACZ,EACD8G,OAAO0G,eAAe6M,EAAmBrT,UAAW,YAAa,CAC7DmG,YAAY,IAGTkN,CAEX,CArfsB,CAqfpB7C"}